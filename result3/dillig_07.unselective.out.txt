[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_07
[  8%] Building CXX object CMakeFiles/dillig_07.dir/test/dillig_07.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_07.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_07.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_07.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_07.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_07.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_07.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_07.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_07.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_07.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_07.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_07.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_07
[100%] Built target dillig_07
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:1205-]|-->> [33m(1 + 0.0003540449637103912*i - 0.006992388033280226*j - 0.006284298105859443*n >= 0)  &&  (1 - 0.004499437570303712*i - 0.003493680936941706*j + 0.004525904850129028*n >= 0)  &&  (1 + 0.0002401056464844532*i - 0.0003201408619792709*j + 0.0126455640481812*n >= 0)  &&  (1 + 0.009905587370376103*i + 0.004457514316669246*j - 0.002414486921529175*n >= 0)  &&  (1 + 0.0187012987012987*i + 0.0004155844155844156*j - 0.008103896103896105*n >= 0)  &&  (1 + 0.01347659806956838*i - 0.01857585139318885*j - 0.01420506283008559*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:2708-]|-->> [33m(1 + 0.0003540449637103912*i - 0.006992388033280226*j - 0.006284298105859443*n >= 0)  &&  (1 - 0.02294197031039136*i - 0.01889338731443995*j - 0.004048582995951417*n >= 0)  &&  (1 + 0.0002401056464844532*i - 0.0003201408619792709*j + 0.0126455640481812*n >= 0)  &&  (1 + 0.009905587370376103*i + 0.004457514316669246*j - 0.002414486921529175*n >= 0)  &&  (1 + 0.0187012987012987*i + 0.0004155844155844156*j - 0.008103896103896105*n >= 0)  &&  (1 + 0.01347659806956838*i - 0.01857585139318885*j - 0.01420506283008559*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:3963-]|-->> [33m(1 + 0.0003540449637103912*i - 0.006992388033280226*j - 0.006284298105859443*n >= 0)  &&  (1 + 0.05220883534136546*i - 0.0321285140562249*j - 0.01606425702811245*n >= 0)  &&  (1 + 0.0002401056464844532*i - 0.0003201408619792709*j + 0.0126455640481812*n >= 0)  &&  (1 + 0.009905587370376103*i + 0.004457514316669246*j - 0.002414486921529175*n >= 0)  &&  (1 + 0.0187012987012987*i + 0.0004155844155844156*j - 0.008103896103896105*n >= 0)  &&  (1 + 0.01347659806956838*i - 0.01857585139318885*j - 0.01420506283008559*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0)  &&  (1 - 0.02294197031039136*i - 0.01889338731443995*j - 0.004048582995951417*n >= 0)  &&  (1 + 0.03898170246618934*i + 0.005568814638027049*j - 0.006364359586316627*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [1+:5567-]|-->> [33m(1 + 0.0003540449637103912*i - 0.006992388033280226*j - 0.006284298105859443*n >= 0)  &&  (1 + 0.05220883534136546*i - 0.0321285140562249*j - 0.01606425702811245*n >= 0)  &&  (1 + 0.0002401056464844532*i - 0.0003201408619792709*j + 0.0126455640481812*n >= 0)  &&  (1 + 0.009905587370376103*i + 0.004457514316669246*j - 0.002414486921529175*n >= 0)  &&  (1 + 0.0187012987012987*i + 0.0004155844155844156*j - 0.008103896103896105*n >= 0)  &&  (1 + 0.01347659806956838*i - 0.01857585139318885*j - 0.01420506283008559*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0)  &&  (1 - 0.02294197031039136*i - 0.01889338731443995*j - 0.004048582995951417*n >= 0)  &&  (1 + 0.03898170246618934*i + 0.005568814638027049*j - 0.006364359586316627*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(476 - 11*i - 9*j >= 0)  &&  (249 + 13*i - 8*j - 4*n >= 0)  &&  (415 + 5*j + 8*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(476 - 11*i - 9*j >= 0)  &&  (249 + 13*i - 8*j - 4*n >= 0)  &&  (415 + 5*j + 8*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,63) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,64) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,65) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,66) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,67) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,68) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [541+:6849-]|-->> [33m(1 + 0.05579588073400076*i - 0.03433592660553893*j + 8.465596580353729e-06*n >= 0)  &&  (4.413463732225795 + 0.0006000241030179321*i - 0.0005893360824265892*j - 0.04876376760322564*n >= 0)  &&  (4.250283125707816 + 0.00792751981879955*i + 0.006795016987542471*j - 0.04643261608154022*n >= 0)  &&  (1 - 0.03476151221936266*i - 0.0163606283339461*j + 0.05110927924591462*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0)  &&  (2.405860133589274 + 0.0516462967204621*i - 0.05164138656364752*j - 0.02008371619413246*n >= 0)  &&  (1.432671081677705 + 0.04061810154525386*i + 0.008830022075055188*j - 0.00618101545253863*n >= 0)  &&  (2.232704402515722 + 0.06289308176100622*i - 0.02767295597484274*j - 0.01761006289308173*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [541+:7958-]|-->> [33m(1 + 0.181764204380317*i - 0.1817517007869892*j - 1.814174470426977e-06*n >= 0)  &&  (22.20744047310109 + 0.1211887175170206*i - 0.1211820307469929*j - 0.3029634353300157*n >= 0)  &&  (18.07317073170731 + 0.1951219512195125*i - 0.2439024390243909*n >= 0)  &&  (5.347826086956516 + 0.1242236024844719*i + 0.07453416149068312*j - 0.06211180124223592*n >= 0)  &&  (2.027900146842878 + 0.05873715124816446*i + 0.04698972099853157*j - 0.01468428781204112*n >= 0)  &&  (4.413463732225795 + 0.0006000241030179321*i - 0.0005893360824265892*j - 0.04876376760322564*n >= 0)  &&  (4.250283125707816 + 0.00792751981879955*i + 0.006795016987542471*j - 0.04643261608154022*n >= 0)  &&  (1 - 0.03476151221936266*i - 0.0163606283339461*j + 0.05110927924591462*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [541+:9497-]|-->> [33m(1 + 0.181764204380317*i - 0.1817517007869892*j - 1.814174470426977e-06*n >= 0)  &&  (22.20744047310109 + 0.1211887175170206*i - 0.1211820307469929*j - 0.3029634353300157*n >= 0)  &&  (18.07317073170731 + 0.1951219512195125*i - 0.2439024390243909*n >= 0)  &&  (5.347826086956516 + 0.1242236024844719*i + 0.07453416149068312*j - 0.06211180124223592*n >= 0)  &&  (2.027900146842878 + 0.05873715124816446*i + 0.04698972099853157*j - 0.01468428781204112*n >= 0)  &&  (4.413463732225795 + 0.0006000241030179321*i - 0.0005893360824265892*j - 0.04876376760322564*n >= 0)  &&  (4.250283125707816 + 0.00792751981879955*i + 0.006795016987542471*j - 0.04643261608154022*n >= 0)  &&  (1 - 0.03476151221936266*i - 0.0163606283339461*j + 0.05110927924591462*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(11 + 2*i - 2*j >= 0)  &&  (73 - n >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(11 + 2*i - 2*j >= 0)  &&  (73 - n >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,74) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,75) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,76) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,77) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,78) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1169+:12560-]|-->> [33m(1 + 0.4999207592657042*i - 0.4999207592657042*j - 4.226172496402114e-06*n >= 0)  &&  (1 + 0.3844834636798477*i + 0.07689669273596954*j - 9.146518197944431e-06*n >= 0)  &&  (1 + 0.1470331790982808*i + 0.08821990745896846*j - 4.650190178479008e-06*n >= 0)  &&  (1 + 0.06096303243276358*i + 0.04877042594621087*j - 5.500482738035606e-06*n >= 0)  &&  (6.395574809159422 + 0.001113611926355488*i - 0.001106789229677196*j - 0.06661203468098054*n >= 0)  &&  (4.066246056782333 + 0.02397476340694006*i + 0.02271293375394322*j - 0.03785488958990538*n >= 0)  &&  (1 - 0.03475546254875141*i - 0.01635407529708754*j + 0.05111767795901326*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1169+:14777-]|-->> [33m(1 + 0.4999207592657042*i - 0.4999207592657042*j - 4.226172496402114e-06*n >= 0)  &&  (1 + 0.3844834636798477*i + 0.07689669273596954*j - 9.146518197944431e-06*n >= 0)  &&  (1 + 0.1470331790982808*i + 0.08821990745896846*j - 4.650190178479008e-06*n >= 0)  &&  (1 + 0.06096303243276358*i + 0.04877042594621087*j - 5.500482738035606e-06*n >= 0)  &&  (6.395574809159422 + 0.001113611926355488*i - 0.001106789229677196*j - 0.06661203468098054*n >= 0)  &&  (4.066246056782333 + 0.02397476340694006*i + 0.02271293375394322*j - 0.03785488958990538*n >= 0)  &&  (1 - 0.03475546254875141*i - 0.01635407529708754*j + 0.05111767795901326*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 + i - j >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0)  &&  (96 - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(2 + i - j >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0)  &&  (96 - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,97) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,98) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,99) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,100) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,101) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,102) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,103) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,104) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1981+:15906-]|-->> [33m(1 + 0.4999059830566367*i - 0.4999059830566367*j + 2.305503347344029e-06*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1981+:17682-]|-->> [33m(1 + 0.4999059830566367*i - 0.4999059830566367*j + 2.305503347344029e-06*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0)  &&  (1 - 0.003664441826985997*i + 0.01204030886009685*j + 0.01910744666928412*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 + i - j >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(2 + i - j >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,2,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-5,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1981+:19021-]|-->> [33m(1 - 0.07692307692307691*i + 0.2307692307692307*j + 0.3076923076923077*n >= 0)  &&  (1 + 0.9995849974829*i - 1.999161936664497*j + 0.9995849974829*n >= 0)  &&  (1 + 0.4999059830566367*i - 0.4999059830566367*j + 2.305503347344029e-06*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1981+:21323-]|-->> [33m(1 - 0.07692307692307691*i + 0.2307692307692307*j + 0.3076923076923077*n >= 0)  &&  (1 + 0.9995849974829*i - 1.999161936664497*j + 0.9995849974829*n >= 0)  &&  (1 + 0.4999059830566367*i - 0.4999059830566367*j + 2.305503347344029e-06*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(13 - i + 3*j + 4*n >= 0)  &&  (1 + i - 2*j + n >= 0)  &&  (2 + i - j >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(13 - i + 3*j + 4*n >= 0)  &&  (1 + i - 2*j + n >= 0)  &&  (2 + i - j >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1981+:22054-]|-->> [33m(1 + 1.999991441139302*i - 1.999983126252972*j - 8.231790594948052e-06*n >= 0)  &&  (1 - 0.07692307692307691*i + 0.2307692307692307*j + 0.3076923076923077*n >= 0)  &&  (1 + 0.9995849974829*i - 1.999161936664497*j + 0.9995849974829*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1981+:23183-]|-->> [33m(1 + 1.999991441139302*i - 1.999983126252972*j - 8.231790594948052e-06*n >= 0)  &&  (1 - 0.07692307692307691*i + 0.2307692307692307*j + 0.3076923076923077*n >= 0)  &&  (1 + 0.9995849974829*i - 1.999161936664497*j + 0.9995849974829*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*j >= 0)  &&  (13 - i + 3*j + 4*n >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(1 + 2*i - 2*j >= 0)  &&  (13 - i + 3*j + 4*n >= 0)  &&  (428 - 15*i - 7*j + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,2,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1981+:24299-]|-->> [33m(1 - 0.9995986196893822*i - 0.9995986196893822*j + 1.999204958230892*n >= 0)  &&  (1 + 1.999991441139302*i - 1.999983126252972*j - 8.231790594948052e-06*n >= 0)  &&  (1 - 0.07692307692307691*i + 0.2307692307692307*j + 0.3076923076923077*n >= 0)  &&  (1 + 0.9995849974829*i - 1.999161936664497*j + 0.9995849974829*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1981+:25896-]|-->> [33m(1 - 0.9995986196893822*i - 0.9995986196893822*j + 1.999204958230892*n >= 0)  &&  (1 + 1.999991441139302*i - 1.999983126252972*j - 8.231790594948052e-06*n >= 0)  &&  (1 - 0.07692307692307691*i + 0.2307692307692307*j + 0.3076923076923077*n >= 0)  &&  (1 + 0.9995849974829*i - 1.999161936664497*j + 0.9995849974829*n >= 0)  &&  (1 + 0.3844836507920344*i + 0.07689673015840688*j - 9.133545085582284e-06*n >= 0)  &&  (1 + 0.1697571059625487*i + 0.09430950331252705*j - 8.513730325621083e-06*n >= 0)  &&  (1 + 0.07422411334418406*i + 0.05675961608672899*j - 4.200853618574474e-06*n >= 0)  &&  (30.40634111654867 + 0.0201993280677249*i - 0.02019399764181989*j - 0.2827532799668147*n >= 0)  &&  (24.48387096774189 + 0.09677419354838712*i + 0.06451612903225808*j - 0.2258064516129035*n >= 0)  &&  (8.505154639175302 + 0.09278350515463964*i + 0.08247422680412413*j - 0.07216494845360866*n >= 0)  &&  (2.983651226158045 + 0.05177111716621264*i + 0.04904632152588566*j - 0.01907356948228889*n >= 0)  &&  (1 - 0.0347564144569986*i - 0.01635500211668915*j + 0.05111684313111219*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) [0m

=====================time=========================
