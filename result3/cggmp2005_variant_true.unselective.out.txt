[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target cggmp2005_variant_true
[  8%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/test/cggmp2005_variant_true.cpp.o
[ 16%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/instrumentation.cpp.o
Linking CXX executable cggmp2005_variant_true
[100%] Built target cggmp2005_variant_true
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	2	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1694-]|-->> [33m(1.008402678014799 - 0.002331065513783103*low + 0.008131623885289893*mid - 0.006071612501016453*high >= 0)  &&  (1.016232022438384 + 0.01348690099659844*low - 0.001432237273975055*mid - 0.007399892582204452*high >= 0)  &&  (1.012264248170669 - 0.01381016180562713*low - 0.003607131814902608*mid + 0.001545913634958261*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (0.9896198625333146 - 0.007574694908121756*low - 0.01346612428110535*mid + 0.01795483237480713*high >= 0)  &&  (1.020964360587002 - 0.001108460444829996*low - 0.006602568736596063*mid - 0.007180895925203017*high >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:3404-]|-->> [33m(1.016863406408094 - 0.02079820123664981*low + 0.01068015739179314*mid + 0.003934794828555369*high >= 0)  &&  (1.023729021946272 + 0.004794983709350218*low - 0.01413905452757116*mid - 0.004794983709350218*high >= 0)  &&  (1.012264248170669 - 0.01381016180562713*low - 0.003607131814902608*mid + 0.001545913634958261*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (0.9896198625333146 - 0.007574694908121756*low - 0.01346612428110535*mid + 0.01795483237480713*high >= 0)  &&  (1.020964360587002 - 0.001108460444829996*low - 0.006602568736596063*mid - 0.007180895925203017*high >= 0)  &&  (1.008402678014799 - 0.002331065513783103*low + 0.008131623885289893*mid - 0.006071612501016453*high >= 0)  &&  (1.013082583810303 + 0.03679476696647588*low + 0.01144726083401472*mid - 0.01226492232215863*high >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:5881-]|-->> [33m(1.012041598248495 - 0.01860974274767378*low - 0.04050355774493705*mid + 0.01423097974822113*high >= 0)  &&  (1.016863406408094 - 0.02079820123664981*low + 0.01068015739179314*mid + 0.003934794828555369*high >= 0)  &&  (1.012264248170669 - 0.01381016180562713*low - 0.003607131814902608*mid + 0.001545913634958261*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (0.9896198625333146 - 0.007574694908121756*low - 0.01346612428110535*mid + 0.01795483237480713*high >= 0)  &&  (1.020964360587002 - 0.001108460444829996*low - 0.006602568736596063*mid - 0.007180895925203017*high >= 0)  &&  (1.008402678014799 - 0.002331065513783103*low + 0.008131623885289893*mid - 0.006071612501016453*high >= 0)  &&  (1.013082583810303 + 0.03679476696647588*low + 0.01144726083401472*mid - 0.01226492232215863*high >= 0)  &&  (1.023729021946272 + 0.004794983709350218*low - 0.01413905452757116*mid - 0.004794983709350218*high >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:7692-]|-->> [33m(0.8818897637795275 + 0.01574803149606299*low - 0.07086614173228346*mid + 0.1023622047244094*high >= 0)  &&  (0.9502196193265007 + 0.04978038067349927*low - 0.03806734992679356*mid + 0.04392386530014641*high >= 0)  &&  (1.012264248170669 - 0.01381016180562713*low - 0.003607131814902608*mid + 0.001545913634958261*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (1.012041598248495 - 0.01860974274767378*low - 0.04050355774493705*mid + 0.01423097974822113*high >= 0)  &&  (1.020964360587002 - 0.001108460444829996*low - 0.006602568736596063*mid - 0.007180895925203017*high >= 0)  &&  (1.008402678014799 - 0.002331065513783103*low + 0.008131623885289893*mid - 0.006071612501016453*high >= 0)  &&  (1.013082583810303 + 0.03679476696647588*low + 0.01144726083401472*mid - 0.01226492232215863*high >= 0)  &&  (1.023729021946272 + 0.004794983709350218*low - 0.01413905452757116*mid - 0.004794983709350218*high >= 0)  &&  (1.016863406408094 - 0.02079820123664981*low + 0.01068015739179314*mid + 0.003934794828555369*high >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:8976-]|-->> [33m(1.016968325791855 - 0.003393665158371041*low + 0.01923076923076923*mid - 0.01357466063348416*high >= 0)  &&  (0.8818897637795275 + 0.01574803149606299*low - 0.07086614173228346*mid + 0.1023622047244094*high >= 0)  &&  (0.9502196193265007 + 0.04978038067349927*low - 0.03806734992679356*mid + 0.04392386530014641*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (1.012041598248495 - 0.01860974274767378*low - 0.04050355774493705*mid + 0.01423097974822113*high >= 0)  &&  (1.020964360587002 - 0.001108460444829996*low - 0.006602568736596063*mid - 0.007180895925203017*high >= 0)  &&  (1.016863406408094 - 0.02079820123664981*low + 0.01068015739179314*mid + 0.003934794828555369*high >= 0)  &&  (1.013082583810303 + 0.03679476696647588*low + 0.01144726083401472*mid - 0.01226492232215863*high >= 0)  &&  (1.023729021946272 + 0.004794983709350218*low - 0.01413905452757116*mid - 0.004794983709350218*high >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [2+:10431-]|-->> [33m(1.016968325791855 - 0.003393665158371041*low + 0.01923076923076923*mid - 0.01357466063348416*high >= 0)  &&  (0.8818897637795275 + 0.01574803149606299*low - 0.07086614173228346*mid + 0.1023622047244094*high >= 0)  &&  (0.9502196193265007 + 0.04978038067349927*low - 0.03806734992679356*mid + 0.04392386530014641*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (1.012041598248495 - 0.01860974274767378*low - 0.04050355774493705*mid + 0.01423097974822113*high >= 0)  &&  (1.020964360587002 - 0.001108460444829996*low - 0.006602568736596063*mid - 0.007180895925203017*high >= 0)  &&  (1.016863406408094 - 0.02079820123664981*low + 0.01068015739179314*mid + 0.003934794828555369*high >= 0)  &&  (1.013082583810303 + 0.03679476696647588*low + 0.01144726083401472*mid - 0.01226492232215863*high >= 0)  &&  (1.023729021946272 + 0.004794983709350218*low - 0.01413905452757116*mid - 0.004794983709350218*high >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(524 + 10*mid - 7*high >= 0)  &&  (112 + 2*low - 9*mid + 13*high >= 0)  &&  (1150 + 42*low + 13*mid - 14*high >= 0)  &&  (302 + 5*mid + 6*high >= 0)  &&  (924 - 17*low - 37*mid + 13*high >= 0)  &&  (1333 - 27*low + 14*mid >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(524 + 10*mid - 7*high >= 0)  &&  (112 + 2*low - 9*mid + 13*high >= 0)  &&  (1150 + 42*low + 13*mid - 14*high >= 0)  &&  (302 + 5*mid + 6*high >= 0)  &&  (924 - 17*low - 37*mid + 13*high >= 0)  &&  (1333 - 27*low + 14*mid >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,132,264) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,133,266) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,134,268) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,135,270) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,136,272) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,137,274) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,138,276) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,139,278) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1094+:13699-]|-->> [33m(1.000004513417003 + 0.07689070273132081*low + 0.1537927769759082*mid - 0.07689521614832362*high >= 0)  &&  (1.000003779236741 - 0.07140769817235437*low - 0.1428044421922123*mid + 0.07140391893561304*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (2.850169142321262 + 0.002621688299441143*low + 0.01855527353181435*mid - 0.01593292145051603*high >= 0)  &&  (0.9999993336187112 - 0.0165528709771727*low + 0.01429594905402386*mid + 0.0165535373584615*high >= 0)  &&  (0.9999995384663803 + 0.0375802573647334*low + 0.01436410178835535*mid - 0.007181820127367876*high >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1094+:16277-]|-->> [33m(1.000004513417003 + 0.07689070273132081*low + 0.1537927769759082*mid - 0.07689521614832362*high >= 0)  &&  (1.000003779236741 - 0.07140769817235437*low - 0.1428044421922123*mid + 0.07140391893561304*high >= 0)  &&  (0.9723631275144307 + 0.008396011894350184*low + 0.01609235613083785*mid + 0.01924086059121917*high >= 0)  &&  (2.850169142321262 + 0.002621688299441143*low + 0.01855527353181435*mid - 0.01593292145051603*high >= 0)  &&  (0.9999993336187112 - 0.0165528709771727*low + 0.01429594905402386*mid + 0.0165535373584615*high >= 0)  &&  (0.9999995384663803 + 0.0375802573647334*low + 0.01436410178835535*mid - 0.007181820127367876*high >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(13 + low + 2*mid - high >= 0)  &&  (14 - low - 2*mid + high >= 0)  &&  (348 + 13*low + 5*mid >= 0)  &&  (420 - 7*low + 6*mid + 7*high >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(13 + low + 2*mid - high >= 0)  &&  (14 - low - 2*mid + high >= 0)  &&  (348 + 13*low + 5*mid >= 0)  &&  (420 - 7*low + 6*mid + 7*high >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-6,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1094+:18145-]|-->> [33m(0.9459459459459459 + 0.05405405405405405*low + 0.3243243243243243*mid >= 0)  &&  ( -0.2000000000000001 + 0.4*low + 0.8*high >= 0)  &&  (1.000004513417003 + 0.07689070273132081*low + 0.1537927769759082*mid - 0.07689521614832362*high >= 0)  &&  (1.000003779236741 - 0.07140769817235437*low - 0.1428044421922123*mid + 0.07140391893561304*high >= 0)  &&  (2.850169142321262 + 0.002621688299441143*low + 0.01855527353181435*mid - 0.01593292145051603*high >= 0)  &&  (0.9999993336187112 - 0.0165528709771727*low + 0.01429594905402386*mid + 0.0165535373584615*high >= 0)  &&  (0.9999995384663803 + 0.0375802573647334*low + 0.01436410178835535*mid - 0.007181820127367876*high >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1094+:19490-]|-->> [33m(28.98656045733776 - 0.1130403275662417*low - 0.02472478763787528*mid - 0.08830868696285288*high >= 0)  &&  (0.9459459459459459 + 0.05405405405405405*low + 0.3243243243243243*mid >= 0)  &&  ( -0.2000000000000001 + 0.4*low + 0.8*high >= 0)  &&  (1.000004513417003 + 0.07689070273132081*low + 0.1537927769759082*mid - 0.07689521614832362*high >= 0)  &&  (1.000003779236741 - 0.07140769817235437*low - 0.1428044421922123*mid + 0.07140391893561304*high >= 0)  &&  (0.9999993336187112 - 0.0165528709771727*low + 0.01429594905402386*mid + 0.0165535373584615*high >= 0)  &&  (0.9999995384663803 + 0.0375802573647334*low + 0.01436410178835535*mid - 0.007181820127367876*high >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1094+:21324-]|-->> [33m(28.98656045733776 - 0.1130403275662417*low - 0.02472478763787528*mid - 0.08830868696285288*high >= 0)  &&  (0.9459459459459459 + 0.05405405405405405*low + 0.3243243243243243*mid >= 0)  &&  ( -0.2000000000000001 + 0.4*low + 0.8*high >= 0)  &&  (1.000004513417003 + 0.07689070273132081*low + 0.1537927769759082*mid - 0.07689521614832362*high >= 0)  &&  (1.000003779236741 - 0.07140769817235437*low - 0.1428044421922123*mid + 0.07140391893561304*high >= 0)  &&  (0.9999993336187112 - 0.0165528709771727*low + 0.01429594905402386*mid + 0.0165535373584615*high >= 0)  &&  (0.9999995384663803 + 0.0375802573647334*low + 0.01436410178835535*mid - 0.007181820127367876*high >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(14 - low - 2*mid + high >= 0)  &&  (35 + 2*low + 12*mid >= 0)  &&  ( -1 + 2*low + 4*high >= 0)  &&  (13 + low + 2*mid - high >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(14 - low - 2*mid + high >= 0)  &&  (35 + 2*low + 12*mid >= 0)  &&  ( -1 + 2*low + 4*high >= 0)  &&  (13 + low + 2*mid - high >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
