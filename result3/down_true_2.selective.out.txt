[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down_true_2
[  8%] Building CXX object CMakeFiles/down_true_2.dir/test/down_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/down_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable down_true_2
[100%] Built target down_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[0][0m
[33m  3)---->[1] :::::: 1	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:826-]|-->> [33m(0.9843808107103013 + 0.007809594644849386*j - 0.008181480104127928*k + 0.01561918928969877*n >= 0)  &&  (0.9929637773405856 - 0.00300891100567064*j + 0.005832658257146164*k + 0.00703622265941442*n >= 0)  &&  (1.018106903607366 - 0.007007315637525577*j - 0.004708916108417187*k - 0.006390671861423326*n >= 0)  &&  (1.020797465739274 - 0.005371530886302597*j + 0.0002754631223744921*k - 0.01570139797534605*n >= 0)  &&  (1.003922196430001 + 0.01152645481469623*j - 0.003441927479388457*k - 0.0039221964300008*n >= 0)  &&  (0.99769402608633 - 0.005620811414570872*j + 0.01585357065648195*k + 0.002305973913670102*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:1289-]|-->> [33m(1.03774632250902 - 0.00527338329170136*j - 0.0163752428531779*k - 0.01609769636414099*n >= 0)  &&  (0.9929637773405856 - 0.00300891100567064*j + 0.005832658257146164*k + 0.00703622265941442*n >= 0)  &&  (1.018106903607366 - 0.007007315637525577*j - 0.004708916108417187*k - 0.006390671861423326*n >= 0)  &&  (1.020797465739274 - 0.005371530886302597*j + 0.0002754631223744921*k - 0.01570139797534605*n >= 0)  &&  (1.003922196430001 + 0.01152645481469623*j - 0.003441927479388457*k - 0.0039221964300008*n >= 0)  &&  (0.99769402608633 - 0.005620811414570872*j + 0.01585357065648195*k + 0.002305973913670102*n >= 0)  &&  (0.9843808107103013 + 0.007809594644849386*j - 0.008181480104127928*k + 0.01561918928969877*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:3069-]|-->> [33m(1.031343283582089 - 0.002985074626865672*j + 0.02238805970149254*k - 0.03134328358208955*n >= 0)  &&  (0.9929637773405856 - 0.00300891100567064*j + 0.005832658257146164*k + 0.00703622265941442*n >= 0)  &&  (1.051764705882353 - 0.02352941176470588*j - 0.003529411764705882*k - 0.02470588235294117*n >= 0)  &&  (0.9927303827239683 + 0.01368398546076545*j + 0.02480222364763737*k + 0.007269617276031644*n >= 0)  &&  (1.003922196430001 + 0.01152645481469623*j - 0.003441927479388457*k - 0.0039221964300008*n >= 0)  &&  (0.99769402608633 - 0.005620811414570872*j + 0.01585357065648195*k + 0.002305973913670102*n >= 0)  &&  (0.9843808107103013 + 0.007809594644849386*j - 0.008181480104127928*k + 0.01561918928969877*n >= 0)  &&  (1.03774632250902 - 0.00527338329170136*j - 0.0163752428531779*k - 0.01609769636414099*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:4180-]|-->> [33m(0.9770992366412213 + 0.02524955960070464*j - 0.00352319436288902*k + 0.02290076335877862*n >= 0)  &&  (0.9929637773405856 - 0.00300891100567064*j + 0.005832658257146164*k + 0.00703622265941442*n >= 0)  &&  (1.031343283582089 - 0.002985074626865672*j + 0.02238805970149254*k - 0.03134328358208955*n >= 0)  &&  (1.051764705882353 - 0.02352941176470588*j - 0.003529411764705882*k - 0.02470588235294117*n >= 0)  &&  (1.003922196430001 + 0.01152645481469623*j - 0.003441927479388457*k - 0.0039221964300008*n >= 0)  &&  (0.99769402608633 - 0.005620811414570872*j + 0.01585357065648195*k + 0.002305973913670102*n >= 0)  &&  (0.9843808107103013 + 0.007809594644849386*j - 0.008181480104127928*k + 0.01561918928969877*n >= 0)  &&  (1.03774632250902 - 0.00527338329170136*j - 0.0163752428531779*k - 0.01609769636414099*n >= 0)  &&  (0.9927303827239683 + 0.01368398546076545*j + 0.02480222364763737*k + 0.007269617276031644*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:4802-]|-->> [33m(0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9770992366412213 + 0.02524955960070464*j - 0.00352319436288902*k + 0.02290076335877862*n >= 0)  &&  (1.031343283582089 - 0.002985074626865672*j + 0.02238805970149254*k - 0.03134328358208955*n >= 0)  &&  (1.051764705882353 - 0.02352941176470588*j - 0.003529411764705882*k - 0.02470588235294117*n >= 0)  &&  (1.003922196430001 + 0.01152645481469623*j - 0.003441927479388457*k - 0.0039221964300008*n >= 0)  &&  (0.99769402608633 - 0.005620811414570872*j + 0.01585357065648195*k + 0.002305973913670102*n >= 0)  &&  (0.9927303827239683 + 0.01368398546076545*j + 0.02480222364763737*k + 0.007269617276031644*n >= 0)  &&  (1.03774632250902 - 0.00527338329170136*j - 0.0163752428531779*k - 0.01609769636414099*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:5570-]|-->> [33m(0.9924563884959925 - 0.01037246581801037*j + 0.04148986327204149*k + 0.007543611504007544*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9770992366412213 + 0.02524955960070464*j - 0.00352319436288902*k + 0.02290076335877862*n >= 0)  &&  (1.031343283582089 - 0.002985074626865672*j + 0.02238805970149254*k - 0.03134328358208955*n >= 0)  &&  (1.003922196430001 + 0.01152645481469623*j - 0.003441927479388457*k - 0.0039221964300008*n >= 0)  &&  (1.051764705882353 - 0.02352941176470588*j - 0.003529411764705882*k - 0.02470588235294117*n >= 0)  &&  (0.9927303827239683 + 0.01368398546076545*j + 0.02480222364763737*k + 0.007269617276031644*n >= 0)  &&  (1.03774632250902 - 0.00527338329170136*j - 0.0163752428531779*k - 0.01609769636414099*n >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [2+:8817-]|-->> [33m(0.9924563884959925 - 0.01037246581801037*j + 0.04148986327204149*k + 0.007543611504007544*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9770992366412213 + 0.02524955960070464*j - 0.00352319436288902*k + 0.02290076335877862*n >= 0)  &&  (1.031343283582089 - 0.002985074626865672*j + 0.02238805970149254*k - 0.03134328358208955*n >= 0)  &&  (1.003922196430001 + 0.01152645481469623*j - 0.003441927479388457*k - 0.0039221964300008*n >= 0)  &&  (1.051764705882353 - 0.02352941176470588*j - 0.003529411764705882*k - 0.02470588235294117*n >= 0)  &&  (0.9927303827239683 + 0.01368398546076545*j + 0.02480222364763737*k + 0.007269617276031644*n >= 0)  &&  (1.03774632250902 - 0.00527338329170136*j - 0.0163752428531779*k - 0.01609769636414099*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 7 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(96 - j + 4*k >= 0)  &&  (18 + n >= 0)  &&  (2385 - 38*k - 37*n >= 0)  &&  (230 + 5*k - 7*n >= 0)  &&  (87 + j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(96 - j + 4*k >= 0)  &&  (18 + n >= 0)  &&  (2385 - 38*k - 37*n >= 0)  &&  (230 + 5*k - 7*n >= 0)  &&  (87 + j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (32,32,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (33,33,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (34,34,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (35,35,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (36,36,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (37,37,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (38,38,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (39,39,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [294+:9391-]|-->> [33m(4.166389459403174 + 0.04599522287431623*j - 0.04600660912984825*k - 0.08117808706249807*n >= 0)  &&  (5.810572687224667 + 0.008810572687224655*j - 0.06607929515418501*k - 0.06607929515418501*n >= 0)  &&  (1.365236935755759 + 0.0003746019853905231*j - 0.02359992507960292*k + 0.01386027345944934*n >= 0)  &&  (0.9478531259891493 + 0.007046874866331181*j - 0.007046874866331181*k + 0.05214687401085074*n >= 0)  &&  (0.9770992366412213 + 0.02524955960070464*j - 0.00352319436288902*k + 0.02290076335877862*n >= 0)  &&  (1.301158301158301 + 0.02316602316602316*j + 0.03346203346203346*k - 0.00772200772200772*n >= 0)  &&  (1.525047228193603 - 0.05721668512366188*j + 0.05721668512366188*k - 0.01346274944086162*n >= 0)  &&  (2.495207667731629 - 0.06709265175718847*j + 0.04153354632587859*k - 0.01277955271565494*n >= 0)  &&  (3.396927016645327 - 0.0499359795134443*j - 0.006402048655569779*k - 0.005121638924455829*n >= 0)  &&  (0.9927303827239683 + 0.01368398546076545*j + 0.02480222364763738*k + 0.007269617276031645*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [294+:9928-]|-->> [33m(4.166389459403174 + 0.04599522287431623*j - 0.04600660912984825*k - 0.08117808706249807*n >= 0)  &&  (5.810572687224667 + 0.008810572687224655*j - 0.06607929515418501*k - 0.06607929515418501*n >= 0)  &&  (1.365236935755759 + 0.0003746019853905231*j - 0.02359992507960292*k + 0.01386027345944934*n >= 0)  &&  (0.9478531259891493 + 0.007046874866331181*j - 0.007046874866331181*k + 0.05214687401085074*n >= 0)  &&  (0.9770992366412213 + 0.02524955960070464*j - 0.00352319436288902*k + 0.02290076335877862*n >= 0)  &&  (1.301158301158301 + 0.02316602316602316*j + 0.03346203346203346*k - 0.00772200772200772*n >= 0)  &&  (1.525047228193603 - 0.05721668512366188*j + 0.05721668512366188*k - 0.01346274944086162*n >= 0)  &&  (2.495207667731629 - 0.06709265175718847*j + 0.04153354632587859*k - 0.01277955271565494*n >= 0)  &&  (3.396927016645327 - 0.0499359795134443*j - 0.006402048655569779*k - 0.005121638924455829*n >= 0)  &&  (0.9927303827239683 + 0.01368398546076545*j + 0.02480222364763738*k + 0.007269617276031645*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(362 + 4*j - 4*k - 7*n >= 0)  &&  (53 - 2*j + 2*k >= 0)  &&  (690 - 12*k + 7*n >= 0)  &&  (18 + n >= 0)  &&  (506 + 9*j + 13*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(362 + 4*j - 4*k - 7*n >= 0)  &&  (53 - 2*j + 2*k >= 0)  &&  (690 - 12*k + 7*n >= 0)  &&  (18 + n >= 0)  &&  (506 + 9*j + 13*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (52,52,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (53,53,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (54,54,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (55,55,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (56,56,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (57,57,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (58,58,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (59,59,59) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [746+:11368-]|-->> [33m(0.9999971456895284 + 0.1176077664332544*j - 0.1176222930795281*k + 2.854310471644972e-06*n >= 0)  &&  (1.000003573358308 + 0.08096227081157048*j - 0.1254945571124965*k + 0.04452871294261751*n >= 0)  &&  (5.841025641025645 - 0.01025641025641028*j - 0.09743589743589748*k + 0.02564102564102566*n >= 0)  &&  (2.748806832454157 - 0.01105249937201708*j + 0.009545340366742022*k - 0.02813363476513438*n >= 0)  &&  (4.503930131004363 - 0.01048034934497816*j - 0.03930131004366809*k - 0.009606986899563311*n >= 0)  &&  (4.943444730077115 + 0.02313624678663237*j - 0.06169665809768632*k - 0.02827763496143956*n >= 0)  &&  (2.950643728580793 + 0.04956900059249819*j - 0.04958081887990323*k - 0.03304993982413382*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9999891006482829 + 0.02399882287001457*j + 0.03466496636779882*k + 1.089935171699752e-05*n >= 0)  &&  (0.9999985171518644 - 0.05882104156747714*j + 0.05880635493472947*k + 1.482848135669901e-06*n >= 0)  &&  (1.000000611569775 - 0.05793375603586043*j + 0.02770714718566722*k + 0.03022599728041804*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [746+:12333-]|-->> [33m(0.9999847468374976 - 0.1249570289177039*j + 0.1249688501968695*k + 3.431883336846298e-06*n >= 0)  &&  (0.9999838628247636 - 0.1164063581354047*j + 0.04793962378527789*k + 0.0684828715253632*n >= 0)  &&  (0.9999971456895284 + 0.1176077664332544*j - 0.1176222930795281*k + 2.854310471644972e-06*n >= 0)  &&  (2.748806832454157 - 0.01105249937201708*j + 0.009545340366742022*k - 0.02813363476513438*n >= 0)  &&  (1.000003573358308 + 0.08096227081157048*j - 0.1254945571124965*k + 0.04452871294261751*n >= 0)  &&  (4.943444730077115 + 0.02313624678663237*j - 0.06169665809768632*k - 0.02827763496143956*n >= 0)  &&  (2.950643728580793 + 0.04956900059249819*j - 0.04958081887990323*k - 0.03304993982413382*n >= 0)  &&  (5.841025641025645 - 0.01025641025641028*j - 0.09743589743589748*k + 0.02564102564102566*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9999891006482829 + 0.02399882287001457*j + 0.03466496636779882*k + 1.089935171699752e-05*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [746+:13126-]|-->> [33m(0.9999842996378674 + 0.2499254503049383*j - 0.2499202889177402*k + 1.053897493408229e-05*n >= 0)  &&  (0.9999829972768848 + 0.1578534232078694*j - 0.2630739251481247*k + 0.10523750466337*n >= 0)  &&  (0.9999847468374976 - 0.1249570289177039*j + 0.1249688501968695*k + 3.431883336846298e-06*n >= 0)  &&  (2.748806832454157 - 0.01105249937201708*j + 0.009545340366742022*k - 0.02813363476513438*n >= 0)  &&  (0.9999838628247636 - 0.1164063581354047*j + 0.04793962378527789*k + 0.0684828715253632*n >= 0)  &&  (4.943444730077115 + 0.02313624678663237*j - 0.06169665809768632*k - 0.02827763496143956*n >= 0)  &&  (2.950643728580793 + 0.04956900059249819*j - 0.04958081887990323*k - 0.03304993982413382*n >= 0)  &&  (5.841025641025645 - 0.01025641025641028*j - 0.09743589743589748*k + 0.02564102564102566*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9999891006482829 + 0.02399882287001457*j + 0.03466496636779882*k + 1.089935171699752e-05*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [746+:14639-]|-->> [33m(0.9999830418912428 + 0.4998434461065155*j - 0.499831036137472*k + 4.548139715510047e-06*n >= 0)  &&  (0.9999828704756659 + 0.3845112898136565*j - 0.5383021021196512*k + 0.1538079418303298*n >= 0)  &&  (5.203394024011789 - 0.002550698936059428*j + 0.002537190959060229*k - 0.07123045853167517*n >= 0)  &&  (6.606334841628968 - 0.01809954751131224*j - 0.01357466063348417*k - 0.06334841628959284*n >= 0)  &&  (0.9999847468374976 - 0.1249570289177039*j + 0.1249688501968695*k + 3.431883336846298e-06*n >= 0)  &&  (0.9999838628247636 - 0.1164063581354047*j + 0.04793962378527789*k + 0.0684828715253632*n >= 0)  &&  (5.841025641025645 - 0.01025641025641028*j - 0.09743589743589748*k + 0.02564102564102566*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9999891006482829 + 0.02399882287001457*j + 0.03466496636779882*k + 1.089935171699752e-05*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [746+:15823-]|-->> [33m(1.000016298718648 + 0.9996876550409226*j - 0.9997418898059749*k + 3.793604639668047e-05*n >= 0)  &&  (0.9999828704756659 + 0.3845112898136565*j - 0.5383021021196512*k + 0.1538079418303298*n >= 0)  &&  (5.203394024011789 - 0.002550698936059428*j + 0.002537190959060229*k - 0.07123045853167517*n >= 0)  &&  (6.606334841628968 - 0.01809954751131224*j - 0.01357466063348417*k - 0.06334841628959284*n >= 0)  &&  (0.9999847468374976 - 0.1249570289177039*j + 0.1249688501968695*k + 3.431883336846298e-06*n >= 0)  &&  (0.9999838628247636 - 0.1164063581354047*j + 0.04793962378527789*k + 0.0684828715253632*n >= 0)  &&  (5.841025641025645 - 0.01025641025641028*j - 0.09743589743589748*k + 0.02564102564102566*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9999891006482829 + 0.02399882287001457*j + 0.03466496636779882*k + 1.089935171699752e-05*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [746+:16767-]|-->> [33m(1.000016298718648 + 0.9996876550409226*j - 0.9997418898059749*k + 3.793604639668047e-05*n >= 0)  &&  (0.9999828704756659 + 0.3845112898136565*j - 0.5383021021196512*k + 0.1538079418303298*n >= 0)  &&  (5.203394024011789 - 0.002550698936059428*j + 0.002537190959060229*k - 0.07123045853167517*n >= 0)  &&  (6.606334841628968 - 0.01809954751131224*j - 0.01357466063348417*k - 0.06334841628959284*n >= 0)  &&  (0.9999847468374976 - 0.1249570289177039*j + 0.1249688501968695*k + 3.431883336846298e-06*n >= 0)  &&  (0.9999838628247636 - 0.1164063581354047*j + 0.04793962378527789*k + 0.0684828715253632*n >= 0)  &&  (5.841025641025645 - 0.01025641025641028*j - 0.09743589743589748*k + 0.02564102564102566*n >= 0)  &&  (0.9478505990133896 + 0.007047216349541931*j - 0.007047216349541931*k + 0.05214940098661029*n >= 0)  &&  (0.9999891006482829 + 0.02399882287001457*j + 0.03466496636779882*k + 1.089935171699752e-05*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + j - k >= 0)  &&  (375 + 9*j + 13*k >= 0)  &&  (73 - n >= 0)  &&  (146 - 17*j + 7*k + 10*n >= 0)  &&  (8 - j + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(1 + j - k >= 0)  &&  (375 + 9*j + 13*k >= 0)  &&  (73 - n >= 0)  &&  (146 - 17*j + 7*k + 10*n >= 0)  &&  (8 - j + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (74,74,74) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (75,75,75) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (76,76,76) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (77,77,77) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (78,78,78) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (79,79,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (80,80,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (81,81,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1374+:17164-]|-->> [33m(0.9999875193568784 + 0.9997090691709332*j - 0.999729301888145*k + 3.271336034771366e-05*n >= 0)  &&  (0.9999876107751859 + 0.3844876802980792*j - 0.5382728410374611*k + 0.1537975499641941*n >= 0)  &&  (26.57264611172957 - 0.05262093741207519*j + 0.05261396537171104*k - 0.3157047083513582*n >= 0)  &&  (36.21739130434946 - 0.1304347826087016*j - 0.04347826086956719*k - 0.2608695652174031*n >= 0)  &&  (22.46987951807282 - 0.1084337349397616*j - 0.08433734939759241*k - 0.0722891566265077*n >= 0)  &&  (0.9999883513271161 - 0.1249490160824519*j + 0.1249606905690973*k - 2.581376157273496e-08*n >= 0)  &&  (0.9999885112971539 - 0.1164008605006429*j + 0.04793517253689816*k + 0.06847717666659081*n >= 0)  &&  (1.000007404619768 + 0.02399582379445086*j + 0.03466063436976236*k - 7.404619767961695e-06*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1374+:18397-]|-->> [33m(0.9999939753189651 - 0.2503328852394135*j + 0.2496018329745686*k + 0.0007370769458825421*n >= 0)  &&  (12.99999999999977 - 0.2592592592592551*j + 0.03703703703703631*k + 0.07407407407407307*n >= 0)  &&  (0.9999875193568784 + 0.9997090691709332*j - 0.999729301888145*k + 3.271336034771366e-05*n >= 0)  &&  (0.9999876107751859 + 0.3844876802980792*j - 0.5382728410374611*k + 0.1537975499641941*n >= 0)  &&  (26.57264611172957 - 0.05262093741207519*j + 0.05261396537171104*k - 0.3157047083513582*n >= 0)  &&  (36.21739130434946 - 0.1304347826087016*j - 0.04347826086956719*k - 0.2608695652174031*n >= 0)  &&  (22.46987951807282 - 0.1084337349397616*j - 0.08433734939759241*k - 0.0722891566265077*n >= 0)  &&  (0.9999885112971539 - 0.1164008605006429*j + 0.04793517253689816*k + 0.06847717666659081*n >= 0)  &&  (1.000007404619768 + 0.02399582379445086*j + 0.03466063436976236*k - 7.404619767961695e-06*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1374+:19567-]|-->> [33m(0.9999875086010945 + 1.999100619278977*j - 1.999099953955316*k + 1.18260752515198e-05*n >= 0)  &&  (0.9999875359287387 + 0.9995575254705038*j - 1.999102586869753*k + 0.9995575254705038*n >= 0)  &&  (0.9999876001932009 + 4.133268932449141e-06*j - 0.9995556735896276*k + 0.9995639401274925*n >= 0)  &&  (0.9999878729700784 - 0.1537771230604417*j - 0.384448871166065*k + 0.5382381212564282*n >= 0)  &&  (0.9999939753189651 - 0.2503328852394135*j + 0.2496018329745686*k + 0.0007370769458825421*n >= 0)  &&  (12.99999999999977 - 0.2592592592592551*j + 0.03703703703703631*k + 0.07407407407407307*n >= 0)  &&  (26.57264611172957 - 0.05262093741207519*j + 0.05261396537171104*k - 0.3157047083513582*n >= 0)  &&  (36.21739130434946 - 0.1304347826087016*j - 0.04347826086956719*k - 0.2608695652174031*n >= 0)  &&  (1.000007404619768 + 0.02399582379445086*j + 0.03466063436976236*k - 7.404619767961695e-06*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [1374+:20502-]|-->> [33m(0.9999875086010945 + 1.999100619278977*j - 1.999099953955316*k + 1.18260752515198e-05*n >= 0)  &&  (0.9999875359287387 + 0.9995575254705038*j - 1.999102586869753*k + 0.9995575254705038*n >= 0)  &&  (0.9999876001932009 + 4.133268932449141e-06*j - 0.9995556735896276*k + 0.9995639401274925*n >= 0)  &&  (0.9999878729700784 - 0.1537771230604417*j - 0.384448871166065*k + 0.5382381212564282*n >= 0)  &&  (0.9999939753189651 - 0.2503328852394135*j + 0.2496018329745686*k + 0.0007370769458825421*n >= 0)  &&  (12.99999999999977 - 0.2592592592592551*j + 0.03703703703703631*k + 0.07407407407407307*n >= 0)  &&  (26.57264611172957 - 0.05262093741207519*j + 0.05261396537171104*k - 0.3157047083513582*n >= 0)  &&  (36.21739130434946 - 0.1304347826087016*j - 0.04347826086956719*k - 0.2608695652174031*n >= 0)  &&  (1.000007404619768 + 0.02399582379445086*j + 0.03466063436976236*k - 7.404619767961695e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*j - 2*k >= 0)  &&  (84 - n >= 0)  &&  (4 - j + k >= 0)  &&  (13 - 2*j - 5*k + 7*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(1 + 2*j - 2*k >= 0)  &&  (84 - n >= 0)  &&  (4 - j + k >= 0)  &&  (13 - 2*j - 5*k + 7*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (85,85,85) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (86,86,86) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (87,87,87) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (88,88,88) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (89,89,89) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (90,90,90) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (91,91,91) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (92,92,92) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2090+:21345-]|-->> [33m(0.9999890655891335 + 1.999092443896711*j - 1.999091269091082*k + 9.759605255510451e-06*n >= 0)  &&  (0.9999890296653433 + 0.9995502162792995*j - 1.999089462223935*k + 0.9995502162792995*n >= 0)  &&  (6.30565167243368 - 0.0392156862745098*j + 0.008073817762399058*k - 0.02652825836216841*n >= 0)  &&  (4.08896984888856 - 0.02993009399435383*j + 0.02993999374053401*k - 0.03358565897322977*n >= 0)  &&  (1.000007441200978 - 0.9996800283571616*j + 0.9994557773408843*k + 0.0002168098152566245*n >= 0)  &&  (1.000009833776019 - 0.7139822720539968*j + 0.1427925209003931*k + 0.5711799173775844*n >= 0)  &&  (10.35593220339024 - 0.1694915254237368*j - 0.1016949152542423*k + 0.1694915254237368*n >= 0)  &&  (0.999998477268109 + 0.02400085882078656*j + 0.0346679071855806*k + 1.522731891058504e-06*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2090+:22138-]|-->> [33m(0.9999890655891335 + 1.999092443896711*j - 1.999091269091082*k + 9.759605255510451e-06*n >= 0)  &&  (0.9999890296653433 + 0.9995502162792995*j - 1.999089462223935*k + 0.9995502162792995*n >= 0)  &&  (6.30565167243368 - 0.0392156862745098*j + 0.008073817762399058*k - 0.02652825836216841*n >= 0)  &&  (4.08896984888856 - 0.02993009399435383*j + 0.02993999374053401*k - 0.03358565897322977*n >= 0)  &&  (1.000007441200978 - 0.9996800283571616*j + 0.9994557773408843*k + 0.0002168098152566245*n >= 0)  &&  (1.000009833776019 - 0.7139822720539968*j + 0.1427925209003931*k + 0.5711799173775844*n >= 0)  &&  (10.35593220339024 - 0.1694915254237368*j - 0.1016949152542423*k + 0.1694915254237368*n >= 0)  &&  (0.999998477268109 + 0.02400085882078656*j + 0.0346679071855806*k + 1.522731891058504e-06*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2090+:23153-]|-->> [33m(0.9999890655891335 + 1.999092443896711*j - 1.999091269091082*k + 9.759605255510451e-06*n >= 0)  &&  (0.9999890296653433 + 0.9995502162792995*j - 1.999089462223935*k + 0.9995502162792995*n >= 0)  &&  (6.30565167243368 - 0.0392156862745098*j + 0.008073817762399058*k - 0.02652825836216841*n >= 0)  &&  (4.08896984888856 - 0.02993009399435383*j + 0.02993999374053401*k - 0.03358565897322977*n >= 0)  &&  (1.000007441200978 - 0.9996800283571616*j + 0.9994557773408843*k + 0.0002168098152566245*n >= 0)  &&  (1.000009833776019 - 0.7139822720539968*j + 0.1427925209003931*k + 0.5711799173775844*n >= 0)  &&  (10.35593220339024 - 0.1694915254237368*j - 0.1016949152542423*k + 0.1694915254237368*n >= 0)  &&  (0.999998477268109 + 0.02400085882078656*j + 0.0346679071855806*k + 1.522731891058504e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*j - 2*k >= 0)  &&  (375 + 9*j + 13*k >= 0)  &&  (7 - 5*j + k + 4*n >= 0)  &&  (1 - j + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(1 + 2*j - 2*k >= 0)  &&  (375 + 9*j + 13*k >= 0)  &&  (7 - 5*j + k + 4*n >= 0)  &&  (1 - j + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2090+:23862-]|-->> [33m(59.0829766753568 - 0.1052258522609222*j + 0.1052166469746574*k - 0.6313274977067387*n >= 0)  &&  (74.60000000002674 - 0.2000000000000739*j - 0.6000000000002217*n >= 0)  &&  (k + n >= 0)  &&  (0.9999890655891335 + 1.999092443896711*j - 1.999091269091082*k + 9.759605255510451e-06*n >= 0)  &&  (0.9999890296653433 + 0.9995502162792995*j - 1.999089462223935*k + 0.9995502162792995*n >= 0)  &&  (1.000007441200978 - 0.9996800283571616*j + 0.9994557773408843*k + 0.0002168098152566245*n >= 0)  &&  (1.000009833776019 - 0.7139822720539968*j + 0.1427925209003931*k + 0.5711799173775844*n >= 0)  &&  (0.999998477268109 + 0.02400085882078656*j + 0.0346679071855806*k + 1.522731891058504e-06*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2090+:24890-]|-->> [33m(0.9999892382091247 + 0.09088463229346513*j + 0.09088463229346513*k + 1.076179087539098e-05*n >= 0)  &&  (59.0829766753568 - 0.1052258522609222*j + 0.1052166469746574*k - 0.6313274977067387*n >= 0)  &&  (74.60000000002674 - 0.2000000000000739*j - 0.6000000000002217*n >= 0)  &&  (k + n >= 0)  &&  (0.9999890655891335 + 1.999092443896711*j - 1.999091269091082*k + 9.759605255510451e-06*n >= 0)  &&  (0.9999890296653433 + 0.9995502162792995*j - 1.999089462223935*k + 0.9995502162792995*n >= 0)  &&  (1.000007441200978 - 0.9996800283571616*j + 0.9994557773408843*k + 0.0002168098152566245*n >= 0)  &&  (1.000009833776019 - 0.7139822720539968*j + 0.1427925209003931*k + 0.5711799173775844*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2090+:26052-]|-->> [33m(0.9999892382091247 + 0.09088463229346513*j + 0.09088463229346513*k + 1.076179087539098e-05*n >= 0)  &&  (59.0829766753568 - 0.1052258522609222*j + 0.1052166469746574*k - 0.6313274977067387*n >= 0)  &&  (74.60000000002674 - 0.2000000000000739*j - 0.6000000000002217*n >= 0)  &&  (k + n >= 0)  &&  (0.9999890655891335 + 1.999092443896711*j - 1.999091269091082*k + 9.759605255510451e-06*n >= 0)  &&  (0.9999890296653433 + 0.9995502162792995*j - 1.999089462223935*k + 0.9995502162792995*n >= 0)  &&  (1.000007441200978 - 0.9996800283571616*j + 0.9994557773408843*k + 0.0002168098152566245*n >= 0)  &&  (1.000009833776019 - 0.7139822720539968*j + 0.1427925209003931*k + 0.5711799173775844*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(11 + j + k >= 0)  &&  (94 - n >= 0)  &&  (1 - j + k >= 0)  &&  (k + n >= 0)  &&  (1 + 2*j - 2*k >= 0)  &&  (1 + j - 2*k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(11 + j + k >= 0)  &&  (94 - n >= 0)  &&  (1 - j + k >= 0)  &&  (k + n >= 0)  &&  (1 + 2*j - 2*k >= 0)  &&  (1 + j - 2*k + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (95,95,95) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (96,96,96) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (97,97,97) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (98,98,98) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (99,99,99) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (100,100,100) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (101,101,101) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (102,102,102) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2886+:26421-]|-->> [33m(0.9999908303520367 + 0.09088408277828192*j + 0.09088408277828192*k + 9.169647963214178e-06*n >= 0)  &&  (1.00000756459599 - 1.999080027089917*j + 1.999077756428051*k - 7.56459598960646e-06*n >= 0)  &&  (k + n >= 0)  &&  (9.859425765207163 - 0.001891897178187718*j + 0.001884162866757411*k - 0.08684938103373774*n >= 0)  &&  (12.45263157894748 - 0.01754385964912292*j - 0.01403508771929834*k - 0.08070175438596561*n >= 0)  &&  (0.9999901596763578 + 1.999084849901831*j - 1.999083264743248*k + 8.255165049320112e-06*n >= 0)  &&  (0.9999901038069225 + 0.9995447751182276*j - 1.999079654043371*k + 0.9995447751182276*n >= 0)  &&  (1.000009843621513 - 0.9995767242741778*j + 0.4997834403263255*k + 0.4997834403263255*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2886+:27484-]|-->> [33m(0.9999908303520367 + 0.09088408277828192*j + 0.09088408277828192*k + 9.169647963214178e-06*n >= 0)  &&  (1.00000756459599 - 1.999080027089917*j + 1.999077756428051*k - 7.56459598960646e-06*n >= 0)  &&  (k + n >= 0)  &&  (9.859425765207163 - 0.001891897178187718*j + 0.001884162866757411*k - 0.08684938103373774*n >= 0)  &&  (12.45263157894748 - 0.01754385964912292*j - 0.01403508771929834*k - 0.08070175438596561*n >= 0)  &&  (0.9999901596763578 + 1.999084849901831*j - 1.999083264743248*k + 8.255165049320112e-06*n >= 0)  &&  (0.9999901038069225 + 0.9995447751182276*j - 1.999079654043371*k + 0.9995447751182276*n >= 0)  &&  (1.000009843621513 - 0.9995767242741778*j + 0.4997834403263255*k + 0.4997834403263255*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(11 + j + k >= 0)  &&  (1 - 2*j + 2*k >= 0)  &&  (k + n >= 0)  &&  (1 + j - 2*k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(11 + j + k >= 0)  &&  (1 - 2*j + 2*k >= 0)  &&  (k + n >= 0)  &&  (1 + j - 2*k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
