[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down_true_1
[  8%] Building CXX object CMakeFiles/down_true_1.dir/test/down_true_1.cpp.o
[ 16%] Building CXX object CMakeFiles/down_true_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down_true_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down_true_1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down_true_1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down_true_1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down_true_1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down_true_1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down_true_1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down_true_1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down_true_1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down_true_1.dir/src/instrumentation.cpp.o
Linking CXX executable down_true_1
[100%] Built target down_true_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1476-]|-->> [33m(1.028237585199611 + 0.02629016553067186*i - 0.02142161635832522*k - 0.02823758519961052*n >= 0)  &&  (0.9939053294508026 - 0.006297826234170785*i + 0.003115053836256518*k + 0.009277442947111803*n >= 0)  &&  (1.011894217385803 - 0.0009279176683959678*i - 0.01282213505419883*k + 0.001855835336791936*n >= 0)  &&  (1.042238648363252 - 0.02147131291798662*i - 0.006687785990848293*k - 0.01407954945441746*n >= 0)  &&  (0.9986332574031891 + 0.02687927107061503*i - 0.01366742596810934*k + 0.001366742596810934*n >= 0)  &&  (1.010589382750453 + 0.007942037062839627*i + 0.01017138079977706*k - 0.01058938275045283*n >= 0)  &&  (1.025057698648203 + 0.000329706561160567*i + 0.005605011539729639*k - 0.0250576986482031*n >= 0)  &&  (0.9994797988555575 + 0.01838044043696896*i + 0.002947806485174267*k + 0.0005202011444425177*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:4559-]|-->> [33m(1.222222222222222 + 0.1111111111111111*i - 0.1111111111111111*k - 0.2222222222222222*n >= 0)  &&  (0.9939053294508026 - 0.006297826234170785*i + 0.003115053836256518*k + 0.009277442947111803*n >= 0)  &&  (1.011894217385803 - 0.0009279176683959678*i - 0.01282213505419883*k + 0.001855835336791936*n >= 0)  &&  (1.042238648363252 - 0.02147131291798662*i - 0.006687785990848293*k - 0.01407954945441746*n >= 0)  &&  (1.115384615384615 + 0.1538461538461539*i + 0.03846153846153846*k - 0.1153846153846154*n >= 0)  &&  (1.030612244897959 + 0.0816326530612245*i + 0.05102040816326531*k - 0.03061224489795919*n >= 0)  &&  (1.11037527593819 - 0.03532008830022075*i - 0.02428256070640177*k - 0.05077262693156733*n >= 0)  &&  (1.070336391437309 + 0.01529051987767584*i + 0.03058103975535168*k - 0.07033639143730887*n >= 0)  &&  (0.9986332574031891 + 0.02687927107061503*i - 0.01366742596810934*k + 0.001366742596810934*n >= 0)  &&  (1.027468933943754 - 0.0104643557880968*i + 0.04185742315238718*k - 0.02746893394375409*n >= 0)  &&  (1.009457329430308 + 0.009006980409817608*i + 0.02702094122945282*k - 0.009457329430308487*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:6311-]|-->> [33m(1.222222222222222 + 0.1111111111111111*i - 0.1111111111111111*k - 0.2222222222222222*n >= 0)  &&  (0.9939053294508026 - 0.006297826234170785*i + 0.003115053836256518*k + 0.009277442947111803*n >= 0)  &&  (1.011894217385803 - 0.0009279176683959678*i - 0.01282213505419883*k + 0.001855835336791936*n >= 0)  &&  (1.042238648363252 - 0.02147131291798662*i - 0.006687785990848293*k - 0.01407954945441746*n >= 0)  &&  (1.115384615384615 + 0.1538461538461539*i + 0.03846153846153846*k - 0.1153846153846154*n >= 0)  &&  (1.030612244897959 + 0.0816326530612245*i + 0.05102040816326531*k - 0.03061224489795919*n >= 0)  &&  (1.11037527593819 - 0.03532008830022075*i - 0.02428256070640177*k - 0.05077262693156733*n >= 0)  &&  (1.070336391437309 + 0.01529051987767584*i + 0.03058103975535168*k - 0.07033639143730887*n >= 0)  &&  (0.9986332574031891 + 0.02687927107061503*i - 0.01366742596810934*k + 0.001366742596810934*n >= 0)  &&  (1.027468933943754 - 0.0104643557880968*i + 0.04185742315238718*k - 0.02746893394375409*n >= 0)  &&  (1.009457329430308 + 0.009006980409817608*i + 0.02702094122945282*k - 0.009457329430308487*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:9565-]|-->> [33m(0.9765807962529274 + 0.01405152224824356*i - 0.01873536299765808*k + 0.02810304449648712*n >= 0)  &&  (0.9939053294508026 - 0.006297826234170785*i + 0.003115053836256518*k + 0.009277442947111803*n >= 0)  &&  (1.222222222222222 + 0.1111111111111111*i - 0.1111111111111111*k - 0.2222222222222222*n >= 0)  &&  (1.042238648363252 - 0.02147131291798662*i - 0.006687785990848293*k - 0.01407954945441746*n >= 0)  &&  (1.115384615384615 + 0.1538461538461539*i + 0.03846153846153846*k - 0.1153846153846154*n >= 0)  &&  (1.030612244897959 + 0.0816326530612245*i + 0.05102040816326531*k - 0.03061224489795919*n >= 0)  &&  (1.11037527593819 - 0.03532008830022075*i - 0.02428256070640177*k - 0.05077262693156733*n >= 0)  &&  (1.070336391437309 + 0.01529051987767584*i + 0.03058103975535168*k - 0.07033639143730887*n >= 0)  &&  (1.027468933943754 - 0.0104643557880968*i + 0.04185742315238718*k - 0.02746893394375409*n >= 0)  &&  (1.009457329430308 + 0.009006980409817608*i + 0.02702094122945282*k - 0.009457329430308487*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:12258-]|-->> [33m(0.9765807962529274 + 0.01405152224824356*i - 0.01873536299765808*k + 0.02810304449648712*n >= 0)  &&  (0.9939053294508026 - 0.006297826234170785*i + 0.003115053836256518*k + 0.009277442947111803*n >= 0)  &&  (1.222222222222222 + 0.1111111111111111*i - 0.1111111111111111*k - 0.2222222222222222*n >= 0)  &&  (1.042238648363252 - 0.02147131291798662*i - 0.006687785990848293*k - 0.01407954945441746*n >= 0)  &&  (1.115384615384615 + 0.1538461538461539*i + 0.03846153846153846*k - 0.1153846153846154*n >= 0)  &&  (1.030612244897959 + 0.0816326530612245*i + 0.05102040816326531*k - 0.03061224489795919*n >= 0)  &&  (1.11037527593819 - 0.03532008830022075*i - 0.02428256070640177*k - 0.05077262693156733*n >= 0)  &&  (1.070336391437309 + 0.01529051987767584*i + 0.03058103975535168*k - 0.07033639143730887*n >= 0)  &&  (1.027468933943754 - 0.0104643557880968*i + 0.04185742315238718*k - 0.02746893394375409*n >= 0)  &&  (1.009457329430308 + 0.009006980409817608*i + 0.02702094122945282*k - 0.009457329430308487*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(208 + 3*i - 4*k + 6*n >= 0)  &&  (491 - 5*i + 20*k - 13*n >= 0)  &&  (11 + i - k - 2*n >= 0)  &&  (412 - 13*i - 9*k - 19*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(208 + 3*i - 4*k + 6*n >= 0)  &&  (491 - 5*i + 20*k - 13*n >= 0)  &&  (11 + i - k - 2*n >= 0)  &&  (412 - 13*i - 9*k - 19*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,40) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,41) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,42) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,43) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,45) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [342+:13717-]|-->> [33m(0.9999918137682264 + 0.3332947389049022*i - 0.3332682354926335*k + 8.186231773565922e-06*n >= 0)  &&  (0.9999839323718049 + 0.2799145202180023*i + 0.03998778860257175*k + 1.606762819500451e-05*n >= 0)  &&  (1.000008184110261 - 0.3998639220951916*i + 0.3998847088229852*k - 8.184110261488797e-06*n >= 0)  &&  (1.00002128000586 - 0.3076170092100355*i + 0.4614255138150533*k - 2.12800058596585e-05*n >= 0)  &&  (1.000021389062323 + 0.05404075815044794*i + 0.3242445489026876*k - 2.138906232285187e-05*n >= 0)  &&  (1.486486486486488 - 0.03063063063063062*i - 0.02522522522522522*k + 0.04504504504504505*n >= 0)  &&  (3.498963342389964 - 0.01387391494563283*i + 0.01389234441425567*k - 0.05553251871977698*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [342+:14578-]|-->> [33m(0.9999918137682264 + 0.3332947389049022*i - 0.3332682354926335*k + 8.186231773565922e-06*n >= 0)  &&  (0.9999839323718049 + 0.2799145202180023*i + 0.03998778860257175*k + 1.606762819500451e-05*n >= 0)  &&  (1.000008184110261 - 0.3998639220951916*i + 0.3998847088229852*k - 8.184110261488797e-06*n >= 0)  &&  (1.00002128000586 - 0.3076170092100355*i + 0.4614255138150533*k - 2.12800058596585e-05*n >= 0)  &&  (1.000021389062323 + 0.05404075815044794*i + 0.3242445489026876*k - 2.138906232285187e-05*n >= 0)  &&  (1.486486486486488 - 0.03063063063063062*i - 0.02522522522522522*k + 0.04504504504504505*n >= 0)  &&  (3.498963342389964 - 0.01387391494563283*i + 0.01389234441425567*k - 0.05553251871977698*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + i - k >= 0)  &&  (530 - 11*i - 9*k + 16*n >= 0)  &&  (5 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(3 + i - k >= 0)  &&  (530 - 11*i - 9*k + 16*n >= 0)  &&  (5 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (125,128,126) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (126,129,127) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (127,130,128) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (128,131,129) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (128,130,129) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (129,131,130) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (129,132,130) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (130,131,131) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [342+:16137-]|-->> [33m(0.9999918137682264 + 0.3332947389049022*i - 0.3332682354926335*k + 8.186231773565922e-06*n >= 0)  &&  (0.9999839323718049 + 0.2799145202180023*i + 0.03998778860257175*k + 1.606762819500451e-05*n >= 0)  &&  (1.000008184110261 - 0.3998639220951916*i + 0.3998847088229852*k - 8.184110261488797e-06*n >= 0)  &&  (1.00002128000586 - 0.3076170092100355*i + 0.4614255138150533*k - 2.12800058596585e-05*n >= 0)  &&  (1.000021389062323 + 0.05404075815044794*i + 0.3242445489026876*k - 2.138906232285187e-05*n >= 0)  &&  (1.486486486486488 - 0.03063063063063062*i - 0.02522522522522522*k + 0.04504504504504505*n >= 0)  &&  (3.498963342389964 - 0.01387391494563283*i + 0.01389234441425567*k - 0.05553251871977698*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [342+:18667-]|-->> [33m(0.9999918137682264 + 0.3332947389049022*i - 0.3332682354926335*k + 8.186231773565922e-06*n >= 0)  &&  (0.9999839323718049 + 0.2799145202180023*i + 0.03998778860257175*k + 1.606762819500451e-05*n >= 0)  &&  (1.000008184110261 - 0.3998639220951916*i + 0.3998847088229852*k - 8.184110261488797e-06*n >= 0)  &&  (1.00002128000586 - 0.3076170092100355*i + 0.4614255138150533*k - 2.12800058596585e-05*n >= 0)  &&  (1.000021389062323 + 0.05404075815044794*i + 0.3242445489026876*k - 2.138906232285187e-05*n >= 0)  &&  (1.486486486486488 - 0.03063063063063062*i - 0.02522522522522522*k + 0.04504504504504505*n >= 0)  &&  (3.498963342389964 - 0.01387391494563283*i + 0.01389234441425567*k - 0.05553251871977698*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + i - k >= 0)  &&  (63 - n >= 0)  &&  (5 - 2*i + 2*k >= 0)  &&  (530 - 11*i - 9*k + 16*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(3 + i - k >= 0)  &&  (63 - n >= 0)  &&  (5 - 2*i + 2*k >= 0)  &&  (530 - 11*i - 9*k + 16*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,64) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,65) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,66) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,67) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,68) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [890+:20671-]|-->> [33m(0.9999901287643722 + 0.3332311686402514*i - 0.3332249116663529*k + 9.87123562790071e-06*n >= 0)  &&  (0.9999891758864896 + 0.2799030159429469*i + 0.0399861451347067*k + 1.082411351044366e-05*n >= 0)  &&  (1.000009287227639 - 0.3999076434226312*i + 0.3999210506254056*k - 9.287227638932194e-06*n >= 0)  &&  (0.9999860428622021 - 0.3075913868497664*i + 0.4613870802746496*k + 1.39571377979486e-05*n >= 0)  &&  (0.9999872107931269 + 0.05403780830478269*i + 0.3242268498286962*k + 1.278920687308727e-05*n >= 0)  &&  (1.00001100779681 - 0.02731915616924734*i - 0.02185605878851853*k + 0.04916420716095593*n >= 0)  &&  (6.193041626742897 - 0.09751500437921443*i + 0.09752881258765551*k - 0.073141431362576*n >= 0)  &&  (5.681318681318672 - 0.05494505494505481*i + 0.1208791208791206*k - 0.0659340659340657*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [890+:22966-]|-->> [33m(1.000010093077975 - 0.9995287962089909*i + 0.9995424960232981*k - 1.009307797517067e-05*n >= 0)  &&  (1.00001284812064 + 0.9995695879586038*k - 1.284812064028529e-05*n >= 0)  &&  (0.9999901287643722 + 0.3332311686402514*i - 0.3332249116663529*k + 9.87123562790071e-06*n >= 0)  &&  (0.9999891758864896 + 0.2799030159429469*i + 0.0399861451347067*k + 1.082411351044366e-05*n >= 0)  &&  (1.00001100779681 - 0.02731915616924734*i - 0.02185605878851853*k + 0.04916420716095593*n >= 0)  &&  (6.193041626742897 - 0.09751500437921443*i + 0.09752881258765551*k - 0.073141431362576*n >= 0)  &&  (5.681318681318672 - 0.05494505494505481*i + 0.1208791208791206*k - 0.0659340659340657*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [890+:24158-]|-->> [33m(1.000010093077975 - 0.9995287962089909*i + 0.9995424960232981*k - 1.009307797517067e-05*n >= 0)  &&  (1.00001284812064 + 0.9995695879586038*k - 1.284812064028529e-05*n >= 0)  &&  (0.9999901287643722 + 0.3332311686402514*i - 0.3332249116663529*k + 9.87123562790071e-06*n >= 0)  &&  (0.9999891758864896 + 0.2799030159429469*i + 0.0399861451347067*k + 1.082411351044366e-05*n >= 0)  &&  (1.00001100779681 - 0.02731915616924734*i - 0.02185605878851853*k + 0.04916420716095593*n >= 0)  &&  (6.193041626742897 - 0.09751500437921443*i + 0.09752881258765551*k - 0.073141431362576*n >= 0)  &&  (5.681318681318672 - 0.05494505494505481*i + 0.1208791208791206*k - 0.0659340659340657*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [890+:26429-]|-->> [33m(1.000010093077975 - 0.9995287962089909*i + 0.9995424960232981*k - 1.009307797517067e-05*n >= 0)  &&  (1.00001284812064 + 0.9995695879586038*k - 1.284812064028529e-05*n >= 0)  &&  (0.9999901287643722 + 0.3332311686402514*i - 0.3332249116663529*k + 9.87123562790071e-06*n >= 0)  &&  (0.9999891758864896 + 0.2799030159429469*i + 0.0399861451347067*k + 1.082411351044366e-05*n >= 0)  &&  (1.00001100779681 - 0.02731915616924734*i - 0.02185605878851853*k + 0.04916420716095593*n >= 0)  &&  (6.193041626742897 - 0.09751500437921443*i + 0.09752881258765551*k - 0.073141431362576*n >= 0)  &&  (5.681318681318672 - 0.05494505494505481*i + 0.1208791208791206*k - 0.0659340659340657*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - i + k >= 0)  &&  (254 - 4*i + 4*k - 3*n >= 0)  &&  (3 + i - k >= 0)  &&  (25 + 7*i + k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 - i + k >= 0)  &&  (254 - 4*i + 4*k - 3*n >= 0)  &&  (3 + i - k >= 0)  &&  (25 + 7*i + k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,85) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,86) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,87) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,88) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,89) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,90) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,91) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,92) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1606+:28277-]|-->> [33m(17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (4.672774646549971 + 0.001200949756065252*i - 0.001194338056902118*k - 0.03992146354945621*n >= 0)  &&  (0.9999930651517702 + 0.3332404980107482*i - 0.3332296812894047*k + 6.93484822977819e-06*n >= 0)  &&  (0.9999954550816286 + 0.2799459154713808*i + 0.03999227363876869*k + 4.544918371374163e-06*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1606+:30367-]|-->> [33m(17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (4.672774646549971 + 0.001200949756065252*i - 0.001194338056902118*k - 0.03992146354945621*n >= 0)  &&  (0.9999930651517702 + 0.3332404980107482*i - 0.3332296812894047*k + 6.93484822977819e-06*n >= 0)  &&  (0.9999954550816286 + 0.2799459154713808*i + 0.03999227363876869*k + 4.544918371374163e-06*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(25 + 7*i + k >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0)  &&  (3 + i - k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(25 + 7*i + k >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0)  &&  (3 + i - k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1606+:31318-]|-->> [33m( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (4.672774646549971 + 0.001200949756065252*i - 0.001194338056902118*k - 0.03992146354945621*n >= 0)  &&  (0.9999930651517702 + 0.3332404980107482*i - 0.3332296812894047*k + 6.93484822977819e-06*n >= 0)  &&  (0.9999954550816286 + 0.2799459154713808*i + 0.03999227363876869*k + 4.544918371374163e-06*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1606+:35380-]|-->> [33m(1.000009321359393 + 0.6664658903066994*i - 0.66645536564695*k - 9.321359392799877e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1606+:38032-]|-->> [33m(1.000009321359393 + 0.6664658903066994*i - 0.66645536564695*k - 9.321359392799877e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [1606+:39789-]|-->> [33m(1.000009321359393 + 0.6664658903066994*i - 0.66645536564695*k - 9.321359392799877e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [1606+:42231-]|-->> [33m(1.000009321359393 + 0.6664658903066994*i - 0.66645536564695*k - 9.321359392799877e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [1606+:46557-]|-->> [33m(1.000009985394001 + 1.999130989730836*i - 1.999120233141794*k - 9.985394001432724e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [1606+:47324-]|-->> [33m(1.000009985394001 + 1.999130989730836*i - 1.999120233141794*k - 9.985394001432724e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 7 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-6,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-7,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1606+:49382-]|-->> [33m(1.000009985394001 + 1.999130989730836*i - 1.999120233141794*k - 9.985394001432724e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1606+:50594-]|-->> [33m(1.000009985394001 + 1.999130989730836*i - 1.999120233141794*k - 9.985394001432724e-06*n >= 0)  &&  (1.000010819949718 + 0.666471907571733*i - 1.081994971841027e-05*n >= 0)  &&  (16.11916703674962 + 0.01369976320482741*i - 0.01369003215160308*k - 0.1643387721385827*n >= 0)  &&  (15.91891891891905 + 0.02702702702702724*i - 0.1621621621621634*n >= 0)  &&  ( -0.333021952105399 + 0.6669780478946012*i - 0.6660439042107977*k + 1.333021952105399*n >= 0)  &&  (17.35555555555555 - 0.07407407407407407*i - 0.09629629629629632*k - 0.007407407407407418*n >= 0)  &&  (1.000010957705229 - 1.999192518648528*i + 1.999196165083532*k - 1.095770522852035e-05*n >= 0)  &&  (1.000010865025288 + 0.9996360216528993*k - 1.086502528835354e-05*n >= 0)  &&  (1.000010165338801 - 0.02731940476341402*i - 0.0218562014999846*k + 0.04916544092459794*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (183 - 5*i - 4*k + 9*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
