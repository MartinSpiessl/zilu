[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 03
[  8%] Building CXX object CMakeFiles/03.dir/test/03.cpp.o
[ 16%] Building CXX object CMakeFiles/03.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/03.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/03.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/03.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/03.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/03.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/03.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/03.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/03.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/03.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/03.dir/src/instrumentation.cpp.o
Linking CXX executable 03
[100%] Built target 03
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/03.cnt[0m
[34m[1mTest Counter Example: (1) @/home/lijiaying/Research/GitHub/ZILU/tmp/03.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r10,#s0] -->  [4+:6-]|-->> [33m(0.9615384615384615 + 0.03846153846153846*l >= 0) [0m
[31m[2Pure Random][0m[#r20,#s0] -->  [8+:12-]|-->> [33m(0.9500000000000001 + 0.05*l >= 0) [0m
[31m[3Pure Random][0m[#r30,#s0] -->  [14+:16-]|-->> [33m(0.9459459459459461 + 0.05405405405405405*l >= 0) [0m
[31m[4Pure Random][0m[#r40,#s0] -->  [19+:21-]|-->> [33m(0.8571428571428572 + 0.1428571428571428*l >= 0) [0m
[31m[5Pure Random][0m[#r50,#s0] -->  [22+:24-]|-->> [33m(0.7142857142857142 + 0.2857142857142857*l >= 0) [0m
[31m[6Pure Random][0m[#r60,#s0] -->  [28+:27-]|-->> [33m(0.6666666666666666 + 0.3333333333333334*l >= 0) [0m
[31m[7Pure Random][0m[#r70,#s0] -->  [32+:33-]|-->> [33m(0.6666666666666666 + 0.3333333333333334*l >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(2 + l >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/03.inv >>> [0m(2 + l >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/03.cnt[0m
[34m[1mTest Counter Example: (-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0) @/home/lijiaying/Research/GitHub/ZILU/tmp/03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/03.cnt --> [0m-
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r10,#s0] -->  [37+:40-]|-->> [33m( -1 + 2*l >= 0) [0m
[31m[2Pure Random][0m[#r20,#s0] -->  [38+:46-]|-->> [33m( -1 + 2*l >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -1 + 2*l >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/03.inv >>> [0m( -1 + 2*l >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -1 + 2*l >= 0) [0m

=====================time=========================
