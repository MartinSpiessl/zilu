[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:2482-]|-->> [33m(1.007043670758704 + 0.01791104850070437*j - 0.008854900382370698*k + 0.001811229623666734*n >= 0)  &&  (0.9905824904080921 - 0.003604232066038833*j - 0.004650622020695269*k + 0.01406813161260319*n >= 0)  &&  (1.014268142681427 - 0.00902009020090201*j - 0.0006560065600656007*k - 0.005248052480524805*n >= 0)  &&  (1.013954703182717 + 0.003880452221932018*j - 0.002686466922876012*k - 0.01126823625984105*n >= 0)  &&  (1.012774826867478 - 0.01075774894103409*j - 0.0123714112821892*k - 0.0004034155852887783*n >= 0)  &&  (0.9962684321396328 + 0.005737787140134417*j + 0.006580399237636674*k - 0.002006219279767279*n >= 0)  &&  (0.9940467181272388 - 0.00292618939508602*j + 0.01069572675445235*k + 0.008879471267847232*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:7047-]|-->> [33m(1.007043670758704 + 0.01791104850070437*j - 0.008854900382370698*k + 0.001811229623666734*n >= 0)  &&  (1.008769951639981 - 0.002355358440452029*j + 0.007316645368212684*k - 0.006414593199528929*n >= 0)  &&  (1.014268142681427 - 0.00902009020090201*j - 0.0006560065600656007*k - 0.005248052480524805*n >= 0)  &&  (1.013954703182717 + 0.003880452221932018*j - 0.002686466922876012*k - 0.01126823625984105*n >= 0)  &&  (1.012774826867478 - 0.01075774894103409*j - 0.0123714112821892*k - 0.0004034155852887783*n >= 0)  &&  (0.9962684321396328 + 0.005737787140134417*j + 0.006580399237636674*k - 0.002006219279767279*n >= 0)  &&  (0.9940467181272388 - 0.00292618939508602*j + 0.01069572675445235*k + 0.008879471267847232*n >= 0)  &&  (0.9905824904080921 - 0.003604232066038833*j - 0.004650622020695269*k + 0.01406813161260319*n >= 0)  &&  (1.034828928498259 - 0.01393157139930342*j - 0.02048760499897562*k - 0.01434132349928294*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:9461-]|-->> [33m(1.007043670758704 + 0.01791104850070437*j - 0.008854900382370698*k + 0.001811229623666734*n >= 0)  &&  (1.014252660805183 + 0.002776492364645997*j + 0.008514576584914392*k - 0.01702915316982878*n >= 0)  &&  (1.014268142681427 - 0.00902009020090201*j - 0.0006560065600656007*k - 0.005248052480524805*n >= 0)  &&  (1.013954703182717 + 0.003880452221932018*j - 0.002686466922876012*k - 0.01126823625984105*n >= 0)  &&  (1.012774826867478 - 0.01075774894103409*j - 0.0123714112821892*k - 0.0004034155852887783*n >= 0)  &&  (0.9917355371900827 + 0.02234465870829507*j + 0.01040710131619222*k - 0.00214263850627487*n >= 0)  &&  (0.9940467181272388 - 0.00292618939508602*j + 0.01069572675445235*k + 0.008879471267847232*n >= 0)  &&  (0.9905824904080921 - 0.003604232066038833*j - 0.004650622020695269*k + 0.01406813161260319*n >= 0)  &&  (1.034828928498259 - 0.01393157139930342*j - 0.02048760499897562*k - 0.01434132349928294*n >= 0)  &&  (1.008769951639981 - 0.002355358440452029*j + 0.007316645368212684*k - 0.006414593199528929*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:13198-]|-->> [33m(1.007043670758704 + 0.01791104850070437*j - 0.008854900382370698*k + 0.001811229623666734*n >= 0)  &&  (1.014252660805183 + 0.002776492364645997*j + 0.008514576584914392*k - 0.01702915316982878*n >= 0)  &&  (1.014268142681427 - 0.00902009020090201*j - 0.0006560065600656007*k - 0.005248052480524805*n >= 0)  &&  (1.013954703182717 + 0.003880452221932018*j - 0.002686466922876012*k - 0.01126823625984105*n >= 0)  &&  (1.012774826867478 - 0.01075774894103409*j - 0.0123714112821892*k - 0.0004034155852887783*n >= 0)  &&  (0.9917355371900827 + 0.02234465870829507*j + 0.01040710131619222*k - 0.00214263850627487*n >= 0)  &&  (0.9940467181272388 - 0.00292618939508602*j + 0.01069572675445235*k + 0.008879471267847232*n >= 0)  &&  (0.9905824904080921 - 0.003604232066038833*j - 0.004650622020695269*k + 0.01406813161260319*n >= 0)  &&  (1.034828928498259 - 0.01393157139930342*j - 0.02048760499897562*k - 0.01434132349928294*n >= 0)  &&  (1.008769951639981 - 0.002355358440452029*j + 0.007316645368212684*k - 0.006414593199528929*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1931 - 26*j - 38*k - 27*n >= 0)  &&  (60 - n >= 0)  &&  (70 + n >= 0)  &&  (93 + k >= 0)  &&  (572 + 13*j + 6*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1931 - 26*j - 38*k - 27*n >= 0)  &&  (60 - n >= 0)  &&  (70 + n >= 0)  &&  (93 + k >= 0)  &&  (572 + 13*j + 6*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,30,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,31,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,32,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,33,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,34,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,35,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,36,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,37,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [278+:14893-]|-->> [33m(0.9999978420830913 + 0.07406831785432827*j + 0.07407041744915839*k - 0.07406825953224966*n >= 0)  &&  (1.000002372904073 + 0.101101706657035*j + 0.03475252521131914*k - 0.03475489811539242*n >= 0)  &&  (1.686092715231788 - 0.01265636497424577*j - 0.001177336276674025*k - 0.005886681383370124*n >= 0)  &&  (0.9999785148709064 - 0.4998199560702611*j - 0.499825539299702*k + 0.4998470244287951*n >= 0)  &&  (0.9999723074182452 - 0.4997715362005208*k + 0.4997992287822757*n >= 0)  &&  (0.99997539549294 + 0.1790394776455282*j - 0.2088670883329195*k + 0.2088916928399795*n >= 0)  &&  (2.450132059747189 - 0.02811654404915231*j - 0.02811654404915231*k - 0.01107621432239334*n >= 0)  &&  (0.9940467181272388 - 0.00292618939508602*j + 0.01069572675445235*k + 0.008879471267847234*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [278+:16997-]|-->> [33m(0.9804039192161568 - 0.0003999200159968007*j + 0.01999600079984003*k + 0.01999600079984003*n >= 0)  &&  (5.734006734006734 - 0.01346801346801346*j - 0.01346801346801347*k - 0.1144781144781145*n >= 0)  &&  (1.686092715231788 - 0.01265636497424577*j - 0.001177336276674025*k - 0.005886681383370124*n >= 0)  &&  (6.095081967213115 - 0.02622950819672135*k - 0.1114754098360657*n >= 0)  &&  (0.9999978420830913 + 0.07406831785432827*j + 0.07407041744915839*k - 0.07406825953224966*n >= 0)  &&  (1.000002372904073 + 0.101101706657035*j + 0.03475252521131914*k - 0.03475489811539242*n >= 0)  &&  (0.9999785148709064 - 0.4998199560702611*j - 0.499825539299702*k + 0.4998470244287951*n >= 0)  &&  (0.9999723074182452 - 0.4997715362005208*k + 0.4997992287822757*n >= 0)  &&  (0.99997539549294 + 0.1790394776455282*j - 0.2088670883329195*k + 0.2088916928399795*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [278+:19980-]|-->> [33m(1 - 0.01626794258373206*j + 0.05741626794258373*k + 0.01626794258373206*n >= 0)  &&  (5.734006734006734 - 0.01346801346801346*j - 0.01346801346801347*k - 0.1144781144781145*n >= 0)  &&  (6.095081967213115 - 0.02622950819672135*k - 0.1114754098360657*n >= 0)  &&  (0.9999978420830913 + 0.07406831785432827*j + 0.07407041744915839*k - 0.07406825953224966*n >= 0)  &&  (1.000002372904073 + 0.101101706657035*j + 0.03475252521131914*k - 0.03475489811539242*n >= 0)  &&  (0.9999785148709064 - 0.4998199560702611*j - 0.499825539299702*k + 0.4998470244287951*n >= 0)  &&  (0.9999723074182452 - 0.4997715362005208*k + 0.4997992287822757*n >= 0)  &&  (0.99997539549294 + 0.1790394776455282*j - 0.2088670883329195*k + 0.2088916928399795*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [278+:22428-]|-->> [33m(1 - 0.01626794258373206*j + 0.05741626794258373*k + 0.01626794258373206*n >= 0)  &&  (5.734006734006734 - 0.01346801346801346*j - 0.01346801346801347*k - 0.1144781144781145*n >= 0)  &&  (6.095081967213115 - 0.02622950819672135*k - 0.1114754098360657*n >= 0)  &&  (0.9999978420830913 + 0.07406831785432827*j + 0.07407041744915839*k - 0.07406825953224966*n >= 0)  &&  (1.000002372904073 + 0.101101706657035*j + 0.03475252521131914*k - 0.03475489811539242*n >= 0)  &&  (0.9999785148709064 - 0.4998199560702611*j - 0.499825539299702*k + 0.4998470244287951*n >= 0)  &&  (0.9999723074182452 - 0.4997715362005208*k + 0.4997992287822757*n >= 0)  &&  (0.99997539549294 + 0.1790394776455282*j - 0.2088670883329195*k + 0.2088916928399795*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(123 - 2*j + 7*k + 2*n >= 0)  &&  (50 - n >= 0)  &&  (2 - j - k + n >= 0)  &&  (27 + 2*j + 2*k - 2*n >= 0)  &&  (259 + 26*j + 9*k - 9*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(123 - 2*j + 7*k + 2*n >= 0)  &&  (50 - n >= 0)  &&  (2 - j - k + n >= 0)  &&  (27 + 2*j + 2*k - 2*n >= 0)  &&  (259 + 26*j + 9*k - 9*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,51,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,52,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,53,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,54,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,55,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,56,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,57,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,58,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [722+:24245-]|-->> [33m(1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (0.9804039192161568 - 0.0003999200159968006*j + 0.01999600079984003*k + 0.01999600079984003*n >= 0)  &&  (1.000015545707135 + 0.1538152275259517*j + 0.153825517289744*k - 0.1538307732330866*n >= 0)  &&  (0.9999860708395696 + 0.1790414845431282*j - 0.2088747673867677*k + 0.2088886965471981*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0)  &&  (2.817305374789106 - 0.02651241262954929*j + 0.01542540371173777*k - 0.004820438659918051*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [722+:25854-]|-->> [33m(1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (0.9804039192161568 - 0.0003999200159968006*j + 0.01999600079984003*k + 0.01999600079984003*n >= 0)  &&  (1.000015545707135 + 0.1538152275259517*j + 0.153825517289744*k - 0.1538307732330866*n >= 0)  &&  (0.9999860708395696 + 0.1790414845431282*j - 0.2088747673867677*k + 0.2088886965471981*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0)  &&  (2.817305374789106 - 0.02651241262954929*j + 0.01542540371173777*k - 0.004820438659918051*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [722+:28501-]|-->> [33m(1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (0.9804039192161568 - 0.0003999200159968006*j + 0.01999600079984003*k + 0.01999600079984003*n >= 0)  &&  (1.000015545707135 + 0.1538152275259517*j + 0.153825517289744*k - 0.1538307732330866*n >= 0)  &&  (0.9999860708395696 + 0.1790414845431282*j - 0.2088747673867677*k + 0.2088886965471981*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0)  &&  (2.817305374789106 - 0.02651241262954929*j + 0.01542540371173777*k - 0.004820438659918051*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [722+:29497-]|-->> [33m(1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (0.9804039192161568 - 0.0003999200159968006*j + 0.01999600079984003*k + 0.01999600079984003*n >= 0)  &&  (1.000015545707135 + 0.1538152275259517*j + 0.153825517289744*k - 0.1538307732330866*n >= 0)  &&  (0.9999860708395696 + 0.1790414845431282*j - 0.2088747673867677*k + 0.2088886965471981*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0)  &&  (2.817305374789106 - 0.02651241262954929*j + 0.01542540371173777*k - 0.004820438659918051*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [722+:31082-]|-->> [33m(1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (0.9804039192161568 - 0.0003999200159968006*j + 0.01999600079984003*k + 0.01999600079984003*n >= 0)  &&  (1.000015545707135 + 0.1538152275259517*j + 0.153825517289744*k - 0.1538307732330866*n >= 0)  &&  (0.9999860708395696 + 0.1790414845431282*j - 0.2088747673867677*k + 0.2088886965471981*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0)  &&  (2.817305374789106 - 0.02651241262954929*j + 0.01542540371173777*k - 0.004820438659918051*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - j - k + n >= 0)  &&  (67 + 12*j - 14*k + 14*n >= 0)  &&  (49 + k + n >= 0)  &&  (13 + 2*j + 2*k - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 - j - k + n >= 0)  &&  (67 + 12*j - 14*k + 14*n >= 0)  &&  (49 + k + n >= 0)  &&  (13 + 2*j + 2*k - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-8,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [722+:33170-]|-->> [33m(0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (1.000015545707135 + 0.1538152275259517*j + 0.153825517289744*k - 0.1538307732330866*n >= 0)  &&  (0.9999860708395696 + 0.1790414845431282*j - 0.2088747673867677*k + 0.2088886965471981*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [722+:36028-]|-->> [33m(0.9999830420949971 + 0.3332631124572466*j + 0.3331649489113433*k - 0.3331479910063402*n >= 0)  &&  (0.9999831410560569 + 0.3919965374938749*j + 0.03920808322135905*k - 0.03919122427741595*n >= 0)  &&  (0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [722+:37266-]|-->> [33m(1.000016546566044 + 0.9995643971997209*j + 0.99956418574547*k - 0.9995809437657499*n >= 0)  &&  (1.000017108244414 + 0.9995551856452577*j - 8.554122207016235e-06*k - 8.554122207016235e-06*n >= 0)  &&  (0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [722+:38278-]|-->> [33m(1.000016546566044 + 0.9995643971997209*j + 0.99956418574547*k - 0.9995809437657499*n >= 0)  &&  (1.000017108244414 + 0.9995551856452577*j - 8.554122207016235e-06*k - 8.554122207016235e-06*n >= 0)  &&  (0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + j + k - n >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - j - k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + j + k - n >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - j - k + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (7,0,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [722+:41114-]|-->> [33m(0.9999947311398092 + 1.999233869542673*j + 1.999233869542673*k - 1.999228600682482*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (1.000017108244414 + 0.9995551856452577*j - 8.554122207016235e-06*k - 8.554122207016235e-06*n >= 0)  &&  (0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [722+:41890-]|-->> [33m(0.9999947311398092 + 1.999233869542673*j + 1.999233869542673*k - 1.999228600682482*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (1.000017108244414 + 0.9995551856452577*j - 8.554122207016235e-06*k - 8.554122207016235e-06*n >= 0)  &&  (0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000009142084522 - 0.9998156365258577*j - 0.9998234560988948*k + 0.9998064944413301*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - j - k + n >= 0)  &&  (1 + j >= 0)  &&  (1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - j - k + n >= 0)  &&  (1 + j >= 0)  &&  (1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [722+:43274-]|-->> [33m(0.9999972935546975 - 1.999121143918117*j - 1.999121143918118*k + 1.99912385036342*n >= 0)  &&  (0.9999947311398092 + 1.999233869542673*j + 1.999233869542673*k - 1.999228600682482*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (1.000017108244414 + 0.9995551856452577*j - 8.554122207016235e-06*k - 8.554122207016235e-06*n >= 0)  &&  (0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [722+:44695-]|-->> [33m(0.9999972935546975 - 1.999121143918117*j - 1.999121143918118*k + 1.99912385036342*n >= 0)  &&  (0.9999947311398092 + 1.999233869542673*j + 1.999233869542673*k - 1.999228600682482*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (1.000017108244414 + 0.9995551856452577*j - 8.554122207016235e-06*k - 8.554122207016235e-06*n >= 0)  &&  (0.9999999999999996 + 2.220446049250313e-16*j + 2*k + 2.220446049250313e-16*n >= 0)  &&  (1.000016446363219 - 0.9995723945560897*k + 0.9995559481928709*n >= 0)  &&  (3.016861858947172 + 0.000311780240448022*j + 0.0003036072610917602*k - 0.03507708758776714*n >= 0)  &&  (3.111460674157303 + 0.01123595505617977*j - 0.01078651685393259*k - 0.02561797752808989*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (1 + 2*k >= 0) [0m

=====================time=========================
