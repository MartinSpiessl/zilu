[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target xy4_1
[  8%] Building CXX object CMakeFiles/xy4_1.dir/test/xy4_1.cpp.o
[ 16%] Building CXX object CMakeFiles/xy4_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/xy4_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/xy4_1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/xy4_1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/xy4_1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/xy4_1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/xy4_1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/xy4_1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/xy4_1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/xy4_1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/xy4_1.dir/src/instrumentation.cpp.o
Linking CXX executable xy4_1
[100%] Built target xy4_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [2+:139-]|-->> [33m(1 + 0.004716981132075472*x - 0.01650943396226415*y >= 0)  &&  (1.070015753544548 - 0.01155259933485034*x - 0.02380535620514616*y >= 0)  &&  (1.042851946162241 - 0.01156784285194616*x + 0.003419425245543835*y >= 0)  &&  (1 + 0.01394299774451507*x + 0.02501537830633586*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [2+:279-]|-->> [33m(1 + 0.004716981132075472*x - 0.01650943396226415*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0)  &&  (1.070015753544548 - 0.01155259933485034*x - 0.02380535620514616*y >= 0)  &&  (1 + 0.1268292682926829*x + 0.05853658536585366*y >= 0) 
[0m[31m[3Pure Random][0m[#r60,#s0] -->   [2+:415-]|-->> [33m(1 + 0.3076923076923077*x - 0.4615384615384615*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0)  &&  (1.070015753544548 - 0.01155259933485034*x - 0.02380535620514616*y >= 0) 
[0m[31m[4Pure Random][0m[#r80,#s0] -->   [2+:598-]|-->> [33m(1.249438202247191 - 0.05168539325842697*x - 0.04269662921348315*y >= 0)  &&  (1 + 0.3076923076923077*x - 0.4615384615384615*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0) 
[0m[31m[5Pure Random][0m[#r100,#s0] -->   [2+:722-]|-->> [33m(1.249438202247191 - 0.05168539325842697*x - 0.04269662921348315*y >= 0)  &&  (1 + 0.3076923076923077*x - 0.4615384615384615*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(146 - 6*x - 5*y >= 0)  &&  (13 + 4*x - 6*y >= 0)  &&  (11 - 2*x + 8*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.inv >>> [0m(146 - 6*x - 5*y >= 0)  &&  (13 + 4*x - 6*y >= 0)  &&  (11 - 2*x + 8*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[34m[1mTest Counter Example: (20,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (17,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (16,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (18,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (15,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (14,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (13,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (21,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [2+:922-]|-->> [33m(1.50566037735849 - 0.1207547169811321*x - 0.02264150943396227*y >= 0)  &&  (1 + 0.3076923076923077*x - 0.4615384615384615*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [2+:1111-]|-->> [33m(1.50566037735849 - 0.1207547169811321*x - 0.02264150943396227*y >= 0)  &&  (1 + 0.3076923076923077*x - 0.4615384615384615*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(200 - 16*x - 3*y >= 0)  &&  (13 + 4*x - 6*y >= 0)  &&  (11 - 2*x + 8*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.inv >>> [0m(200 - 16*x - 3*y >= 0)  &&  (13 + 4*x - 6*y >= 0)  &&  (11 - 2*x + 8*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[34m[1mTest Counter Example: (9,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (8,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (9,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (10,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (11,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (10,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (12,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (9,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [2+:1294-]|-->> [33m(2.6 - 0.4*x >= 0)  &&  (2 - 0.2*x - 0.2*y >= 0)  &&  (1 + 0.3076923076923077*x - 0.4615384615384615*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [2+:1454-]|-->> [33m(2.6 - 0.4*x >= 0)  &&  (2 - 0.2*x - 0.2*y >= 0)  &&  (1 + 0.3076923076923077*x - 0.4615384615384615*y >= 0)  &&  (1 - 0.181900987978259*x + 0.7276039519130364*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0)  &&  (1 + 0.2439024390243902*x + 0.1951219512195122*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(13 - 2*x >= 0)  &&  (11 - 2*x + 8*y >= 0)  &&  (13 + 4*x - 6*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.inv >>> [0m(13 - 2*x >= 0)  &&  (11 - 2*x + 8*y >= 0)  &&  (13 + 4*x - 6*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[34m[1mTest Counter Example: (3,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (5,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [2+:1684-]|-->> [33m(9 - 2*x >= 0)  &&  (1 + 1.999013364039897*x - 7.997040092119676*y >= 0)  &&  (1 - 0.6666666666666661*x + 2.665852864583332*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [2+:1804-]|-->> [33m(9 - 2*x >= 0)  &&  (1 + 1.999013364039897*x - 7.997040092119676*y >= 0)  &&  (1 - 0.6666666666666661*x + 2.665852864583332*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(9 - 2*x >= 0)  &&  (1 + 2*x - 8*y >= 0)  &&  (3 - 2*x + 8*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.inv >>> [0m(9 - 2*x >= 0)  &&  (1 + 2*x - 8*y >= 0)  &&  (3 - 2*x + 8*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [2+:1954-]|-->> [33m(1 - 1.999038029938912*x + 7.997114089816733*y >= 0)  &&  (9 - 2*x >= 0)  &&  (1 + 1.999013364039897*x - 7.997040092119676*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [2+:2151-]|-->> [33m(1 - 1.999038029938912*x + 7.997114089816733*y >= 0)  &&  (9 - 2*x >= 0)  &&  (1 + 1.999013364039897*x - 7.997040092119676*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x + 8*y >= 0)  &&  (1 + 2*x - 8*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.inv >>> [0m(1 - 2*x + 8*y >= 0)  &&  (1 + 2*x - 8*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt[0m
[34m[1mTest Counter Example: (-4,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-8,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-12,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-16,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-20,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-24,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-28,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-32,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [2+:2310-]|-->> [33m(1 - 1.999038029938912*x + 7.997114089816733*y >= 0)  &&  (9 - 2*x >= 0)  &&  (1 + 1.999013364039897*x - 7.997040092119676*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [2+:2493-]|-->> [33m(1 - 1.999038029938912*x + 7.997114089816733*y >= 0)  &&  (9 - 2*x >= 0)  &&  (1 + 1.999013364039897*x - 7.997040092119676*y >= 0)  &&  (1 + 0.2*x + 0.6000000000000001*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x + 8*y >= 0)  &&  (5 + x + 3*y >= 0)  &&  (1 + 2*x - 8*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy4_1.inv >>> [0m(1 - 2*x + 8*y >= 0)  &&  (5 + x + 3*y >= 0)  &&  (1 + 2*x - 8*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*x + 8*y >= 0)  &&  (5 + x + 3*y >= 0)  &&  (1 + 2*x - 8*y >= 0) [0m

=====================time=========================
