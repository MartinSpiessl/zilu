[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target simple_if
[  8%] Building CXX object CMakeFiles/simple_if.dir/test/simple_if.cpp.o
[ 16%] Building CXX object CMakeFiles/simple_if.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/simple_if.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/simple_if.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/simple_if.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/simple_if.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/simple_if.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/simple_if.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/simple_if.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/simple_if.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/simple_if.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/simple_if.dir/src/instrumentation.cpp.o
Linking CXX executable simple_if
[100%] Built target simple_if
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 1	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt[0m
[34m[1mTest Counter Example: (1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [1+:7-]|-->> [33m(0.9882752960487747 + 0.01172470395122523*i + 0.002344940790245046*m + 0.01805604408488685*n >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [1+:11-]|-->> [33m(0.9882752960487747 + 0.01172470395122523*i + 0.002344940790245046*m + 0.01805604408488685*n >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(927 + 11*i + 17*n >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.inv >>> [0m(927 + 11*i + 17*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt[0m
[34m[1mTest Counter Example: (1,29,-56) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,29,-57) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,30,-56) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,0,-58) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-1,-59) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-2,-60) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-3,-61) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-4,-62) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [9+:17-]|-->> [33m(2.294261690547497 + 0.1075070761564307*i + 0.007628371228361963*m + 0.02211702067403999*n >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [9+:21-]|-->> [33m(2.294261690547497 + 0.1075070761564307*i + 0.007628371228361963*m + 0.02211702067403999*n >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(43 + 2*i >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.inv >>> [0m(43 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt[0m
[34m[1mTest Counter Example: (-9,0,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-10,-1,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-11,-2,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-12,-3,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-13,-4,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-14,-5,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-15,-6,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-16,-7,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [9+:25-]|-->> [33m(1.883859086834477 + 0.2716627587319804*i + 0.0003622020063380749*m + 0.01861408125066333*n >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [9+:27-]|-->> [33m(1.883859086834477 + 0.2716627587319804*i + 0.0003622020063380749*m + 0.01861408125066333*n >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(7 + i >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.inv >>> [0m(7 + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt[0m
[34m[1mTest Counter Example: (-7,0,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-4,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-6,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-7,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-7,0,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-7,-6,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/simple_if.cnt --> [0m?
