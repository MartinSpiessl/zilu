[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_linear1
[  8%] Building CXX object CMakeFiles/zilu_linear1.dir/test/zilu_linear1.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_linear1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_linear1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_linear1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_linear1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_linear1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_linear1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_linear1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_linear1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_linear1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_linear1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_linear1.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_linear1
[100%] Built target zilu_linear1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [201+:7-]|-->> [33m(1.213915839367127 - 0.02115117136153088*x + 0.02071159617599984*y >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [279+:24-]|-->> [33m(1.52084917737924 - 0.04799588073960319*x + 0.04718789596433473*y >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [320+:43-]|-->> [33m(2.090589090627538 - 0.1005718344275234*x + 0.09887441950047632*y >= 0) [0m
[31m[4][0m[#r16,#s64] -->  [341+:61-]|-->> [33m(3.398521740725528 - 0.2211866352342371*x + 0.2174535274665703*y >= 0) [0m
[31m[5][0m[#r20,#s80] -->  [358+:67-]|-->> [33m(7.431845535149478 - 0.5302428305974303*x + 0.5249404022914561*y >= 0) [0m
[31m[6][0m[#r24,#s96] -->  [358+:72-]|-->> [33m(10.32891735968587 - 0.666351239977331*x + 0.6663512399773452*y >= 0) [0m
[31m[7][0m[#r28,#s112] -->  [430+:74-]|-->> [33m(10.32871197787972 - 0.6663365698483261*x + 0.6663365698483261*y >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(31 - 2*x + 2*y >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.inv >>> [0m(31 - 2*x + 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt[0m
[34m[1mTest Counter Example: (-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-8,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-9,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [736+:82-]|-->> [33m(24.65579260502545 - 1.472043268642039*x + 1.477771063461631*y >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [806+:92-]|-->> [33m(32.98400244443775 - 1.999000152777356*x + 1.999000152777366*y >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [896+:99-]|-->> [33m(32.99788384926376 - 1.999863840167116*x + 1.999869513493472*y >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(33 - 2*x + 2*y >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear1.inv >>> [0m(33 - 2*x + 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(33 - 2*x + 2*y >= 0) [0m

=====================time=========================
