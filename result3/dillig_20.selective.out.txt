[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_20
[  8%] Building CXX object CMakeFiles/dillig_20.dir/test/dillig_20.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_20.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_20.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_20.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_20.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_20.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_20.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_20.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_20.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_20.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_20.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_20.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_20
[100%] Built target dillig_20
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [5+:126-]|-->> [33m(1.04729534278276 + 0.01055828753254267*x - 0.005206826728377205*y + 0.002458779288400347*k >= 0)  &&  (1.01330376940133 + 0.002684093826584199*x - 0.00175049597385926*y - 0.01493756564359902*k >= 0)  &&  (1.010456848073616 - 0.008969651903146348*x + 0.001487196170469861*y - 0.003206766742575638*k >= 0)  &&  (1.015589814654426 + 0.009353888792655465*x + 0.004157283907846874*y + 0.02425082279577343*k >= 0)  &&  (1.009669889963321 - 0.01155940869178615*x - 0.001889518728465044*y + 0.009225297321329332*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [5+:256-]|-->> [33m(1.04729534278276 + 0.01055828753254267*x - 0.005206826728377205*y + 0.002458779288400347*k >= 0)  &&  (1.01330376940133 + 0.002684093826584199*x - 0.00175049597385926*y - 0.01493756564359902*k >= 0)  &&  (1.010456848073616 - 0.008969651903146348*x + 0.001487196170469861*y - 0.003206766742575638*k >= 0)  &&  (1.015589814654426 + 0.009353888792655465*x + 0.004157283907846874*y + 0.02425082279577343*k >= 0)  &&  (1.009669889963321 - 0.01155940869178615*x - 0.001889518728465044*y + 0.009225297321329332*k >= 0)  &&  (1.009072352007258 + 0.001474257201179406*x + 0.01054660920843729*y >= 0)  &&  (1.025978616241053 - 0.01431474772466201*x + 0.01166386851639127*y + 0.003534505611027658*k >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [5+:371-]|-->> [33m(1.04729534278276 + 0.01055828753254267*x - 0.005206826728377205*y + 0.002458779288400347*k >= 0)  &&  (1.01330376940133 + 0.002684093826584199*x - 0.00175049597385926*y - 0.01493756564359902*k >= 0)  &&  (1.010456848073616 - 0.008969651903146348*x + 0.001487196170469861*y - 0.003206766742575638*k >= 0)  &&  (1.015589814654426 + 0.009353888792655465*x + 0.004157283907846874*y + 0.02425082279577343*k >= 0)  &&  (1.00513225424398 - 0.01618634030793526*x - 0.01105408606395578*y + 0.02013422818791947*k >= 0)  &&  (1.009072352007258 + 0.001474257201179406*x + 0.01054660920843729*y >= 0)  &&  (1.025978616241053 - 0.01431474772466201*x + 0.01166386851639127*y + 0.003534505611027658*k >= 0)  &&  (1.028036375399878 - 0.001869091693325186*x - 0.01121455015995112*y - 0.003810071528701341*k >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [5+:493-]|-->> [33m(1.04729534278276 + 0.01055828753254267*x - 0.005206826728377205*y + 0.002458779288400347*k >= 0)  &&  (1.01330376940133 + 0.002684093826584199*x - 0.00175049597385926*y - 0.01493756564359902*k >= 0)  &&  (1.001695394179147 + 0.012150324950551*x + 0.01158519355750212*y - 0.0008476970895733259*k >= 0)  &&  (1.015589814654426 + 0.009353888792655465*x + 0.004157283907846874*y + 0.02425082279577343*k >= 0)  &&  (1.013872135102533 - 0.004825090470446321*x + 0.00904704463208685*y - 0.02231604342581423*k >= 0)  &&  (1.00513225424398 - 0.01618634030793526*x - 0.01105408606395578*y + 0.02013422818791947*k >= 0)  &&  (1.025978616241053 - 0.01431474772466201*x + 0.01166386851639127*y + 0.003534505611027658*k >= 0)  &&  (1.028036375399878 - 0.001869091693325186*x - 0.01121455015995112*y - 0.003810071528701341*k >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [5+:595-]|-->> [33m(1.04729534278276 + 0.01055828753254267*x - 0.005206826728377205*y + 0.002458779288400347*k >= 0)  &&  (1.01330376940133 + 0.002684093826584199*x - 0.00175049597385926*y - 0.01493756564359902*k >= 0)  &&  (1.001695394179147 + 0.012150324950551*x + 0.01158519355750212*y - 0.0008476970895733259*k >= 0)  &&  (1.015589814654426 + 0.009353888792655465*x + 0.004157283907846874*y + 0.02425082279577343*k >= 0)  &&  (1.013872135102533 - 0.004825090470446321*x + 0.00904704463208685*y - 0.02231604342581423*k >= 0)  &&  (1.00513225424398 - 0.01618634030793526*x - 0.01105408606395578*y + 0.02013422818791947*k >= 0)  &&  (1.025978616241053 - 0.01431474772466201*x + 0.01166386851639127*y + 0.003534505611027658*k >= 0)  &&  (1.028036375399878 - 0.001869091693325186*x - 0.01121455015995112*y - 0.003810071528701341*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(99 + x >= 0)  &&  (92 - y >= 0)  &&  (1470 + 18*x + 17*y >= 0)  &&  (42 + k >= 0)  &&  (45 - k >= 0)  &&  (1000 - 16*x - 11*y + 20*k >= 0)  &&  (792 - 11*x + 9*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(99 + x >= 0)  &&  (92 - y >= 0)  &&  (1470 + 18*x + 17*y >= 0)  &&  (42 + k >= 0)  &&  (45 - k >= 0)  &&  (1000 - 16*x - 11*y + 20*k >= 0)  &&  (792 - 11*x + 9*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (-100,0,-100) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-101,-1,-102) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-102,-2,-104) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-103,-3,-106) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-104,-4,-108) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-105,-5,-110) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-106,-6,-112) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-107,-7,-114) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [43+:688-]|-->> [33m(1.066726560668991 + 0.009770878006186475*x - 0.01247130888347723*y - 0.009543600838634893*k >= 0)  &&  (1.012084147958844 + 0.0197039122819108*x + 0.03178806024075525*y - 0.0207163800505898*k >= 0)  &&  (1.026920939460079 + 0.01407691622355257*x + 0.005103269736859619*y - 0.01398271680054374*k >= 0)  &&  (1.071103842935439 - 0.05953741280134228*x + 0.01156643013409716*y + 0.05360467474624156*k >= 0)  &&  (1.070052813152687 - 0.002214241869120913*x - 0.02556517958668336*y + 0.002455134697965322*k >= 0)  &&  (1.002243409983174 - 0.001495606655449617*x + 0.0007478033277248085*y - 0.02729482146195551*k >= 0)  &&  (3.316336984789975 + 0.01056032784301363*x + 0.01040271100953582*y + 0.009772243675624556*k >= 0)  &&  (8.270886075949356 + 0.01265822784810128*x - 0.04556962025316444*y + 0.05316455696202516*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [43+:796-]|-->> [33m(1.066726560668991 + 0.009770878006186475*x - 0.01247130888347723*y - 0.009543600838634893*k >= 0)  &&  (1.012084147958844 + 0.0197039122819108*x + 0.03178806024075525*y - 0.0207163800505898*k >= 0)  &&  (1.026920939460079 + 0.01407691622355257*x + 0.005103269736859619*y - 0.01398271680054374*k >= 0)  &&  (1.071103842935439 - 0.05953741280134228*x + 0.01156643013409716*y + 0.05360467474624156*k >= 0)  &&  (1.070052813152687 - 0.002214241869120913*x - 0.02556517958668336*y + 0.002455134697965322*k >= 0)  &&  (1.002243409983174 - 0.001495606655449617*x + 0.0007478033277248085*y - 0.02729482146195551*k >= 0)  &&  (3.316336984789975 + 0.01056032784301363*x + 0.01040271100953582*y + 0.009772243675624556*k >= 0)  &&  (8.270886075949356 + 0.01265822784810128*x - 0.04556962025316444*y + 0.05316455696202516*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(37 - k >= 0)  &&  (925 + 18*x + 29*y - 19*k >= 0)  &&  (73 + x - k >= 0)  &&  (556 - 31*x + 6*y + 28*k >= 0)  &&  (42 - y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(37 - k >= 0)  &&  (925 + 18*x + 29*y - 19*k >= 0)  &&  (73 + x - k >= 0)  &&  (556 - 31*x + 6*y + 28*k >= 0)  &&  (42 - y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (38,0,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (40,-1,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (41,-3,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (40,-2,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (42,-4,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,38,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (43,-5,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (44,-6,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [62+:908-]|-->> [33m(1.734257382041771 + 0.01356188003460768*x - 0.01255902782663017*y - 0.00674172437141472*k >= 0)  &&  (4.160381394246693 - 0.05005985380091654*x - 0.05212406691494596*y - 0.03102849510576869*k >= 0)  &&  (1.080203292356005 + 0.02207886400979192*x + 0.03006265382630335*y - 0.02207565879759112*k >= 0)  &&  (8.270886075949399 + 0.01265822784810133*x - 0.04556962025316477*y + 0.0531645569620256*k >= 0)  &&  (1.621360728592336 - 0.06649561247727145*x - 0.004433256377899535*y + 0.06650207885971546*k >= 0)  &&  (1.899501959257232 + 0.004766726972088305*x - 0.02724937947314209*y + 0.003587970491579402*k >= 0)  &&  (1.669419043503809 + 0.01994911023976079*x + 0.01952151895041877*y - 0.03712466497804671*k >= 0)  &&  (3.309668098902364 + 0.01048487463833761*x + 0.01048487463833749*y + 0.009775371843262076*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [62+:1043-]|-->> [33m(1.734257382041771 + 0.01356188003460768*x - 0.01255902782663017*y - 0.00674172437141472*k >= 0)  &&  (3.516953439826921 + 0.0340543259317472*x - 0.0221755197793664*y - 0.01000938844770029*k >= 0)  &&  (4.160381394246693 - 0.05005985380091654*x - 0.05212406691494596*y - 0.03102849510576869*k >= 0)  &&  (1.080203292356005 + 0.02207886400979192*x + 0.03006265382630335*y - 0.02207565879759112*k >= 0)  &&  (1.621360728592336 - 0.06649561247727145*x - 0.004433256377899535*y + 0.06650207885971546*k >= 0)  &&  (1.899501959257232 + 0.004766726972088305*x - 0.02724937947314209*y + 0.003587970491579402*k >= 0)  &&  (1.669419043503809 + 0.01994911023976079*x + 0.01952151895041877*y - 0.03712466497804671*k >= 0)  &&  (3.309668098902364 + 0.01048487463833761*x + 0.01048487463833749*y + 0.009775371843262076*k >= 0)  &&  (8.270886075949399 + 0.01265822784810133*x - 0.04556962025316477*y + 0.0531645569620256*k >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [62+:1140-]|-->> [33m(1.734257382041771 + 0.01356188003460768*x - 0.01255902782663017*y - 0.00674172437141472*k >= 0)  &&  (1.350288604347259 + 0.03507564447105536*x + 0.0701557874071424*y - 0.03508014293608702*k >= 0)  &&  (3.516953439826921 + 0.0340543259317472*x - 0.0221755197793664*y - 0.01000938844770029*k >= 0)  &&  (4.160381394246693 - 0.05005985380091654*x - 0.05212406691494596*y - 0.03102849510576869*k >= 0)  &&  (1.621360728592336 - 0.06649561247727145*x - 0.004433256377899535*y + 0.06650207885971546*k >= 0)  &&  (1.899501959257232 + 0.004766726972088305*x - 0.02724937947314209*y + 0.003587970491579402*k >= 0)  &&  (1.669419043503809 + 0.01994911023976079*x + 0.01952151895041877*y - 0.03712466497804671*k >= 0)  &&  (1.080203292356005 + 0.02207886400979192*x + 0.03006265382630335*y - 0.02207565879759112*k >= 0)  &&  (8.270886075949399 + 0.01265822784810133*x - 0.04556962025316477*y + 0.0531645569620256*k >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [62+:1278-]|-->> [33m(1.734257382041771 + 0.01356188003460768*x - 0.01255902782663017*y - 0.00674172437141472*k >= 0)  &&  (0.9993686241119661 - 0.2221429277686829*x - 0.2221463294896904*y + 0.2221375087423322*k >= 0)  &&  (1.350288604347259 + 0.03507564447105536*x + 0.0701557874071424*y - 0.03508014293608702*k >= 0)  &&  (3.516953439826921 + 0.0340543259317472*x - 0.0221755197793664*y - 0.01000938844770029*k >= 0)  &&  (1.621360728592336 - 0.06649561247727145*x - 0.004433256377899535*y + 0.06650207885971546*k >= 0)  &&  (1.899501959257232 + 0.004766726972088305*x - 0.02724937947314209*y + 0.003587970491579402*k >= 0)  &&  (1.669419043503809 + 0.01994911023976079*x + 0.01952151895041877*y - 0.03712466497804671*k >= 0)  &&  (4.160381394246693 - 0.05005985380091654*x - 0.05212406691494596*y - 0.03102849510576869*k >= 0)  &&  (1.080203292356005 + 0.02207886400979192*x + 0.03006265382630335*y - 0.02207565879759112*k >= 0)  &&  (8.270886075949399 + 0.01265822784810133*x - 0.04556962025316477*y + 0.0531645569620256*k >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [62+:1385-]|-->> [33m(1.183811413524179 + 0.05259635871368602*x + 0.04605191461808994*y - 0.05088913346035615*k >= 0)  &&  (0.9993686241119661 - 0.2221429277686829*x - 0.2221463294896904*y + 0.2221375087423322*k >= 0)  &&  (1.350288604347259 + 0.03507564447105536*x + 0.0701557874071424*y - 0.03508014293608702*k >= 0)  &&  (3.516953439826921 + 0.0340543259317472*x - 0.0221755197793664*y - 0.01000938844770029*k >= 0)  &&  (1.621360728592336 - 0.06649561247727145*x - 0.004433256377899535*y + 0.06650207885971546*k >= 0)  &&  (1.899501959257232 + 0.004766726972088305*x - 0.02724937947314209*y + 0.003587970491579402*k >= 0)  &&  (1.669419043503809 + 0.01994911023976079*x + 0.01952151895041877*y - 0.03712466497804671*k >= 0)  &&  (4.160381394246693 - 0.05005985380091654*x - 0.05212406691494596*y - 0.03102849510576869*k >= 0)  &&  (8.270886075949399 + 0.01265822784810133*x - 0.04556962025316477*y + 0.0531645569620256*k >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [63+:1486-]|-->> [33m(0.9993105498556361 - 0.4998286289169469*x - 0.4998221084535945*y + 0.4998223523204715*k >= 0)  &&  (0.9996226139410318 + 0.0499849232957638*x + 0.04998219690401354*y - 0.0499881380369214*k >= 0)  &&  (1.350303631604476 + 0.03507595275348421*x + 0.07015628912168345*y - 0.03508033636819927*k >= 0)  &&  (1.621293438656686 - 0.06649862980870641*x - 0.004433429541628953*y + 0.06650425644016184*k >= 0)  &&  (5.774187169244982 - 0.00905406772540325*x - 0.1397368912524323*y + 0.05418228294731242*k >= 0)  &&  (4.721425274619442 - 0.02522265556013713*x + 0.03328480780239008*y - 0.05731288762391992*k >= 0)  &&  (8.270886075949306 + 0.01265822784810117*x - 0.0455696202531642*y + 0.05316455696202493*k >= 0)  &&  (4.793334388835731 - 0.1166996034576062*x - 0.05705220276689688*y + 0.0325716986700102*k >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [63+:1592-]|-->> [33m(0.9993105498556361 - 0.4998286289169469*x - 0.4998221084535945*y + 0.4998223523204715*k >= 0)  &&  (0.9996226139410318 + 0.0499849232957638*x + 0.04998219690401354*y - 0.0499881380369214*k >= 0)  &&  (1.350303631604476 + 0.03507595275348421*x + 0.07015628912168345*y - 0.03508033636819927*k >= 0)  &&  (1.621293438656686 - 0.06649862980870641*x - 0.004433429541628953*y + 0.06650425644016184*k >= 0)  &&  (5.774187169244982 - 0.00905406772540325*x - 0.1397368912524323*y + 0.05418228294731242*k >= 0)  &&  (4.721425274619442 - 0.02522265556013713*x + 0.03328480780239008*y - 0.05731288762391992*k >= 0)  &&  (8.270886075949306 + 0.01265822784810117*x - 0.0455696202531642*y + 0.05316455696202493*k >= 0)  &&  (4.793334388835731 - 0.1166996034576062*x - 0.05705220276689688*y + 0.0325716986700102*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 7 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 - x - y + k >= 0)  &&  (20 + x + y - k >= 0)  &&  (77 + 2*x + 4*y - 2*k >= 0)  &&  (82 - k >= 0)  &&  (41 - y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(2 - x - y + k >= 0)  &&  (20 + x + y - k >= 0)  &&  (77 + 2*x + 4*y - 2*k >= 0)  &&  (82 - k >= 0)  &&  (41 - y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (0,-39,-39) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-40,-41) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-2,-41,-43) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-3,-42,-45) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-4,-43,-47) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-5,-44,-49) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-6,-45,-51) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-7,-46,-53) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [101+:1716-]|-->> [33m(2.012328742273356 + 0.01522263617493225*x - 0.01248485303809507*y - 0.005653498536459234*k >= 0)  &&  (7.200790513833986 + 0.01264822134387347*x + 0.03794466403162048*y + 0.03952569169960465*k >= 0)  &&  (0.9993060341103046 - 0.4998275064744959*x - 0.4998209433035559*y + 0.4998211887677115*k >= 0)  &&  (0.9996184466339226 + 0.05261532443806179*x + 0.05262678315884495*y - 0.05261967654835925*k >= 0)  &&  (7.924496405681348 - 0.1283925951979925*x + 0.1251158424244608*y + 0.01288175231754995*k >= 0)  &&  (4.721734781248662 - 0.02522450710304573*x + 0.03328676402270531*y - 0.05731817894935304*k >= 0)  &&  (3.520674281619403 + 0.03405937053578921*x - 0.02215553400403535*y - 0.009976925810391668*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [101+:1809-]|-->> [33m(2.012328742273356 + 0.01522263617493225*x - 0.01248485303809507*y - 0.005653498536459234*k >= 0)  &&  (7.200790513833986 + 0.01264822134387347*x + 0.03794466403162048*y + 0.03952569169960465*k >= 0)  &&  (0.9993060341103046 - 0.4998275064744959*x - 0.4998209433035559*y + 0.4998211887677115*k >= 0)  &&  (0.9996184466339226 + 0.05261532443806179*x + 0.05262678315884495*y - 0.05261967654835925*k >= 0)  &&  (7.924496405681348 - 0.1283925951979925*x + 0.1251158424244608*y + 0.01288175231754995*k >= 0)  &&  (4.721734781248662 - 0.02522450710304573*x + 0.03328676402270531*y - 0.05731817894935304*k >= 0)  &&  (3.520674281619403 + 0.03405937053578921*x - 0.02215553400403535*y - 0.009976925810391668*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(82 - k >= 0)  &&  (1773 - 29*x + 28*y >= 0)  &&  (2 - x - y + k >= 0)  &&  (19 + x + y - k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(82 - k >= 0)  &&  (1773 - 29*x + 28*y >= 0)  &&  (2 - x - y + k >= 0)  &&  (19 + x + y - k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (83,0,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (85,-1,84) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (86,-3,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (85,-2,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (87,-4,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,83,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (88,-5,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (89,-6,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [119+:1920-]|-->> [33m(7.200790513833965 + 0.01264822134387347*x + 0.03794466403162038*y + 0.03952569169960457*k >= 0)  &&  (0.9996127342369618 - 0.4998359278216755*x - 0.4998394924677818*y + 0.4998326558288824*k >= 0)  &&  (0.9996545169835294 + 0.0526142370704727*x + 0.05262490705067426*y - 0.05261764200851905*k >= 0)  &&  (12.28217084575317 - 0.1594993723597483*x + 0.1813018907031976*y + 0.05231187833188655*k >= 0)  &&  (8.327127153749458 + 0.007331408243337639*x + 0.01958770525651093*y - 0.09427621300566119*k >= 0)  &&  (4.152515514804024 + 0.04632778292759496*x - 0.01770573134959416*y - 0.01642734808625478*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [119+:2023-]|-->> [33m(27.21176470588267 - 0.1647058823529433*y - 0.141176470588237*k >= 0)  &&  (7.200790513833965 + 0.01264822134387347*x + 0.03794466403162038*y + 0.03952569169960457*k >= 0)  &&  (0.9996127342369618 - 0.4998359278216755*x - 0.4998394924677818*y + 0.4998326558288824*k >= 0)  &&  (0.9996545169835294 + 0.0526142370704727*x + 0.05262490705067426*y - 0.05261764200851905*k >= 0)  &&  (12.28217084575317 - 0.1594993723597483*x + 0.1813018907031976*y + 0.05231187833188655*k >= 0)  &&  (8.327127153749458 + 0.007331408243337639*x + 0.01958770525651093*y - 0.09427621300566119*k >= 0)  &&  (4.152515514804024 + 0.04632778292759496*x - 0.01770573134959416*y - 0.01642734808625478*k >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [119+:2132-]|-->> [33m(27.21176470588267 - 0.1647058823529433*y - 0.141176470588237*k >= 0)  &&  (7.200790513833965 + 0.01264822134387347*x + 0.03794466403162038*y + 0.03952569169960457*k >= 0)  &&  (0.9996127342369618 - 0.4998359278216755*x - 0.4998394924677818*y + 0.4998326558288824*k >= 0)  &&  (0.9996545169835294 + 0.0526142370704727*x + 0.05262490705067426*y - 0.05261764200851905*k >= 0)  &&  (12.28217084575317 - 0.1594993723597483*x + 0.1813018907031976*y + 0.05231187833188655*k >= 0)  &&  (8.327127153749458 + 0.007331408243337639*x + 0.01958770525651093*y - 0.09427621300566119*k >= 0)  &&  (4.152515514804024 + 0.04632778292759496*x - 0.01770573134959416*y - 0.01642734808625478*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(90 + x >= 0)  &&  (539 - 7*x + 8*y >= 0)  &&  (2 - x - y + k >= 0)  &&  (19 + x + y - k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(90 + x >= 0)  &&  (539 - 7*x + 8*y >= 0)  &&  (2 - x - y + k >= 0)  &&  (19 + x + y - k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (-91,0,-91) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-92,-1,-93) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-93,-2,-95) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-94,-3,-97) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-95,-4,-99) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-96,-5,-101) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-97,-6,-103) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-98,-7,-105) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [152+:2245-]|-->> [33m(27.21176470588171 - 0.164705882352937*y - 0.1411764705882319*k >= 0)  &&  (7.200790513834001 + 0.01264822134387353*x + 0.03794466403162058*y + 0.03952569169960476*k >= 0)  &&  (0.9996129261048736 - 0.4998360091100236*x - 0.4998395719900515*y + 0.4998327387383128*k >= 0)  &&  (0.9995666775010204 + 0.05261072914632874*x + 0.05262266701577384*y - 0.05261494909349332*k >= 0)  &&  (12.2724857633907 - 0.1593554439242321*x + 0.1811436809804086*y + 0.0522707126505062*k >= 0)  &&  (8.32762709605133 + 0.00733055438118782*x + 0.01959101335989508*y - 0.09428373273844459*k >= 0)  &&  (4.152255241803648 + 0.04632502816279644*x - 0.01770503184174743*y - 0.01642699762049973*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [152+:2340-]|-->> [33m(7.305064309676197 + 0.02662468350792846*x + 0.1048584490888192*y + 0.02182028714003015*k >= 0)  &&  (0.9996651116307476 - 1.999327629383373*x - 1.999332579527987*y + 1.999324865455378*k >= 0)  &&  (3.401460967732547 + 0.07147590867003606*x + 0.1427358780389536*y - 0.09285389948071088*k >= 0)  &&  (27.21176470588171 - 0.164705882352937*y - 0.1411764705882319*k >= 0)  &&  (7.200790513834001 + 0.01264822134387353*x + 0.03794466403162058*y + 0.03952569169960476*k >= 0)  &&  (0.9995666775010204 + 0.05261072914632874*x + 0.05262266701577384*y - 0.05261494909349332*k >= 0)  &&  (12.2724857633907 - 0.1593554439242321*x + 0.1811436809804086*y + 0.0522707126505062*k >= 0)  &&  (4.152255241803648 + 0.04632502816279644*x - 0.01770503184174743*y - 0.01642699762049973*k >= 0)  &&  (8.32762709605133 + 0.00733055438118782*x + 0.01959101335989508*y - 0.09428373273844459*k >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [158+:2458-]|-->> [33m(1.00124973635684 - 1.999334503703796*x - 1.999330362646219*y + 1.999319724486668*k >= 0)  &&  (1.000513797896929 + 1.999362615036489*x + 1.999358722914167*y - 1.999368824347584*k >= 0)  &&  (3.027070683576214 - 0.003333007562818784*x + 0.02181872992929125*y + 0.01890803658610927*k >= 0)  &&  (12.27889812326219 - 0.1594561580819523*x + 0.1812504197075808*y + 0.05229507381228637*k >= 0)  &&  (6.105981272230785 + 0.0129064193470238*x - 0.02410825620491723*y + 0.03318165060419153*k >= 0)  &&  (4.114706690602855 - 0.01556062212740105*x - 0.01025907102409922*y - 0.02139299202017338*k >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [205+:2517-]|-->> [33m(1.003230689151678 + 1.997729570395165*x + 1.997713229447527*y - 1.997720583847581*k >= 0)  &&  (0.9998273045597976 - 0.02173579455482695*x - 0.02173486159240707*y + 0.02173514478328433*k >= 0)  &&  (1.000608172354987 - 1.982729290021496*x - 1.982759864014781*y + 1.982809318579768*k >= 0)  &&  (0.9999824031588389 - 0.2498788899049895*x - 0.2498785450663026*y + 0.2498781121301477*k >= 0)  &&  (1.000410436172388 + 0.9997494785398544*x + 0.9997475852679827*y - 0.9997488574301343*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*x + 2*y - 2*k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(1 + 2*x + 2*y - 2*k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*x + 2*y - 2*k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) [0m

=====================time=========================
