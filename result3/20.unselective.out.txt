[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 20
[  8%] Building CXX object CMakeFiles/20.dir/test/20.cpp.o
[ 16%] Building CXX object CMakeFiles/20.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/20.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/20.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/20.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/20.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/20.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/20.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/20.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/20.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/20.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/20.dir/src/instrumentation.cpp.o
Linking CXX executable 20
[100%] Built target 20
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [7+:254-]|-->> [33m(1.014627051734885 - 0.002687166701295104*x - 0.005125008657109219*y - 0.004681764665143016*k >= 0)  &&  (1 + 0.004418011894647409*x + 0.01563296516567545*y + 0.02039082412914189*k >= 0)  &&  (1.027856968314735 + 0.009204202981184328*x + 0.004561374928728516*y - 0.007575140506638429*k >= 0)  &&  (1 - 0.006179876402471951*x - 0.006119877602447951*y + 0.006659866802663947*k >= 0)  &&  (1 - 0.004286003099939349*x + 0.003908619179189972*y - 0.004501651054653278*k >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [7+:534-]|-->> [33m(1.014627051734885 - 0.002687166701295104*x - 0.005125008657109219*y - 0.004681764665143016*k >= 0)  &&  (1 + 0.004418011894647409*x + 0.01563296516567545*y + 0.02039082412914189*k >= 0)  &&  (1.027856968314735 + 0.009204202981184328*x + 0.004561374928728516*y - 0.007575140506638429*k >= 0)  &&  (1 - 0.006179876402471951*x - 0.006119877602447951*y + 0.006659866802663947*k >= 0)  &&  (1.11282575370465 + 0.01267245784363822*x - 0.006131834440470107*y - 0.01451200817577925*k >= 0)  &&  (1 - 0.001707455890722823*x - 0.001707455890722823*y - 0.01252134319863404*k >= 0)  &&  (1 - 0.0219191427179737*x + 0.009741841207988308*y - 0.01997077447637603*k >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [13+:670-]|-->> [33m(1 - 0.01575401833205378*x - 0.01469057985081816*y + 0.01530663248667807*k >= 0)  &&  (1 + 0.004418011894647409*x + 0.01563296516567545*y + 0.02039082412914189*k >= 0)  &&  (5.613470381390318 - 0.007032729239924262*x - 0.02272112523667839*y - 0.02272112523667838*k >= 0)  &&  (1.27009380312857 + 0.01618646716964432*x - 0.0288291666851173*y + 0.002179089042869238*k >= 0)  &&  (1 - 0.02458431404559008*x + 0.0399872901663702*y - 0.002270524984549188*k >= 0)  &&  (1.057774474371758 + 0.02145519752052904*x + 0.01182611845856934*y - 0.01752037853982346*k >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [13+:846-]|-->> [33m(1.004858299595142 + 0.02753036437246964*x + 0.02672064777327935*y + 0.01214574898785425*k >= 0)  &&  (1 + 0.004418011894647409*x + 0.01563296516567545*y + 0.02039082412914189*k >= 0)  &&  (1 - 0.01575401833205378*x - 0.01469057985081816*y + 0.01530663248667807*k >= 0)  &&  (5.613470381390318 - 0.007032729239924262*x - 0.02272112523667839*y - 0.02272112523667838*k >= 0)  &&  (1.27009380312857 + 0.01618646716964432*x - 0.0288291666851173*y + 0.002179089042869238*k >= 0)  &&  (1.057774474371758 + 0.02145519752052904*x + 0.01182611845856934*y - 0.01752037853982346*k >= 0)  &&  (1 - 0.02458431404559008*x + 0.0399872901663702*y - 0.002270524984549188*k >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [13+:981-]|-->> [33m(1.286816282669669 - 0.01173755285585555*x - 0.05954026663413374*y + 0.03124607252482075*k >= 0)  &&  (1 + 0.004418011894647409*x + 0.01563296516567545*y + 0.02039082412914189*k >= 0)  &&  (1.004858299595142 + 0.02753036437246964*x + 0.02672064777327935*y + 0.01214574898785425*k >= 0)  &&  (1 - 0.01575401833205378*x - 0.01469057985081816*y + 0.01530663248667807*k >= 0)  &&  (5.613470381390318 - 0.007032729239924262*x - 0.02272112523667839*y - 0.02272112523667838*k >= 0)  &&  (1.057774474371758 + 0.02145519752052904*x + 0.01182611845856934*y - 0.01752037853982346*k >= 0)  &&  (1 - 0.02458431404559008*x + 0.0399872901663702*y - 0.002270524984549188*k >= 0)  &&  (1.27009380312857 + 0.01618646716964432*x - 0.0288291666851173*y + 0.002179089042869238*k >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [21+:1276-]|-->> [33m(1.000060180905642 + 0.4998326280847714*x + 0.4998225979338287*y - 0.4998339327736545*k >= 0)  &&  (5.493261455525611 - 0.01437556154537287*x - 0.00359389038634322*y - 0.02605570530098834*k >= 0)  &&  (1.004858299595142 + 0.02753036437246964*x + 0.02672064777327935*y + 0.01214574898785425*k >= 0)  &&  (1 - 0.3998682365249471*x - 0.3998784361789767*y + 0.3998771394624505*k >= 0)  &&  (6.428248806668734 - 0.05711050210039384*x - 0.09774855670806704*y + 0.03221546454814306*k >= 0)  &&  (1 - 0.02458964806285124*x + 0.03999263280970235*y - 0.002273326387365895*k >= 0) 
[0m[31m[7Pure Random][0m[#r210,#s0] -->   [21+:1487-]|-->> [33m(1.000060180905642 + 0.4998326280847714*x + 0.4998225979338287*y - 0.4998339327736545*k >= 0)  &&  (5.493261455525611 - 0.01437556154537287*x - 0.00359389038634322*y - 0.02605570530098834*k >= 0)  &&  (1.004858299595142 + 0.02753036437246964*x + 0.02672064777327935*y + 0.01214574898785425*k >= 0)  &&  (1 - 0.3998682365249471*x - 0.3998784361789767*y + 0.3998771394624505*k >= 0)  &&  (6.428248806668734 - 0.05711050210039384*x - 0.09774855670806704*y + 0.03221546454814306*k >= 0)  &&  (1 - 0.02458964806285124*x + 0.03999263280970235*y - 0.002273326387365895*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 7 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 + x + y - k >= 0)  &&  (5 - 2*x - 2*y + 2*k >= 0)  &&  (910 + 25*x + 24*y + 11*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/20.inv >>> [0m(2 + x + y - k >= 0)  &&  (5 - 2*x - 2*y + 2*k >= 0)  &&  (910 + 25*x + 24*y + 11*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt[0m
[34m[1mTest Counter Example: (0,-27,-27) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-28,-29) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-2,-29,-31) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-3,-30,-33) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-4,-31,-35) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-5,-32,-37) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-6,-33,-39) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-7,-34,-41) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [69+:1700-]|-->> [33m(0.9993806963757379 - 1.999067186453459*x - 1.99906629041692*y + 1.999075665503511*k >= 0)  &&  (5.462914266951831 + 0.02861425170945642*x + 0.03915230636823047*y + 0.07149844118209267*k >= 0)  &&  (1.001150629432232 + 0.4998259716397282*x + 0.4998285688739657*y - 0.4998362571246204*k >= 0)  &&  (6.6770639644635 - 0.04247308135964924*x + 0.001848831578686143*y - 0.02138134613840628*k >= 0)  &&  (6.42820833274034 - 0.0571101090730836*x - 0.09774811047690724*y + 0.03221537105130445*k >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [69+:1941-]|-->> [33m(0.9993806963757379 - 1.999067186453459*x - 1.99906629041692*y + 1.999075665503511*k >= 0)  &&  (5.462914266951831 + 0.02861425170945642*x + 0.03915230636823047*y + 0.07149844118209267*k >= 0)  &&  (1.001150629432232 + 0.4998259716397282*x + 0.4998285688739657*y - 0.4998362571246204*k >= 0)  &&  (6.6770639644635 - 0.04247308135964924*x + 0.001848831578686143*y - 0.02138134613840628*k >= 0)  &&  (6.42820833274034 - 0.0571101090730836*x - 0.09774811047690724*y + 0.03221537105130445*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x - 2*y + 2*k >= 0)  &&  (76 + k >= 0)  &&  (2 + x + y - k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/20.inv >>> [0m(1 - 2*x - 2*y + 2*k >= 0)  &&  (76 + k >= 0)  &&  (2 + x + y - k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt[0m
[34m[1mTest Counter Example: (-77,0,-77) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-78,-1,-79) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-79,-2,-81) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-80,-3,-83) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-81,-4,-85) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-82,-5,-87) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-83,-6,-89) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-84,-7,-91) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [139+:2175-]|-->> [33m(2.445056794721209 - 0.002297791847918539*x - 0.01310136182235669*y - 0.004336234601507342*k >= 0)  &&  (0.9995975163619732 - 1.999209797250757*x - 1.99920989621063*y + 1.999216335105132*k >= 0)  &&  (1.000710775443622 + 0.4998841052347398*x + 0.4998692854332809*y - 0.4998836264008801*k >= 0)  &&  (2.463285363807336 + 0.003203510820462817*x + 0.009443893171824353*y + 0.01239432292509122*k >= 0)  &&  (3.167311894569838 + 0.01456857830972774*x + 0.0238094165213548*y + 0.008545936995017479*k >= 0)  &&  (1.10759856726737 + 0.01793746580889359*x + 0.01713992135460549*y - 0.01843457407587719*k >= 0)  &&  (1.000556349241805 + 0.1249611857431787*x + 0.1249621213096558*y - 0.1249660257327669*k >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [139+:2487-]|-->> [33m(2.445056794721209 - 0.002297791847918539*x - 0.01310136182235669*y - 0.004336234601507342*k >= 0)  &&  (0.9995975163619732 - 1.999209797250757*x - 1.99920989621063*y + 1.999216335105132*k >= 0)  &&  (1.000710775443622 + 0.4998841052347398*x + 0.4998692854332809*y - 0.4998836264008801*k >= 0)  &&  (2.463285363807336 + 0.003203510820462817*x + 0.009443893171824353*y + 0.01239432292509122*k >= 0)  &&  (3.167311894569838 + 0.01456857830972774*x + 0.0238094165213548*y + 0.008545936995017479*k >= 0)  &&  (1.10759856726737 + 0.01793746580889359*x + 0.01713992135460549*y - 0.01843457407587719*k >= 0)  &&  (1.000556349241805 + 0.1249611857431787*x + 0.1249621213096558*y - 0.1249660257327669*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 + x + y - k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/20.inv >>> [0m(2 + x + y - k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-6,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-7,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/20.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [139+:2751-]|-->> [33m(2.445056794721209 - 0.002297791847918539*x - 0.01310136182235669*y - 0.004336234601507342*k >= 0)  &&  (0.9995975163619732 - 1.999209797250757*x - 1.99920989621063*y + 1.999216335105132*k >= 0)  &&  (1.000493618224368 + 1.999488251428562*x + 1.999491731046679*y - 1.999493647895534*k >= 0)  &&  (2.463285363807336 + 0.003203510820462817*x + 0.009443893171824353*y + 0.01239432292509122*k >= 0)  &&  (3.167311894569838 + 0.01456857830972774*x + 0.0238094165213548*y + 0.008545936995017479*k >= 0)  &&  (1.10759856726737 + 0.01793746580889359*x + 0.01713992135460549*y - 0.01843457407587719*k >= 0)  &&  (1.000556349241805 + 0.1249611857431787*x + 0.1249621213096558*y - 0.1249660257327669*k >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [139+:2965-]|-->> [33m(2.445056794721209 - 0.002297791847918539*x - 0.01310136182235669*y - 0.004336234601507342*k >= 0)  &&  (0.9995975163619732 - 1.999209797250757*x - 1.99920989621063*y + 1.999216335105132*k >= 0)  &&  (1.000493618224368 + 1.999488251428562*x + 1.999491731046679*y - 1.999493647895534*k >= 0)  &&  (2.463285363807336 + 0.003203510820462817*x + 0.009443893171824353*y + 0.01239432292509122*k >= 0)  &&  (3.167311894569838 + 0.01456857830972774*x + 0.0238094165213548*y + 0.008545936995017479*k >= 0)  &&  (1.10759856726737 + 0.01793746580889359*x + 0.01713992135460549*y - 0.01843457407587719*k >= 0)  &&  (1.000556349241805 + 0.1249611857431787*x + 0.1249621213096558*y - 0.1249660257327669*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*x + 2*y - 2*k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/20.inv >>> [0m(1 + 2*x + 2*y - 2*k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*x + 2*y - 2*k >= 0)  &&  (1 - 2*x - 2*y + 2*k >= 0) [0m

=====================time=========================
