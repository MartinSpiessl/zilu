[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2372-]|-->> [33m(1.028332911712623 - 0.009107007336200356*j - 0.01087781431823931*k - 0.01745509739438401*n >= 0)  &&  (0.9970821175489788 + 0.005141030985132695*j + 0.01570098652216201*k - 0.002223148534111436*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037278*k + 0.00940158886851878*n >= 0)  &&  (1.011230736753219 - 0.01156850327211315*j - 0.005910914080641757*k + 0.0003377665188938147*n >= 0)  &&  (1.018828251935391 - 0.0002867246487623052*j - 0.01204243524801682*k - 0.006785816687374556*n >= 0)  &&  (0.9938207644920029 + 0.007497974793240519*j + 0.003240330815169269*k + 0.002938904692827942*n >= 0)  &&  (0.9892291121711032 + 0.003282556290711392*j - 0.002872236754372468*k + 0.01364312458326922*n >= 0)  &&  (1.013912352181258 + 0.005763688760806918*j - 0.001093113385670278*k - 0.0128192387955878*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:4032-]|-->> [33m(0.967741935483871 - 0.05376344086021505*j - 0.02150537634408602*k + 0.08602150537634409*n >= 0)  &&  (1.032873109796187 + 0.01840894148586457*j + 0.01314924391847469*k - 0.04602235371466142*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037278*k + 0.00940158886851878*n >= 0)  &&  (1.031995170540296 + 0.02535466344702686*j - 0.01086628433444008*k - 0.02112888620585572*n >= 0)  &&  (1.028332911712623 - 0.009107007336200356*j - 0.01087781431823931*k - 0.01745509739438401*n >= 0)  &&  (0.9938207644920029 + 0.007497974793240519*j + 0.003240330815169269*k + 0.002938904692827942*n >= 0)  &&  (0.9892291121711032 + 0.003282556290711392*j - 0.002872236754372468*k + 0.01364312458326922*n >= 0)  &&  (0.9970821175489788 + 0.005141030985132695*j + 0.01570098652216201*k - 0.002223148534111436*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:6188-]|-->> [33m(1.008750994431185 - 0.007955449482895784*j + 0.02704852824184566*k - 0.0007955449482895784*n >= 0)  &&  (0.967741935483871 - 0.05376344086021505*j - 0.02150537634408602*k + 0.08602150537634409*n >= 0)  &&  (1.032873109796187 + 0.01840894148586457*j + 0.01314924391847469*k - 0.04602235371466142*n >= 0)  &&  (1.031995170540296 + 0.02535466344702686*j - 0.01086628433444008*k - 0.02112888620585572*n >= 0)  &&  (1.028332911712623 - 0.009107007336200356*j - 0.01087781431823931*k - 0.01745509739438401*n >= 0)  &&  (0.9938207644920029 + 0.007497974793240519*j + 0.003240330815169269*k + 0.002938904692827942*n >= 0)  &&  (0.9892291121711032 + 0.003282556290711392*j - 0.002872236754372468*k + 0.01364312458326922*n >= 0)  &&  (0.9970821175489788 + 0.005141030985132695*j + 0.01570098652216201*k - 0.002223148534111436*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:7501-]|-->> [33m(1.008750994431185 - 0.007955449482895784*j + 0.02704852824184566*k - 0.0007955449482895784*n >= 0)  &&  (0.967741935483871 - 0.05376344086021505*j - 0.02150537634408602*k + 0.08602150537634409*n >= 0)  &&  (1.032873109796187 + 0.01840894148586457*j + 0.01314924391847469*k - 0.04602235371466142*n >= 0)  &&  (1.031995170540296 + 0.02535466344702686*j - 0.01086628433444008*k - 0.02112888620585572*n >= 0)  &&  (1.028332911712623 - 0.009107007336200356*j - 0.01087781431823931*k - 0.01745509739438401*n >= 0)  &&  (0.9938207644920029 + 0.007497974793240519*j + 0.003240330815169269*k + 0.002938904692827942*n >= 0)  &&  (0.9892291121711032 + 0.003282556290711392*j - 0.002872236754372468*k + 0.01364312458326922*n >= 0)  &&  (0.9970821175489788 + 0.005141030985132695*j + 0.01570098652216201*k - 0.002223148534111436*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(37 + k >= 0)  &&  (90 - 5*j - 2*k + 8*n >= 0)  &&  (785 + 14*j + 10*k - 35*n >= 0)  &&  (1425 + 35*j - 15*k - 29*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(37 + k >= 0)  &&  (90 - 5*j - 2*k + 8*n >= 0)  &&  (785 + 14*j + 10*k - 35*n >= 0)  &&  (1425 + 35*j - 15*k - 29*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,32,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,33,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,34,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,35,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,36,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,37,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,38,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,39,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [294+:9881-]|-->> [33m(3.510631534740549 - 0.02006648791267867*j - 0.02007790567148084*k - 0.04429726188596912*n >= 0)  &&  (3.142016477049822 + 0.007061592781482931*j - 0.02981561396626126*k - 0.02510788544527264*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037276*k + 0.009401588868518778*n >= 0)  &&  (0.967741935483871 - 0.05376344086021505*j - 0.02150537634408602*k + 0.08602150537634408*n >= 0)  &&  (0.9999961494672492 + 0.03389698090896309*j + 0.03389698090896309*k - 0.03389313037621226*n >= 0)  &&  (2.170324367571241 - 0.01739335578131358*j - 0.01739335578131357*k - 0.01261496133589776*n >= 0)  &&  (1.000025456389596 + 0.04614757336454282*j + 0.01472885774109768*k - 0.01475431413069356*n >= 0)  &&  (1.050117798243735 + 0.02912829299635896*j - 0.002570143499678733*k + 0.001285071749839365*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [294+:12811-]|-->> [33m(0.9999925480748894 + 0.09092277970192167*j + 0.09092277970192167*k - 0.09091532777681105*n >= 0)  &&  (3.510631534740549 - 0.02006648791267867*j - 0.02007790567148084*k - 0.04429726188596912*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037276*k + 0.009401588868518778*n >= 0)  &&  (3.142016477049822 + 0.007061592781482931*j - 0.02981561396626126*k - 0.02510788544527264*n >= 0)  &&  (0.967741935483871 - 0.05376344086021505*j - 0.02150537634408602*k + 0.08602150537634408*n >= 0)  &&  (2.170324367571241 - 0.01739335578131358*j - 0.01739335578131357*k - 0.01261496133589776*n >= 0)  &&  (1.000025456389596 + 0.04614757336454282*j + 0.01472885774109768*k - 0.01475431413069356*n >= 0)  &&  (1.050117798243735 + 0.02912829299635896*j - 0.002570143499678733*k + 0.001285071749839365*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [294+:16042-]|-->> [33m(1.000015068290909 + 0.001598335583286094*j - 0.03996592372760698*k + 0.03995085543669771*n >= 0)  &&  (1.303030303030303 + 0.0145040145040145*j - 0.02382802382802383*k + 0.01605801605801606*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037276*k + 0.009401588868518778*n >= 0)  &&  (0.9999925480748894 + 0.09092277970192167*j + 0.09092277970192167*k - 0.09091532777681105*n >= 0)  &&  (3.510631534740549 - 0.02006648791267867*j - 0.02007790567148084*k - 0.04429726188596912*n >= 0)  &&  (2.170324367571241 - 0.01739335578131358*j - 0.01739335578131357*k - 0.01261496133589776*n >= 0)  &&  (3.142016477049822 + 0.007061592781482931*j - 0.02981561396626126*k - 0.02510788544527264*n >= 0)  &&  (0.967741935483871 - 0.05376344086021505*j - 0.02150537634408602*k + 0.08602150537634408*n >= 0)  &&  (1.000025456389596 + 0.04614757336454282*j + 0.01472885774109768*k - 0.01475431413069356*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [294+:17568-]|-->> [33m(1.000015068290909 + 0.001598335583286094*j - 0.03996592372760698*k + 0.03995085543669771*n >= 0)  &&  (1.303030303030303 + 0.0145040145040145*j - 0.02382802382802383*k + 0.01605801605801606*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037276*k + 0.009401588868518778*n >= 0)  &&  (0.9999925480748894 + 0.09092277970192167*j + 0.09092277970192167*k - 0.09091532777681105*n >= 0)  &&  (3.510631534740549 - 0.02006648791267867*j - 0.02007790567148084*k - 0.04429726188596912*n >= 0)  &&  (2.170324367571241 - 0.01739335578131358*j - 0.01739335578131357*k - 0.01261496133589776*n >= 0)  &&  (3.142016477049822 + 0.007061592781482931*j - 0.02981561396626126*k - 0.02510788544527264*n >= 0)  &&  (0.967741935483871 - 0.05376344086021505*j - 0.02150537634408602*k + 0.08602150537634408*n >= 0)  &&  (1.000025456389596 + 0.04614757336454282*j + 0.01472885774109768*k - 0.01475431413069356*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(25 - k + n >= 0)  &&  (90 - 5*j - 2*k + 8*n >= 0)  &&  (79 - n >= 0)  &&  (11 + j + k - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(25 - k + n >= 0)  &&  (90 - 5*j - 2*k + 8*n >= 0)  &&  (79 - n >= 0)  &&  (11 + j + k - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,80,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,81,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,82,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,83,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,84,84) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,85,85) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,86,86) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,87,87) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [970+:19525-]|-->> [33m(1.000011074893308 + 0.6664392878666925*j + 0.6663927348009793*k - 0.6664038096942804*n >= 0)  &&  (1.000011623940072 + 0.6663954413983302*j - 5.811970035907166e-06*k - 5.811970035907166e-06*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037278*k + 0.00940158886851878*n >= 0)  &&  (1.000003584309416 - 0.1999534468113964*j - 0.1999609677420557*k + 0.1999498625019793*n >= 0)  &&  (3.37186477644493 - 0.003271537622682662*j - 0.04362050163576882*k + 0.01635768811341332*n >= 0)  &&  (1.983960243530365 - 0.03740712930688515*j - 0.03740828990857589*k + 0.02609840205190503*n >= 0)  &&  (2.405559515324305 + 0.002375861249703018*j + 0.00142551674982181*k - 0.01758137324780234*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [970+:20871-]|-->> [33m(0.9999889198076062 + 1.999435676016901*j + 1.999435137561292*k - 1.999424057368884*n >= 0)  &&  (1.000011623940072 + 0.6663954413983302*j - 5.811970035907166e-06*k - 5.811970035907166e-06*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037278*k + 0.00940158886851878*n >= 0)  &&  (1.000003584309416 - 0.1999534468113964*j - 0.1999609677420557*k + 0.1999498625019793*n >= 0)  &&  (3.37186477644493 - 0.003271537622682662*j - 0.04362050163576882*k + 0.01635768811341332*n >= 0)  &&  (1.983960243530365 - 0.03740712930688515*j - 0.03740828990857589*k + 0.02609840205190503*n >= 0)  &&  (2.405559515324305 + 0.002375861249703018*j + 0.00142551674982181*k - 0.01758137324780234*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [970+:22639-]|-->> [33m(0.9999889198076062 + 1.999435676016901*j + 1.999435137561292*k - 1.999424057368884*n >= 0)  &&  (1.000011623940072 + 0.6663954413983302*j - 5.811970035907166e-06*k - 5.811970035907166e-06*n >= 0)  &&  (0.9955812532317961 - 0.004982842100314953*j + 0.008649461759037278*k + 0.00940158886851878*n >= 0)  &&  (1.000003584309416 - 0.1999534468113964*j - 0.1999609677420557*k + 0.1999498625019793*n >= 0)  &&  (3.37186477644493 - 0.003271537622682662*j - 0.04362050163576882*k + 0.01635768811341332*n >= 0)  &&  (1.983960243530365 - 0.03740712930688515*j - 0.03740828990857589*k + 0.02609840205190503*n >= 0)  &&  (2.405559515324305 + 0.002375861249703018*j + 0.00142551674982181*k - 0.01758137324780234*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*j + 2*k - 2*n >= 0)  &&  (5 - j - k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + 2*j + 2*k - 2*n >= 0)  &&  (5 - j - k + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (2,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-5,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-6,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-7,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-8,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [970+:24255-]|-->> [33m(0.999988707055695 - 0.6663391712818099*j + 1.332689635507925*k + 0.6663504642261151*n >= 0)  &&  (0.9999889198076062 + 1.999435676016901*j + 1.999435137561292*k - 1.999424057368884*n >= 0)  &&  (1.000011623940072 + 0.6663954413983302*j - 5.811970035907166e-06*k - 5.811970035907166e-06*n >= 0)  &&  (1.000003584309416 - 0.1999534468113964*j - 0.1999609677420557*k + 0.1999498625019793*n >= 0)  &&  (3.37186477644493 - 0.003271537622682662*j - 0.04362050163576882*k + 0.01635768811341332*n >= 0)  &&  (1.983960243530365 - 0.03740712930688515*j - 0.03740828990857589*k + 0.02609840205190503*n >= 0)  &&  (2.405559515324305 + 0.002375861249703018*j + 0.00142551674982181*k - 0.01758137324780234*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [970+:26135-]|-->> [33m(0.999988707055695 - 0.6663391712818099*j + 1.332689635507925*k + 0.6663504642261151*n >= 0)  &&  (0.9999889198076062 + 1.999435676016901*j + 1.999435137561292*k - 1.999424057368884*n >= 0)  &&  (1.000011623940072 + 0.6663954413983302*j - 5.811970035907166e-06*k - 5.811970035907166e-06*n >= 0)  &&  (1.000003584309416 - 0.1999534468113964*j - 0.1999609677420557*k + 0.1999498625019793*n >= 0)  &&  (3.37186477644493 - 0.003271537622682662*j - 0.04362050163576882*k + 0.01635768811341332*n >= 0)  &&  (1.983960243530365 - 0.03740712930688515*j - 0.03740828990857589*k + 0.02609840205190503*n >= 0)  &&  (2.405559515324305 + 0.002375861249703018*j + 0.00142551674982181*k - 0.01758137324780234*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 - 2*j + 4*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  (5 - j - k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(3 - 2*j + 4*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  (5 - j - k + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,1,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,1,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [970+:27279-]|-->> [33m(j + n >= 0)  &&  (0.9999886493462764 - 1.999122773233448*j - 1.999117566420083*k + 1.99912891707381*n >= 0)  &&  (0.999988707055695 - 0.6663391712818099*j + 1.332689635507925*k + 0.6663504642261151*n >= 0)  &&  (0.9999889198076062 + 1.999435676016901*j + 1.999435137561292*k - 1.999424057368884*n >= 0)  &&  (3.37186477644493 - 0.003271537622682662*j - 0.04362050163576882*k + 0.01635768811341332*n >= 0)  &&  (1.000011623940072 + 0.6663954413983302*j - 5.811970035907166e-06*k - 5.811970035907166e-06*n >= 0)  &&  (2.405559515324305 + 0.002375861249703018*j + 0.00142551674982181*k - 0.01758137324780234*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [970+:29105-]|-->> [33m(j + n >= 0)  &&  (0.9999886493462764 - 1.999122773233448*j - 1.999117566420083*k + 1.99912891707381*n >= 0)  &&  (0.999988707055695 - 0.6663391712818099*j + 1.332689635507925*k + 0.6663504642261151*n >= 0)  &&  (0.9999889198076062 + 1.999435676016901*j + 1.999435137561292*k - 1.999424057368884*n >= 0)  &&  (3.37186477644493 - 0.003271537622682662*j - 0.04362050163576882*k + 0.01635768811341332*n >= 0)  &&  (1.000011623940072 + 0.6663954413983302*j - 5.811970035907166e-06*k - 5.811970035907166e-06*n >= 0)  &&  (2.405559515324305 + 0.002375861249703018*j + 0.00142551674982181*k - 0.01758137324780234*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(j + n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (3 - 2*j + 4*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(j + n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (3 - 2*j + 4*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(j + n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (3 - 2*j + 4*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0) [0m

=====================time=========================
