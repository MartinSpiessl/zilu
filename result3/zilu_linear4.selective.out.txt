[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_linear4
[  8%] Building CXX object CMakeFiles/zilu_linear4.dir/test/zilu_linear4.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_linear4.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_linear4.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_linear4.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_linear4.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_linear4.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_linear4.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_linear4.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_linear4.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_linear4.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_linear4.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_linear4.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_linear4
[100%] Built target zilu_linear4
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [1864+:179-]|-->> [33m(0.8316101337760834 + 0.1683898662239166*xa + 0.2036146883170032*ya >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [2636+:181-]|-->> [33m(0.7999999999999989 + 0.2000000000000013*xa + 0.200000000000001*ya >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [2686+:561-]|-->> [33m(0.599977597046598 + 0.4000189024919328*xa + 0.400022402953402*ya >= 0) [0m
[31m[4][0m[#r16,#s64] -->  [2823+:793-]|-->> [33m(1.876088064167725e-05 + 0.9999812391193602*xa + 0.9999812391193583*ya >= 0) [0m
[31m[5][0m[#r20,#s80] -->  [3109+:794-]|-->> [33m( -2.164934898019055e-15 + 1.000000000000066*xa + 1.000000000000002*ya >= 0) [0m
[31m[6][0m[#r24,#s96] -->  [3204+:825-]|-->> [33m(1.616033695750474e-13 + 1.000000000000028*xa + 1.000000000000024*ya >= 0) [0m
[31m[7][0m[#r28,#s112] -->  [3402+:826-]|-->> [33m( -1.342983883823035e-13 + 1.000000000000107*xa + 1.000000000000103*ya >= 0) [0m
[31m[8][0m[#r32,#s128] -->  [3412+:828-]|-->> [33m( -4.046556926345923e-13 + 1.000000000000149*xa + 1.000000000000144*ya >= 0) [0m
[31m[9][0m[#r36,#s144] -->  [3508+:952-]|-->> [33m(1.696828441644094e-13 + 0.9999999999998508*xa + 0.9999999999998552*ya >= 0) [0m
[31m[10][0m[#r40,#s160] -->  [4009+:954-]|-->> [33m(xa + ya >= 0) [0m
[31m[11][0m[#r44,#s176] -->  [4191+:977-]|-->> [33m(0.9999999999998295*xa + 0.9999999999998295*ya >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(xa + ya >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.inv >>> [0m(xa + ya >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(xa + ya >= 0) [0m

=====================time=========================
