[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_linear2
[  8%] Building CXX object CMakeFiles/zilu_linear2.dir/test/zilu_linear2.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_linear2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_linear2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_linear2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_linear2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_linear2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_linear2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_linear2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_linear2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_linear2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_linear2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_linear2.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_linear2
[100%] Built target zilu_linear2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [1192+:45-]|-->> [33m(0.9342192976353267 - 0.003999439075846108*i - 0.001711434001272355*j + 0.06749213636594557*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [2742+:148-]|-->> [33m(0.9342226282500915 - 0.004003076548125914*i - 0.001715051417409581*j + 0.0674924231673181*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(55 + 4*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.inv >>> [0m(55 + 4*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-6,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-7,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [3500+:473-]|-->> [33m( -0.9997100211300822 - 0.4957958730074584*i + 0.7106407513106904*j + 1.289069269819392*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [5137+:681-]|-->> [33m( -0.999456543129607 - 0.4957358638826971*i + 0.7105490176332302*j + 1.288907525496377*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -32 - 16*i + 23*j + 42*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.inv >>> [0m( -32 - 16*i + 23*j + 42*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[34m[1mTest Counter Example: (-25,-18,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-46,-45,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-47,-46,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-48,-47,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-49,-48,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-50,-49,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-51,-50,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-52,-51,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [5863+:763-]|-->> [33m( -0.9996417615401693 - 0.6665518466474901*i + 0.6665449574463396*j + 1.33309680409383*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [6713+:1093-]|-->> [33m( -0.9996283824167235 - 0.6665475584668986*i + 0.6665404119749124*j + 1.333087970441811*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -3 - 2*i + 2*j + 4*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.inv >>> [0m( -3 - 2*i + 2*j + 4*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -3 - 2*i + 2*j + 4*k >= 0) [0m

=====================time=========================
