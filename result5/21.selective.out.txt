[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear--> polynomial--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 21
[  8%] Building CXX object CMakeFiles/21.dir/test/21.cpp.o
[ 16%] Building CXX object CMakeFiles/21.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/21.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/21.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/21.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/21.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/21.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/21.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/21.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/21.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/21.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/21.dir/src/instrumentation.cpp.o
Linking CXX executable 21
[100%] Built target 21
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1+][0m[#r8,#s32] -->  [2+:3-]|-->> [33m(0.9969672441271523 + 0.003032755872847708*n + 0.007376280598240375*k >= 0) [0m
[31m[2][0m[#r12,#s48] -->  [2+:4-]|-->> [33m(0.9963570736272184 + 0.003642926372781659*n + 0.007319274088432874*k >= 0) [0m
[31m[3][0m[#r16,#s64] -->  [2+:8-]|-->> [33m(0.9926695249160858 + 0.007330475083914222*n + 0.01465119258455978*k >= 0) [0m
[31m[4][0m[#r20,#s80] -->  [9+:10-]|-->> [33m(0.991701244813278 + 0.00829875518672199*n + 0.03112033195020746*k >= 0) [0m
[31m[5][0m[#r24,#s96] -->  ][0m[#r28,#s112] -->  [9+:11-]|-->> [33m(0.991701244813278 + 0.00829875518672199*n + 0.03112033195020746*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(32 + k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/21.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/21.inv >>> [0m(32 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[34m[1mTest Counter Example: (1,-33) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (2,-34) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-35) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-36) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-37) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-38) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-39) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-40) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [26+:14-]|-->> [33m(3.889435795349627 + 0.0336534607469809*n + 0.0730772314024152*k >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [26+:16-]|-->> [33m(6.878415672699184 + 0.06755841990397529*n + 0.148649352315079*k >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [26+:18-]|-->> [33m(6.226339640712858 + 0.2272321582918631*n + 0.1363392949751183*k >= 0) [0m
[31m[4][0m[#r16,#s64] -->  [26+:19-]|-->> [33m(6.226339640712858 + 0.2272321582918631*n + 0.1363392949751183*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(137 + 5*n + 3*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/21.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/21.inv >>> [0m(137 + 5*n + 3*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[34m[1mTest Counter Example: (1,-48) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (3,-51) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (2,-52) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-53) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-54) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-55) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-56) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-57) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [61+:22-]|-->> [33m( -0.999987468298059 + 1.999041681142947*n + 2.364467945881188e-07*k >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [61+:25-]|-->> [33m( -0.9999889410812557 + 1.999154306195965*n + 2.086587239102933e-07*k >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [67+:28-]|-->> [33m( -0.9999970934004523 + 1.999777726323746*n + 5.484176313075295e-08*k >= 0) [0m
[31m[4][0m[#r16,#s64] -->  [67+:30-]|-->> [33m( -0.9999967107700627 + 1.99955814313409*n + 1.09641899356458e-07*k >= 0) [0m
[31m[5][0m[#r20,#s80] -->  [67+:34-]|-->> [33m( -0.9999999998569904 + 1.999999949183778*n + 1.267489080211434e-11*k >= 0) [0m
[31m[6][0m[#r24,#s96] -->  [67+:41-]|-->> [33m( -0.9999999998747321 + 1.999999949169726*n + 1.267432400686778e-11*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -1 + 2*n >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/21.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/21.inv >>> [0m( -1 + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -1 + 2*n >= 0) [0m

=====================time=========================
