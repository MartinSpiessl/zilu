[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down_true_2
[  8%] Building CXX object CMakeFiles/down_true_2.dir/test/down_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/down_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable down_true_2
[100%] Built target down_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[0][0m
[33m  3)---->[1] :::::: 1	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:699-]|-->> [33m(0.9949411784677542 + 0.006484798071536489*j - 0.0005092773354609809*k + 0.005058821532245743*n >= 0)  &&  (1.020802995631371 - 0.0203869357187435*j - 0.0006240898689411275*k + 0.0002080299563137092*n >= 0)  &&  (0.999350789872322 + 0.003765418740532352*j + 0.008483012334992426*k + 0.0006492101276779918*n >= 0)  &&  (1.045801526717557 - 0.0183989038950871*j - 0.0195733020160501*k - 0.007829320806420043*n >= 0)  &&  (1.094808126410835 - 0.03009781790820166*j - 0.0346124905944319*k - 0.03009781790820166*n >= 0)  &&  (1.133333333333333 - 0.01720430107526882*j - 0.03010752688172043*k - 0.08602150537634408*n >= 0)  &&  (0.9979337508878414 + 0.002001678827403629*j - 0.007877574740104604*k + 0.00794214502485956*n >= 0)  &&  (1.003505491937368 + 0.01565786398691283*j + 0.01448936667445665*k - 0.003505491937368544*n >= 0)  &&  (1.003300330033003 - 0.006031637646523274*j + 0.01342892909980653*k - 0.0033003300330033*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:1403-]|-->> [33m(0.9949411784677542 + 0.006484798071536489*j - 0.0005092773354609809*k + 0.005058821532245743*n >= 0)  &&  (1.020802995631371 - 0.0203869357187435*j - 0.0006240898689411275*k + 0.0002080299563137092*n >= 0)  &&  (1.003155285102547 - 0.0225377507324769*j + 0.01983322064457967*k - 0.000450755014649538*n >= 0)  &&  (1.045801526717557 - 0.0183989038950871*j - 0.0195733020160501*k - 0.007829320806420043*n >= 0)  &&  (1.094808126410835 - 0.03009781790820166*j - 0.0346124905944319*k - 0.03009781790820166*n >= 0)  &&  (1.133333333333333 - 0.01720430107526882*j - 0.03010752688172043*k - 0.08602150537634408*n >= 0)  &&  (0.9979337508878414 + 0.002001678827403629*j - 0.007877574740104604*k + 0.00794214502485956*n >= 0)  &&  (1.003505491937368 + 0.01565786398691283*j + 0.01448936667445665*k - 0.003505491937368544*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:1904-]|-->> [33m(0.9949411784677542 + 0.006484798071536489*j - 0.0005092773354609809*k + 0.005058821532245743*n >= 0)  &&  (1.020802995631371 - 0.0203869357187435*j - 0.0006240898689411275*k + 0.0002080299563137092*n >= 0)  &&  (1.003281557646029 + 0.01881426383723474*j - 0.008532049879676221*k - 0.003281557646029315*n >= 0)  &&  (1.045801526717557 - 0.0183989038950871*j - 0.0195733020160501*k - 0.007829320806420043*n >= 0)  &&  (1.094808126410835 - 0.03009781790820166*j - 0.0346124905944319*k - 0.03009781790820166*n >= 0)  &&  (1.133333333333333 - 0.01720430107526882*j - 0.03010752688172043*k - 0.08602150537634408*n >= 0)  &&  (0.9979337508878414 + 0.002001678827403629*j - 0.007877574740104604*k + 0.00794214502485956*n >= 0)  &&  (1.003505491937368 + 0.01565786398691283*j + 0.01448936667445665*k - 0.003505491937368544*n >= 0)  &&  (1.003155285102547 - 0.0225377507324769*j + 0.01983322064457967*k - 0.000450755014649538*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:2644-]|-->> [33m(1.045977011494253 + 0.04980842911877394*j - 0.06513409961685823*k - 0.03065134099616858*n >= 0)  &&  (1.020802995631371 - 0.0203869357187435*j - 0.0006240898689411275*k + 0.0002080299563137092*n >= 0)  &&  (0.9779144183711883 + 0.003011670222110679*j + 0.002258752666583009*k + 0.02208558162881165*n >= 0)  &&  (1.045801526717557 - 0.0183989038950871*j - 0.0195733020160501*k - 0.007829320806420043*n >= 0)  &&  (1.094808126410835 - 0.03009781790820166*j - 0.0346124905944319*k - 0.03009781790820166*n >= 0)  &&  (1.133333333333333 - 0.01720430107526882*j - 0.03010752688172043*k - 0.08602150537634408*n >= 0)  &&  (1.003155285102547 - 0.0225377507324769*j + 0.01983322064457967*k - 0.000450755014649538*n >= 0)  &&  (1.003505491937368 + 0.01565786398691283*j + 0.01448936667445665*k - 0.003505491937368544*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:3240-]|-->> [33m(1.045977011494253 + 0.04980842911877394*j - 0.06513409961685823*k - 0.03065134099616858*n >= 0)  &&  (1.020802995631371 - 0.0203869357187435*j - 0.0006240898689411275*k + 0.0002080299563137092*n >= 0)  &&  (0.9779144183711883 + 0.003011670222110679*j + 0.002258752666583009*k + 0.02208558162881165*n >= 0)  &&  (1.045801526717557 - 0.0183989038950871*j - 0.0195733020160501*k - 0.007829320806420043*n >= 0)  &&  (1.094808126410835 - 0.03009781790820166*j - 0.0346124905944319*k - 0.03009781790820166*n >= 0)  &&  (1.133333333333333 - 0.01720430107526882*j - 0.03010752688172043*k - 0.08602150537634408*n >= 0)  &&  (1.003155285102547 - 0.0225377507324769*j + 0.01983322064457967*k - 0.000450755014649538*n >= 0)  &&  (1.003505491937368 + 0.01565786398691283*j + 0.01448936667445665*k - 0.003505491937368544*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(273 + 13*j - 17*k - 8*n >= 0)  &&  (762 + 12*j + 11*k >= 0)  &&  (44 + n >= 0)  &&  (354 - 8*j + 7*k >= 0)  &&  (264 - 4*j - 7*k - 20*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(273 + 13*j - 17*k - 8*n >= 0)  &&  (762 + 12*j + 11*k >= 0)  &&  (44 + n >= 0)  &&  (354 - 8*j + 7*k >= 0)  &&  (264 - 4*j - 7*k - 20*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (23,23,23) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (24,24,24) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (25,25,25) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (26,26,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (27,27,27) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (28,28,28) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (29,29,29) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (30,30,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [222+:4015-]|-->> [33m(1.375351717830731 - 0.04476730772877981*j + 0.04474578242755397*k - 0.01249019862646519*n >= 0)  &&  (0.9999961639057917 - 0.004538525681016832*j + 0.01891052367090347*k + 3.836094208222937e-06*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0)  &&  (2.45985401459854 - 0.0267639902676399*j - 0.0291970802919708*k + 0.007299270072992702*n >= 0)  &&  (3.285714285714288 - 0.04761904761904766*j - 0.05714285714285718*k + 0.02857142857142859*n >= 0)  &&  (2.411764705882351 - 0.05882352941176461*j - 0.09411764705882336*k + 0.1058823529411762*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [222+:5119-]|-->> [33m(0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (1.375351717830731 - 0.04476730772877981*j + 0.04474578242755397*k - 0.01249019862646519*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (2.45985401459854 - 0.0267639902676399*j - 0.0291970802919708*k + 0.007299270072992702*n >= 0)  &&  (3.285714285714288 - 0.04761904761904766*j - 0.05714285714285718*k + 0.02857142857142859*n >= 0)  &&  (2.411764705882351 - 0.05882352941176461*j - 0.09411764705882336*k + 0.1058823529411762*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [222+:6027-]|-->> [33m(0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (1.375351717830731 - 0.04476730772877981*j + 0.04474578242755397*k - 0.01249019862646519*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (2.45985401459854 - 0.0267639902676399*j - 0.0291970802919708*k + 0.007299270072992702*n >= 0)  &&  (3.285714285714288 - 0.04761904761904766*j - 0.05714285714285718*k + 0.02857142857142859*n >= 0)  &&  (2.411764705882351 - 0.05882352941176461*j - 0.09411764705882336*k + 0.1058823529411762*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(79 - 2*j + 7*k >= 0)  &&  (118 - 9*j + 5*k + 4*n >= 0)  &&  (31 - j + k >= 0)  &&  (3 + 2*j - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(79 - 2*j + 7*k >= 0)  &&  (118 - 9*j + 5*k + 4*n >= 0)  &&  (31 - j + k >= 0)  &&  (3 + 2*j - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (7,-9,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-11,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,-10,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-11,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-11,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-11,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-10,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-11,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [222+:7072-]|-->> [33m(1 - 0.1076923076923077*j + 0.1384615384615384*k >= 0)  &&  (0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (1.375351717830731 - 0.04476730772877981*j + 0.04474578242755397*k - 0.01249019862646519*n >= 0)  &&  (2.45985401459854 - 0.0267639902676399*j - 0.0291970802919708*k + 0.007299270072992702*n >= 0)  &&  (3.285714285714288 - 0.04761904761904766*j - 0.05714285714285718*k + 0.02857142857142859*n >= 0)  &&  (2.411764705882351 - 0.05882352941176461*j - 0.09411764705882336*k + 0.1058823529411762*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [222+:8451-]|-->> [33m(4.130990415335463 - 0.04898828541001064*j - 0.0149094781682641*k - 0.04046858359957402*n >= 0)  &&  (1 - 0.1076923076923077*j + 0.1384615384615384*k >= 0)  &&  (0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (1.375351717830731 - 0.04476730772877981*j + 0.04474578242755397*k - 0.01249019862646519*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (2.411764705882351 - 0.05882352941176461*j - 0.09411764705882336*k + 0.1058823529411762*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [222+:9392-]|-->> [33m(3.058823529411764 - 0.009803921568627451*j + 0.009803921568627451*k - 0.06862745098039215*n >= 0)  &&  (4.130990415335463 - 0.04898828541001064*j - 0.0149094781682641*k - 0.04046858359957402*n >= 0)  &&  (1 - 0.1076923076923077*j + 0.1384615384615384*k >= 0)  &&  (0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (2.411764705882351 - 0.05882352941176461*j - 0.09411764705882336*k + 0.1058823529411762*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [222+:10565-]|-->> [33m(2.356009711761061 - 0.1468797373053599*j + 0.1468719864682367*k - 0.04519257288824563*n >= 0)  &&  (6.202312138728324 - 0.1502890173410404*j - 0.02312138728323698*n >= 0)  &&  (3.058823529411764 - 0.009803921568627451*j + 0.009803921568627451*k - 0.06862745098039215*n >= 0)  &&  (1 - 0.1076923076923077*j + 0.1384615384615384*k >= 0)  &&  (0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [222+:11651-]|-->> [33m(2.356009711761061 - 0.1468797373053599*j + 0.1468719864682367*k - 0.04519257288824563*n >= 0)  &&  (6.202312138728324 - 0.1502890173410404*j - 0.02312138728323698*n >= 0)  &&  (3.058823529411764 - 0.009803921568627451*j + 0.009803921568627451*k - 0.06862745098039215*n >= 0)  &&  (1 - 0.1076923076923077*j + 0.1384615384615384*k >= 0)  &&  (0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [222+:12670-]|-->> [33m(2.356009711761061 - 0.1468797373053599*j + 0.1468719864682367*k - 0.04519257288824563*n >= 0)  &&  (6.202312138728324 - 0.1502890173410404*j - 0.02312138728323698*n >= 0)  &&  (3.058823529411764 - 0.009803921568627451*j + 0.009803921568627451*k - 0.06862745098039215*n >= 0)  &&  (1 - 0.1076923076923077*j + 0.1384615384615384*k >= 0)  &&  (0.9999806757906651 - 0.02515966342255784*j + 0.08805882197895244*k + 1.932420933482837e-05*n >= 0)  &&  (1.000008411369822 - 0.07658032422802867*j + 0.04270389030053152*k + 0.03386802255767522*n >= 0)  &&  (0.9999832996091698 + 0.6664556090478877*j - 0.6664878003371442*k + 1.670039083023767e-05*n >= 0)  &&  (1.000019284528509 - 0.05062680869350933*j - 0.1645226648575242*k + 0.2151301890225248*n >= 0)  &&  (1.00003173373203 + 0.05260235050997153*j - 0.420914005275864*k + 0.3682799210338628*n >= 0)  &&  (1.000033301595955 + 0.5712240044819907*j - 0.7140549817994533*k + 0.1427976757215106*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(209 - 13*j + 13*k - 4*n >= 0)  &&  (3 + 2*j - 2*k >= 0)  &&  (45 - n >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (118 - 9*j + 5*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(209 - 13*j + 13*k - 4*n >= 0)  &&  (3 + 2*j - 2*k >= 0)  &&  (45 - n >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (118 - 9*j + 5*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (53,53,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (54,54,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (55,55,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (56,56,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (57,57,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (58,58,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (59,59,59) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (60,60,60) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [682+:13527-]|-->> [33m(1 + 1.999038081789905*j - 1.999037438631348*k >= 0)  &&  (1.000016864542175 - 5.621514056031174e-06*j - 0.9995671434174653*k + 0.9995559003893462*n >= 0)  &&  (1.000009777917102 - 0.1249649148956749*j + 0.1249622083766065*k - 9.777917101660982e-06*n >= 0)  &&  (1.000007218365876 - 0.1208579681586062*j + 0.05493194025833581*k + 0.06591880953439466*n >= 0)  &&  (0.9999984752378226 - 0.1076874636401593*j + 0.1384553103944905*k + 1.524762177454106e-06*n >= 0)  &&  (2.42925441495243 - 0.002616930991770001*j + 0.00261067539544889*k - 0.02381465131955272*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [682+:14916-]|-->> [33m(0.9999946668469679 - 0.2856409182502411*j + 0.285634016119271*k + 1.22352840006279e-05*n >= 0)  &&  (1.000016366093969 - 0.2856441453115646*j + 0.1428138896087983*k + 0.1428138896087983*n >= 0)  &&  (5.985031117426836 - 0.01263819230527991*j + 0.01265257465883754*k - 0.08309823431067162*n >= 0)  &&  (7.846846846846866 - 0.03303303303303312*j - 0.01201201201201205*k - 0.06906906906906926*n >= 0)  &&  (1 + 1.999038081789905*j - 1.999037438631348*k >= 0)  &&  (1.000016864542175 - 5.621514056031174e-06*j - 0.9995671434174653*k + 0.9995559003893462*n >= 0)  &&  (0.9999984752378226 - 0.1076874636401593*j + 0.1384553103944905*k + 1.524762177454106e-06*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [682+:15768-]|-->> [33m(0.9999946668469679 - 0.2856409182502411*j + 0.285634016119271*k + 1.22352840006279e-05*n >= 0)  &&  (1.000016366093969 - 0.2856441453115646*j + 0.1428138896087983*k + 0.1428138896087983*n >= 0)  &&  (5.985031117426836 - 0.01263819230527991*j + 0.01265257465883754*k - 0.08309823431067162*n >= 0)  &&  (7.846846846846866 - 0.03303303303303312*j - 0.01201201201201205*k - 0.06906906906906926*n >= 0)  &&  (1 + 1.999038081789905*j - 1.999037438631348*k >= 0)  &&  (1.000016864542175 - 5.621514056031174e-06*j - 0.9995671434174653*k + 0.9995559003893462*n >= 0)  &&  (0.9999984752378226 - 0.1076874636401593*j + 0.1384553103944905*k + 1.524762177454106e-06*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [682+:16511-]|-->> [33m(0.9999834547639495 - 0.6664371107212883*j + 0.6664515785979948*k + 2.07735934409925e-06*n >= 0)  &&  (0.9999831730944031 - 0.6664479168939152*j + 0.333232371899757*k + 0.333232371899757*n >= 0)  &&  (5.985031117426836 - 0.01263819230527991*j + 0.01265257465883754*k - 0.08309823431067162*n >= 0)  &&  (7.846846846846866 - 0.03303303303303312*j - 0.01201201201201205*k - 0.06906906906906926*n >= 0)  &&  (1 + 1.999038081789905*j - 1.999037438631348*k >= 0)  &&  (1.000016864542175 - 5.621514056031174e-06*j - 0.9995671434174653*k + 0.9995559003893462*n >= 0)  &&  (0.9999984752378226 - 0.1076874636401593*j + 0.1384553103944905*k + 1.524762177454106e-06*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [682+:17798-]|-->> [33m(0.9999834547639495 - 0.6664371107212883*j + 0.6664515785979948*k + 2.07735934409925e-06*n >= 0)  &&  (0.9999831730944031 - 0.6664479168939152*j + 0.333232371899757*k + 0.333232371899757*n >= 0)  &&  (5.985031117426836 - 0.01263819230527991*j + 0.01265257465883754*k - 0.08309823431067162*n >= 0)  &&  (7.846846846846866 - 0.03303303303303312*j - 0.01201201201201205*k - 0.06906906906906926*n >= 0)  &&  (1 + 1.999038081789905*j - 1.999037438631348*k >= 0)  &&  (1.000016864542175 - 5.621514056031174e-06*j - 0.9995671434174653*k + 0.9995559003893462*n >= 0)  &&  (0.9999984752378226 - 0.1076874636401593*j + 0.1384553103944905*k + 1.524762177454106e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 - 2*j + 2*k >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (72 - n >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(3 - 2*j + 2*k >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (72 - n >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (73,73,73) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (74,74,74) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (75,75,75) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (76,76,76) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (77,77,77) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (78,78,78) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (79,79,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (80,80,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1302+:18942-]|-->> [33m(0.9999999999999432 - 1.999014621230174*j + 1.999014788128022*k + 5.684341886080801e-14*n >= 0)  &&  (1.000012614632396 - 1.999104361096983*j + 0.9995458732322504*k + 0.9995458732322504*n >= 0)  &&  (15.32388772901368 - 0.2088834609131132*j + 0.2088736082106104*k - 0.1790387439101675*n >= 0)  &&  (26.26315789473597 - 0.2631578947368327*j + 0.1052631578947336*k - 0.1578947368421*n >= 0)  &&  (0.9999995691289314 + 1.999046413847566*j - 1.999058182869589*k + 1.219989306378011e-05*n >= 0)  &&  (1.000012639817498 - 4.213272504216548e-06*j - 0.9996755780172322*k + 0.9996671514722308*n >= 0)  &&  (0.9999896742649712 - 0.1076483836040694*j + 0.1384050646338035*k + 1.032573502889739e-05*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1302+:19571-]|-->> [33m(0.9999999999999432 - 1.999014621230174*j + 1.999014788128022*k + 5.684341886080801e-14*n >= 0)  &&  (1.000012614632396 - 1.999104361096983*j + 0.9995458732322504*k + 0.9995458732322504*n >= 0)  &&  (15.32388772901368 - 0.2088834609131132*j + 0.2088736082106104*k - 0.1790387439101675*n >= 0)  &&  (26.26315789473597 - 0.2631578947368327*j + 0.1052631578947336*k - 0.1578947368421*n >= 0)  &&  (0.9999995691289314 + 1.999046413847566*j - 1.999058182869589*k + 1.219989306378011e-05*n >= 0)  &&  (1.000012639817498 - 4.213272504216548e-06*j - 0.9996755780172322*k + 0.9996671514722308*n >= 0)  &&  (0.9999896742649712 - 0.1076483836040694*j + 0.1384050646338035*k + 1.032573502889739e-05*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*j + 2*k >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(1 - 2*j + 2*k >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-6,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-7,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-8,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1302+:20065-]|-->> [33m(0.4545454545454545 + 0.1818181818181818*j + 0.1818181818181818*k + 0.5454545454545454*n >= 0)  &&  (0.9999999999999432 - 1.999014621230174*j + 1.999014788128022*k + 5.684341886080801e-14*n >= 0)  &&  (1.000012614632396 - 1.999104361096983*j + 0.9995458732322504*k + 0.9995458732322504*n >= 0)  &&  (15.32388772901368 - 0.2088834609131132*j + 0.2088736082106104*k - 0.1790387439101675*n >= 0)  &&  (26.26315789473597 - 0.2631578947368327*j + 0.1052631578947336*k - 0.1578947368421*n >= 0)  &&  (0.9999995691289314 + 1.999046413847566*j - 1.999058182869589*k + 1.219989306378011e-05*n >= 0)  &&  (1.000012639817498 - 4.213272504216548e-06*j - 0.9996755780172322*k + 0.9996671514722308*n >= 0)  &&  (0.9999896742649712 - 0.1076483836040694*j + 0.1384050646338035*k + 1.032573502889739e-05*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1302+:20598-]|-->> [33m(0.4545454545454545 + 0.1818181818181818*j + 0.1818181818181818*k + 0.5454545454545454*n >= 0)  &&  (0.9999999999999432 - 1.999014621230174*j + 1.999014788128022*k + 5.684341886080801e-14*n >= 0)  &&  (1.000012614632396 - 1.999104361096983*j + 0.9995458732322504*k + 0.9995458732322504*n >= 0)  &&  (15.32388772901368 - 0.2088834609131132*j + 0.2088736082106104*k - 0.1790387439101675*n >= 0)  &&  (26.26315789473597 - 0.2631578947368327*j + 0.1052631578947336*k - 0.1578947368421*n >= 0)  &&  (0.9999995691289314 + 1.999046413847566*j - 1.999058182869589*k + 1.219989306378011e-05*n >= 0)  &&  (1.000012639817498 - 4.213272504216548e-06*j - 0.9996755780172322*k + 0.9996671514722308*n >= 0)  &&  (0.9999896742649712 - 0.1076483836040694*j + 0.1384050646338035*k + 1.032573502889739e-05*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 + 2*j + 2*k + 6*n >= 0)  &&  (1 - 2*j + 2*k >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.inv >>> [0m(5 + 2*j + 2*k + 6*n >= 0)  &&  (1 - 2*j + 2*k >= 0)  &&  (65 - 7*j + 9*k >= 0)  &&  (1 - k + n >= 0)  &&  (1 + 2*j - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_2.cnt --> [0m-
