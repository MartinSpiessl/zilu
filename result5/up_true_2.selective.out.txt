[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1659-]|-->> [33m(1.000593154991399 - 0.007651699389050359*j - 0.003203036953555964*k + 0.007058544397651106*n >= 0)  &&  (1.003216711763704 + 0.002270620068497038*j + 0.006357736191791708*k - 0.005487331832201177*n >= 0)  &&  (1.004776320215271 + 0.001547258661284897*j - 0.01015808947191389*k + 0.005381769256643121*n >= 0)  &&  (1.025172553796184 - 0.02300717282446881*j + 0.002706726214643389*k - 0.002165380971714711*n >= 0)  &&  (1.010647319325356 + 0.01045887119570338*j - 0.008668613964006406*k - 0.001978705361349288*n >= 0)  &&  (1.022530980097634 + 0.02177994742771311*j - 0.01464513706346226*k - 0.007885843034171986*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:4419-]|-->> [33m(1.000593154991399 - 0.007651699389050359*j - 0.003203036953555964*k + 0.007058544397651106*n >= 0)  &&  (1.003216711763704 + 0.002270620068497038*j + 0.006357736191791708*k - 0.005487331832201177*n >= 0)  &&  (1.004776320215271 + 0.001547258661284897*j - 0.01015808947191389*k + 0.005381769256643121*n >= 0)  &&  (1.025172553796184 - 0.02300717282446881*j + 0.002706726214643389*k - 0.002165380971714711*n >= 0)  &&  (1.010647319325356 + 0.01045887119570338*j - 0.008668613964006406*k - 0.001978705361349288*n >= 0)  &&  (1.022530980097634 + 0.02177994742771311*j - 0.01464513706346226*k - 0.007885843034171986*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:8631-]|-->> [33m(0.9909411172622042 + 0.002516356316054353*j - 0.01056869652742828*k + 0.01962757926522395*n >= 0)  &&  (1.003216711763704 + 0.002270620068497038*j + 0.006357736191791708*k - 0.005487331832201177*n >= 0)  &&  (1.025172553796184 - 0.02300717282446881*j + 0.002706726214643389*k - 0.002165380971714711*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:11728-]|-->> [33m(0.9967868536411834 - 0.0004131188175621399*j + 0.00885910353216589*k + 0.003626265176378784*n >= 0)  &&  (0.9909411172622042 + 0.002516356316054353*j - 0.01056869652742828*k + 0.01962757926522395*n >= 0)  &&  (1.025172553796184 - 0.02300717282446881*j + 0.002706726214643389*k - 0.002165380971714711*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:13921-]|-->> [33m(1.013186813186813 - 0.0315018315018315*j + 0.01172161172161172*k + 0.01831501831501832*n >= 0)  &&  (0.9967868536411834 - 0.0004131188175621399*j + 0.00885910353216589*k + 0.003626265176378784*n >= 0)  &&  (0.9909411172622042 + 0.002516356316054353*j - 0.01056869652742828*k + 0.01962757926522395*n >= 0)  &&  (1.025172553796184 - 0.02300717282446881*j + 0.002706726214643389*k - 0.002165380971714711*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:17308-]|-->> [33m(0.983691264330696 + 0.009042467301792347*j + 0.01372517358307767*k + 0.007266268367511707*n >= 0)  &&  (1.013186813186813 - 0.0315018315018315*j + 0.01172161172161172*k + 0.01831501831501832*n >= 0)  &&  (0.9909411172622042 + 0.002516356316054353*j - 0.01056869652742828*k + 0.01962757926522395*n >= 0)  &&  (1.025172553796184 - 0.02300717282446881*j + 0.002706726214643389*k - 0.002165380971714711*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [2+:20095-]|-->> [33m(0.9333333333333333 + 0.1333333333333333*j + 0.06666666666666667*k >= 0)  &&  (1.016 + 0.08799999999999999*j - 0.016*k >= 0)  &&  (1.013186813186813 - 0.0315018315018315*j + 0.01172161172161172*k + 0.01831501831501832*n >= 0)  &&  (0.9909411172622042 + 0.002516356316054353*j - 0.01056869652742828*k + 0.01962757926522395*n >= 0)  &&  (1.025172553796184 - 0.02300717282446881*j + 0.002706726214643389*k - 0.002165380971714711*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0) 
[0m[31m[8][0m[#r48,#s192] -->   [2+:21765-]|-->> [33m(1.041645760160562 - 0.019568489713999*j - 0.01154039136979428*k - 0.02207727044656297*n >= 0)  &&  (0.9333333333333333 + 0.1333333333333333*j + 0.06666666666666667*k >= 0)  &&  (1.016 + 0.08799999999999999*j - 0.016*k >= 0)  &&  (1.013186813186813 - 0.0315018315018315*j + 0.01172161172161172*k + 0.01831501831501832*n >= 0)  &&  (0.9909411172622042 + 0.002516356316054353*j - 0.01056869652742828*k + 0.01962757926522395*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0) 
[0m[31m[9][0m[#r54,#s216] -->   [2+:23709-]|-->> [33m(1.041645760160562 - 0.019568489713999*j - 0.01154039136979428*k - 0.02207727044656297*n >= 0)  &&  (0.9333333333333333 + 0.1333333333333333*j + 0.06666666666666667*k >= 0)  &&  (1.016 + 0.08799999999999999*j - 0.016*k >= 0)  &&  (1.013186813186813 - 0.0315018315018315*j + 0.01172161172161172*k + 0.01831501831501832*n >= 0)  &&  (0.9909411172622042 + 0.002516356316054353*j - 0.01056869652742828*k + 0.01962757926522395*n >= 0)  &&  (1.035596236969235 - 0.002542588354945335*j - 0.03152809560132214*k - 0.004068141367912535*n >= 0)  &&  (1.043775649794802 + 0.04103967168262654*j - 0.01504787961696306*k - 0.02872777017783858*n >= 0)  &&  (1.04416403785489 + 0.03785488958990536*j + 0.0220820189274448*k - 0.06624605678233439*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 9 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(903 - 17*j - 10*k - 19*n >= 0)  &&  (14 + 2*j + k >= 0)  &&  (331 + 12*j + 7*k - 21*n >= 0)  &&  (605 - 19*j + 7*k + 11*n >= 0)  &&  (656 - 7*k + 13*n >= 0)  &&  (33 - k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(903 - 17*j - 10*k - 19*n >= 0)  &&  (14 + 2*j + k >= 0)  &&  (331 + 12*j + 7*k - 21*n >= 0)  &&  (605 - 19*j + 7*k + 11*n >= 0)  &&  (656 - 7*k + 13*n >= 0)  &&  (33 - k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,32,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,33,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,34,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,35,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,36,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,37,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,38,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,39,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [294+:25618-]|-->> [33m(0.9333333333333333 + 0.1333333333333333*j + 0.06666666666666667*k >= 0)  &&  (2.230987393405275 - 0.05164565567546074*j - 0.05164881535100861*k + 0.02008503603292461*n >= 0)  &&  (1.41321283889062 - 0.02929261452165784*j + 0.006232471174820817*k + 0.01869741352446245*n >= 0)  &&  (2.279149396287619 - 0.006848080735267615*j + 0.0007208506037123806*k - 0.0259506217336457*n >= 0)  &&  (1.000023944926954 - 0.01172120392786832*j - 0.03737330998355728*k + 0.03734936505660326*n >= 0)  &&  (1.39382889200561 + 0.01065918653576438*j - 0.02692847124824684*k + 0.01683029453015428*n >= 0)  &&  (1.000015997775232 + 0.04877241896815002*j - 0.0006027844847884267*k + 0.0005867867095566935*n >= 0)  &&  (0.9999997641450054 + 0.06666645439717145*j + 0.03333334512608307*k - 0.03333310927108839*n >= 0)  &&  (0.9999933010261803 + 0.01402274540705438*j + 0.06542384762734139*k - 0.01401604643323479*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [294+:28374-]|-->> [33m(1.000017705689789 + 0.1428179224513697*j + 0.1428204667854383*k - 0.1428381724752267*n >= 0)  &&  (1.000025267012052 + 0.1950578592865017*j + 0.07313406372641207*k - 0.07315933073846415*n >= 0)  &&  (1.000004239076237 + 0.1240231210984742*j - 0.007753564606773011*k + 0.007749325530536255*n >= 0)  &&  (2.279149396287619 - 0.006848080735267615*j + 0.0007208506037123806*k - 0.0259506217336457*n >= 0)  &&  (0.9333333333333333 + 0.1333333333333333*j + 0.06666666666666667*k >= 0)  &&  (2.230987393405275 - 0.05164565567546074*j - 0.05164881535100861*k + 0.02008503603292461*n >= 0)  &&  (1.41321283889062 - 0.02929261452165784*j + 0.006232471174820817*k + 0.01869741352446245*n >= 0)  &&  (1.000023944926954 - 0.01172120392786832*j - 0.03737330998355728*k + 0.03734936505660326*n >= 0)  &&  (0.9999933010261803 + 0.01402274540705438*j + 0.06542384762734139*k - 0.01401604643323479*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [294+:29486-]|-->> [33m(1.000017705689789 + 0.1428179224513697*j + 0.1428204667854383*k - 0.1428381724752267*n >= 0)  &&  (1.000025267012052 + 0.1950578592865017*j + 0.07313406372641207*k - 0.07315933073846415*n >= 0)  &&  (1.000004239076237 + 0.1240231210984742*j - 0.007753564606773011*k + 0.007749325530536255*n >= 0)  &&  (2.279149396287619 - 0.006848080735267615*j + 0.0007208506037123806*k - 0.0259506217336457*n >= 0)  &&  (0.9333333333333333 + 0.1333333333333333*j + 0.06666666666666667*k >= 0)  &&  (2.230987393405275 - 0.05164565567546074*j - 0.05164881535100861*k + 0.02008503603292461*n >= 0)  &&  (1.41321283889062 - 0.02929261452165784*j + 0.006232471174820817*k + 0.01869741352446245*n >= 0)  &&  (1.000023944926954 - 0.01172120392786832*j - 0.03737330998355728*k + 0.03734936505660326*n >= 0)  &&  (0.9999933010261803 + 0.01402274540705438*j + 0.06542384762734139*k - 0.01401604643323479*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(7 + j + k - n >= 0)  &&  (529 - 11*j + 7*n >= 0)  &&  (43 - j - k >= 0)  &&  (14 + 2*j + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(7 + j + k - n >= 0)  &&  (529 - 11*j + 7*n >= 0)  &&  (43 - j - k >= 0)  &&  (14 + 2*j + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,44,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,45,45) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,46,46) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,47,47) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,48,48) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,49,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,50,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,51,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [682+:30690-]|-->> [33m(0.9999857184157266 + 0.1428237040883917*j + 0.1428349193879104*k - 0.1428206378036372*n >= 0)  &&  (1.00001883497007 + 0.1950741747100656*j + 0.07314339803123948*k - 0.07316223300130975*n >= 0)  &&  (1.000013867921101 + 0.1240052069684942*j - 0.007757259396081378*k + 0.007743391474980404*n >= 0)  &&  (2.870791130577607 - 0.003832466465918422*j + 0.001094990418833835*k - 0.03284971256501505*n >= 0)  &&  (0.9996109903055412 - 0.111093313281954*j - 0.1110780579998197*k + 0.1110856856408875*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (1.544290288153681 - 0.05122732123799355*k + 0.04055496264674488*n >= 0)  &&  (2.139453246039622 - 0.03189377374707043*j - 0.0319132783207546*k + 0.009571057810173762*n >= 0)  &&  (0.9999967246637901 + 0.005112102376557945*j + 0.05791860002913435*k - 0.005108827040348117*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [682+:33609-]|-->> [33m(0.9999857184157266 + 0.1428237040883917*j + 0.1428349193879104*k - 0.1428206378036372*n >= 0)  &&  (1.00001883497007 + 0.1950741747100656*j + 0.07314339803123948*k - 0.07316223300130975*n >= 0)  &&  (1.000013867921101 + 0.1240052069684942*j - 0.007757259396081378*k + 0.007743391474980404*n >= 0)  &&  (2.870791130577607 - 0.003832466465918422*j + 0.001094990418833835*k - 0.03284971256501505*n >= 0)  &&  (0.9996109903055412 - 0.111093313281954*j - 0.1110780579998197*k + 0.1110856856408875*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (1.544290288153681 - 0.05122732123799355*k + 0.04055496264674488*n >= 0)  &&  (2.139453246039622 - 0.03189377374707043*j - 0.0319132783207546*k + 0.009571057810173762*n >= 0)  &&  (0.9999967246637901 + 0.005112102376557945*j + 0.05791860002913435*k - 0.005108827040348117*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [682+:36758-]|-->> [33m(11.65600476747946 - 0.1293420644643423*j - 0.1293451912647143*k - 0.07959607868586338*n >= 0)  &&  (11.85106382978729 - 0.0283687943262413*j - 0.1560283687943272*k - 0.05673758865248268*n >= 0)  &&  (1.00001986821467 + 0.2856234613516819*j + 0.2856218046395234*k - 0.2856416728541937*n >= 0)  &&  (1.000019379654542 + 0.3528351583604437*j + 0.2352137490796911*k - 0.2352331287342335*n >= 0)  &&  (1.000013867921101 + 0.1240052069684942*j - 0.007757259396081378*k + 0.007743391474980404*n >= 0)  &&  (0.9996109903055412 - 0.111093313281954*j - 0.1110780579998197*k + 0.1110856856408875*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (0.9999967246637901 + 0.005112102376557945*j + 0.05791860002913435*k - 0.005108827040348117*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [682+:38514-]|-->> [33m(24.17298612532102 - 0.2726103408581139*j - 0.2726266225107805*k - 0.1817456544562974*n >= 0)  &&  (24.80000000000018 - 0.06666666666666705*j - 0.3333333333333353*k - 0.1333333333333342*n >= 0)  &&  (1.00001986821467 + 0.2856234613516819*j + 0.2856218046395234*k - 0.2856416728541937*n >= 0)  &&  (1.000019379654542 + 0.3528351583604437*j + 0.2352137490796911*k - 0.2352331287342335*n >= 0)  &&  (1.000013867921101 + 0.1240052069684942*j - 0.007757259396081378*k + 0.007743391474980404*n >= 0)  &&  (0.9996109903055412 - 0.111093313281954*j - 0.1110780579998197*k + 0.1110856856408875*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (0.9999967246637901 + 0.005112102376557945*j + 0.05791860002913435*k - 0.005108827040348117*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [682+:40776-]|-->> [33m(24.17298612532102 - 0.2726103408581139*j - 0.2726266225107805*k - 0.1817456544562974*n >= 0)  &&  (24.80000000000018 - 0.06666666666666705*j - 0.3333333333333353*k - 0.1333333333333342*n >= 0)  &&  (1.00001986821467 + 0.2856234613516819*j + 0.2856218046395234*k - 0.2856416728541937*n >= 0)  &&  (1.000019379654542 + 0.3528351583604437*j + 0.2352137490796911*k - 0.2352331287342335*n >= 0)  &&  (1.000013867921101 + 0.1240052069684942*j - 0.007757259396081378*k + 0.007743391474980404*n >= 0)  &&  (0.9996109903055412 - 0.111093313281954*j - 0.1110780579998197*k + 0.1110856856408875*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (0.9999967246637901 + 0.005112102376557945*j + 0.05791860002913435*k - 0.005108827040348117*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [682+:44910-]|-->> [33m(0.9999805405386728 - 0.2221581136430317*j - 0.2221567523176142*k + 0.2221762117789412*n >= 0)  &&  (0.9999808594371582 + 0.03920630364566586*j - 0.1960219479469085*k + 0.1960410885097501*n >= 0)  &&  (24.17298612532102 - 0.2726103408581139*j - 0.2726266225107805*k - 0.1817456544562974*n >= 0)  &&  (24.80000000000018 - 0.06666666666666705*j - 0.3333333333333353*k - 0.1333333333333342*n >= 0)  &&  (1.00001986821467 + 0.2856234613516819*j + 0.2856218046395234*k - 0.2856416728541937*n >= 0)  &&  (1.000019379654542 + 0.3528351583604437*j + 0.2352137490796911*k - 0.2352331287342335*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (0.9999967246637901 + 0.005112102376557945*j + 0.05791860002913435*k - 0.005108827040348117*n >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [682+:46396-]|-->> [33m(0.9999805405386728 - 0.2221581136430317*j - 0.2221567523176142*k + 0.2221762117789412*n >= 0)  &&  (0.9999808594371582 + 0.03920630364566586*j - 0.1960219479469085*k + 0.1960410885097501*n >= 0)  &&  (24.17298612532102 - 0.2726103408581139*j - 0.2726266225107805*k - 0.1817456544562974*n >= 0)  &&  (24.80000000000018 - 0.06666666666666705*j - 0.3333333333333353*k - 0.1333333333333342*n >= 0)  &&  (1.00001986821467 + 0.2856234613516819*j + 0.2856218046395234*k - 0.2856416728541937*n >= 0)  &&  (1.000019379654542 + 0.3528351583604437*j + 0.2352137490796911*k - 0.2352331287342335*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (0.9999967246637901 + 0.005112102376557945*j + 0.05791860002913435*k - 0.005108827040348117*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 7 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(9 - 2*j - 2*k + 2*n >= 0)  &&  (52 + 3*k >= 0)  &&  (89 - j - k >= 0)  &&  (17 + 6*j + 4*k - 4*n >= 0)  &&  (7 + 2*j + 2*k - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(9 - 2*j - 2*k + 2*n >= 0)  &&  (52 + 3*k >= 0)  &&  (89 - j - k >= 0)  &&  (17 + 6*j + 4*k - 4*n >= 0)  &&  (7 + 2*j + 2*k - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,90,90) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,91,91) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,92,92) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,93,93) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,94,94) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,95,95) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,96,96) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,97,97) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1438+:48306-]|-->> [33m(1.000003484111076 - 0.499862181979176*j - 0.4998690356515318*k + 0.499858697868099*n >= 0)  &&  (1.000010367996026 - 0.4998652160517043*k + 0.4998548480556799*n >= 0)  &&  (1.000007039523581 + 0.6664104726924045*j + 0.6664071765601491*k - 0.666417512215979*n >= 0)  &&  (1.000010358017718 + 0.8885459234132794*j + 0.2221313018444562*k - 0.2221416598621815*n >= 0)  &&  (22.555311052592 - 0.03703647230144434*j - 0.03703672023414373*k - 0.1851829813389696*n >= 0)  &&  (18.89320388349503 + 0.04854368932038804*j - 0.08737864077669855*k - 0.09708737864077621*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0)  &&  (0.9999974294848104 - 0.02512356422541295*j + 0.006525934930651372*k + 0.02512613474060261*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1438+:49986-]|-->> [33m(1.000003516167794 - 1.999392587963314*j - 1.999382280583575*k + 1.999389071795576*n >= 0)  &&  (0.9999912144931201 - 0.02852333493720738*j + 0.05964888517135346*k + 0.02853212044408723*n >= 0)  &&  (1.000010367996026 - 0.4998652160517043*k + 0.4998548480556799*n >= 0)  &&  (1.000007039523581 + 0.6664104726924045*j + 0.6664071765601491*k - 0.666417512215979*n >= 0)  &&  (1.000010358017718 + 0.8885459234132794*j + 0.2221313018444562*k - 0.2221416598621815*n >= 0)  &&  (22.555311052592 - 0.03703647230144434*j - 0.03703672023414373*k - 0.1851829813389696*n >= 0)  &&  (18.89320388349503 + 0.04854368932038804*j - 0.08737864077669855*k - 0.09708737864077621*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1438+:50661-]|-->> [33m(1.000003516167794 - 1.999392587963314*j - 1.999382280583575*k + 1.999389071795576*n >= 0)  &&  (0.9999912144931201 - 0.02852333493720738*j + 0.05964888517135346*k + 0.02853212044408723*n >= 0)  &&  (1.000010367996026 - 0.4998652160517043*k + 0.4998548480556799*n >= 0)  &&  (1.000007039523581 + 0.6664104726924045*j + 0.6664071765601491*k - 0.666417512215979*n >= 0)  &&  (1.000010358017718 + 0.8885459234132794*j + 0.2221313018444562*k - 0.2221416598621815*n >= 0)  &&  (22.555311052592 - 0.03703647230144434*j - 0.03703672023414373*k - 0.1851829813389696*n >= 0)  &&  (18.89320388349503 + 0.04854368932038804*j - 0.08737864077669855*k - 0.09708737864077621*n >= 0)  &&  (0.9176470588235294 + 0.1294117647058823*j + 0.08235294117647059*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*j - 2*k + 2*n >= 0)  &&  (316 - 9*j + 19*k + 9*n >= 0)  &&  (9 + 8*j + 2*k - 2*n >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 - 2*j - 2*k + 2*n >= 0)  &&  (316 - 9*j + 19*k + 9*n >= 0)  &&  (9 + 8*j + 2*k - 2*n >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
