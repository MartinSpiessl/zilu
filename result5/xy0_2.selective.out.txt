[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target xy0_2
[  8%] Building CXX object CMakeFiles/xy0_2.dir/test/xy0_2.cpp.o
[ 16%] Building CXX object CMakeFiles/xy0_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/xy0_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/xy0_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/xy0_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/xy0_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/xy0_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/xy0_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/xy0_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/xy0_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/xy0_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/xy0_2.dir/src/instrumentation.cpp.o
Linking CXX executable xy0_2
[100%] Built target xy0_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [1+:1065-]|-->> [33m(1 - 0.007158708568974157*x - 0.004509986398453719*y >= 0)  &&  (1 - 0.04705882352941176*x + 0.2117647058823529*y >= 0)  &&  (1 - 0.2117647058823529*x + 0.04705882352941176*y >= 0)  &&  (1 - 0.1138790035587189*x - 0.03558718861209964*y >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [1+:2707-]|-->> [33m(1 - 0.007158708568974157*x - 0.004509986398453719*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362695*y >= 0)  &&  (1 - 0.04705882352941176*x + 0.2117647058823529*y >= 0)  &&  (1 - 0.2117647058823529*x + 0.04705882352941176*y >= 0)  &&  (1 - 0.1138790035587189*x - 0.03558718861209964*y >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [1+:3460-]|-->> [33m(1 - 0.007158708568974157*x - 0.004509986398453719*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362695*y >= 0)  &&  (1 - 0.04705882352941176*x + 0.2117647058823529*y >= 0)  &&  (1 - 0.2117647058823529*x + 0.04705882352941176*y >= 0)  &&  (1 - 0.1138790035587189*x - 0.03558718861209964*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(85 - 18*x + 4*y >= 0)  &&  (96 + 12*x + 7*y >= 0)  &&  (85 - 4*x + 18*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.inv >>> [0m(85 - 18*x + 4*y >= 0)  &&  (96 + 12*x + 7*y >= 0)  &&  (85 - 4*x + 18*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt[0m
[34m[1mTest Counter Example: (7,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (9,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (10,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (12,12) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (13,13) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (14,14) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [15+:4428-]|-->> [33m(1.177004666949512 - 0.007891387356809504*x - 0.004751803139584217*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362694*y >= 0)  &&  (1 + 0.01294797687861272*x + 0.004161849710982659*y >= 0)  &&  (1 - 0.1817936751133198*x + 0.1817397603626232*y >= 0)  &&  (3.305882352941177 - 0.2117647058823529*x + 0.04705882352941176*y >= 0)  &&  (3.092526690391459 - 0.1138790035587188*x - 0.03558718861209963*y >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [15+:4907-]|-->> [33m(1.177004666949512 - 0.007891387356809504*x - 0.004751803139584217*y >= 0)  &&  (1 - 0.3999281145953311*x + 0.3998767678777106*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362694*y >= 0)  &&  (1 + 0.01294797687861272*x + 0.004161849710982659*y >= 0)  &&  (3.305882352941177 - 0.2117647058823529*x + 0.04705882352941176*y >= 0)  &&  (3.092526690391459 - 0.1138790035587188*x - 0.03558718861209963*y >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [15+:6118-]|-->> [33m(1.177004666949512 - 0.007891387356809504*x - 0.004751803139584217*y >= 0)  &&  (1 - 0.3999281145953311*x + 0.3998767678777106*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362694*y >= 0)  &&  (1 + 0.01294797687861272*x + 0.004161849710982659*y >= 0)  &&  (3.305882352941177 - 0.2117647058823529*x + 0.04705882352941176*y >= 0)  &&  (3.092526690391459 - 0.1138790035587188*x - 0.03558718861209963*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(97 + 12*x + 7*y >= 0)  &&  (5 - 2*x + 2*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.inv >>> [0m(97 + 12*x + 7*y >= 0)  &&  (5 - 2*x + 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt[0m
[34m[1mTest Counter Example: (0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [15+:6958-]|-->> [33m(1.177004666949512 - 0.007891387356809504*x - 0.004751803139584217*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 - 0.3999281145953311*x + 0.3998767678777106*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362694*y >= 0)  &&  (1 + 0.01294797687861272*x + 0.004161849710982659*y >= 0)  &&  (3.305882352941177 - 0.2117647058823529*x + 0.04705882352941176*y >= 0)  &&  (3.092526690391459 - 0.1138790035587188*x - 0.03558718861209963*y >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [15+:7661-]|-->> [33m(1 - x + y >= 0)  &&  (15 - x >= 0)  &&  (7.588235294117649 - 0.2941176470588236*x - 0.1764705882352942*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362694*y >= 0)  &&  (1 + 0.01294797687861272*x + 0.004161849710982659*y >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [15+:7803-]|-->> [33m(1 - 1.999094333305152*x + 1.999024666636302*y >= 0)  &&  (29 - 2*x >= 0)  &&  (7.588235294117649 - 0.2941176470588236*x - 0.1764705882352942*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362694*y >= 0)  &&  (1 + 0.01294797687861272*x + 0.004161849710982659*y >= 0) 
[0m[31m[4][0m[#r16,#s64] -->   [17+:8016-]|-->> [33m(1 - 2*x + 2*y >= 0)  &&  (32.99999999999955 - 1.999999999999972*x >= 0)  &&  (13.8 - 0.6000000000000001*x - 0.2000000000000002*y >= 0)  &&  (7.153846153846139 - 0.2307692307692302*x - 0.1538461538461535*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 0.1243523316062176*x + 0.07253886010362694*y >= 0)  &&  (1 + 0.01294797687861272*x + 0.004161849710982659*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xy0_2.inv >>> [0m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*y >= 0) [0m

=====================time=========================
