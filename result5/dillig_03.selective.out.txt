[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_03
[  8%] Building CXX object CMakeFiles/dillig_03.dir/test/dillig_03.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_03.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_03.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_03.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_03.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_03.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_03.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_03.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_03.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_03.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_03.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_03.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_03
[100%] Built target dillig_03
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:54-]|-->> [33m(1.093700747368956 - 0.008287152371752505*k + 0.005745081092073822*w >= 0)  &&  (0.9090866805862774 + 4.651355094791726e-06*k + 0.09090866805862775*w >= 0)  &&  (1.000482975126781 + 0.02173388070514368*k - 0.02221685583192465*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:160-]|-->> [33m(1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0)  &&  (1.000482975126781 + 0.02173388070514368*k - 0.02221685583192465*w >= 0)  &&  (0.9090866805862774 + 4.651355094791726e-06*k + 0.09090866805862775*w >= 0)  &&  (0.9276703111858704 + 0.05550883095037847*k + 0.01682085786375105*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [12+:189-]|-->> [33m(1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0)  &&  (1.000482975126781 + 0.02173388070514368*k - 0.02221685583192465*w >= 0)  &&  (0.9090866805862774 + 4.651355094791726e-06*k + 0.09090866805862775*w >= 0)  &&  (0.9276703111858704 + 0.05550883095037847*k + 0.01682085786375105*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(158 - 7*k + 11*w >= 0)  &&  (386 + 23*k + 7*w >= 0)  &&  (10 + w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(158 - 7*k + 11*w >= 0)  &&  (386 + 23*k + 7*w >= 0)  &&  (10 + w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (32,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (24,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (25,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (25,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (26,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (27,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (28,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (26,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:256-]|-->> [33m(1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0)  &&  (1.000482975126781 + 0.02173388070514368*k - 0.02221685583192465*w >= 0)  &&  (0.9090866805862774 + 4.651355094791726e-06*k + 0.09090866805862775*w >= 0)  &&  (0.9276703111858704 + 0.05550883095037847*k + 0.01682085786375105*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:324-]|-->> [33m(0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.000482975126781 + 0.02173388070514368*k - 0.02221685583192465*w >= 0)  &&  (0.9090866805862774 + 4.651355094791726e-06*k + 0.09090866805862775*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [12+:403-]|-->> [33m(0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.000482975126781 + 0.02173388070514368*k - 0.02221685583192465*w >= 0)  &&  (0.9090866805862774 + 4.651355094791726e-06*k + 0.09090866805862775*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[4][0m[#r16,#s64] -->   [12+:482-]|-->> [33m(0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.000482975126781 + 0.02173388070514368*k - 0.02221685583192465*w >= 0)  &&  (0.9090866805862774 + 4.651355094791726e-06*k + 0.09090866805862775*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(115 + 15*k + 7*w >= 0)  &&  (158 - 7*k + 11*w >= 0)  &&  (1427 + 31*k - 32*w >= 0)  &&  (10 + w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(115 + 15*k + 7*w >= 0)  &&  (158 - 7*k + 11*w >= 0)  &&  (1427 + 31*k - 32*w >= 0)  &&  (10 + w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (-3,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:613-]|-->> [33m(1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (0.7078651685393258 + 0.1123595505617977*k + 0.1797752808988764*w >= 0)  &&  (0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:717-]|-->> [33m(1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (0.7078651685393258 + 0.1123595505617977*k + 0.1797752808988764*w >= 0)  &&  (0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(36 + 3*k - 5*w >= 0)  &&  (63 + 10*k + 16*w >= 0)  &&  (158 - 7*k + 11*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(36 + 3*k - 5*w >= 0)  &&  (63 + 10*k + 16*w >= 0)  &&  (158 - 7*k + 11*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (2,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:828-]|-->> [33m(0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (0.7078651685393258 + 0.1123595505617977*k + 0.1797752808988764*w >= 0)  &&  (0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:883-]|-->> [33m(0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (0.7078651685393258 + 0.1123595505617977*k + 0.1797752808988764*w >= 0)  &&  (0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [12+:961-]|-->> [33m(0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (0.7078651685393258 + 0.1123595505617977*k + 0.1797752808988764*w >= 0)  &&  (0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 + w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (115 + 15*k + 7*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(2 + w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (115 + 15*k + 7*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (-6,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:1052-]|-->> [33m(0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (0.7078651685393258 + 0.1123595505617977*k + 0.1797752808988764*w >= 0)  &&  (0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:1136-]|-->> [33m(0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (0.7078651685393258 + 0.1123595505617977*k + 0.1797752808988764*w >= 0)  &&  (0.8394160583941606 + 0.1094890510948905*k + 0.05109489051094891*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 + w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (63 + 10*k + 16*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(2 + w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (63 + 10*k + 16*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:1196-]|-->> [33m(0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:1285-]|-->> [33m(0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(15 + 10*k + 4*w >= 0)  &&  (2 + w >= 0)  &&  (36 + 3*k - 5*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(15 + 10*k + 4*w >= 0)  &&  (2 + w >= 0)  &&  (36 + 3*k - 5*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:1361-]|-->> [33m(0.5*k + 0.5*w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:1454-]|-->> [33m(0.5*k + 0.5*w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (0.6665786011164776 + 7.548475730488613e-05*k + 0.3333459141262175*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(k + w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (2 + w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(k + w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (2 + w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:1524-]|-->> [33m(3.53958127998627e-17 + w >= 0)  &&  (0.5*k + 0.5*w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:1567-]|-->> [33m(3.53958127998627e-17 + w >= 0)  &&  (0.5*k + 0.5*w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(w >= 0)  &&  (36 + 3*k - 5*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(w >= 0)  &&  (36 + 3*k - 5*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [0m
[32m[1m--------------------------------------------- Iteration 9 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (-12,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:1617-]|-->> [33m(3.53958127998627e-17 + w >= 0)  &&  (0.5*k + 0.5*w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:1664-]|-->> [33m(3.53958127998627e-17 + w >= 0)  &&  (0.5*k + 0.5*w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (15 + 10*k + 4*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(w >= 0)  &&  (36 + 3*k - 5*w >= 0)  &&  (15 + 10*k + 4*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00006.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00007.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 10 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:1716-]|-->> [33m( -1 + k + w >= 0)  &&  (3.53958127998627e-17 + w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:1791-]|-->> [33m( -1 + k + w >= 0)  &&  (3.53958127998627e-17 + w >= 0)  &&  (0.5172413793103448 + 0.3448275862068966*k + 0.1379310344827586*w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + k + w >= 0)  &&  (w >= 0)  &&  (36 + 3*k - 5*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m( -1 + k + w >= 0)  &&  (w >= 0)  &&  (36 + 3*k - 5*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00006.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 11 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [12+:1863-]|-->> [33m( -1 + 2*k >= 0)  &&  ( -1 + k + w >= 0)  &&  (3.53958127998627e-17 + w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [12+:1926-]|-->> [33m( -1 + 2*k >= 0)  &&  ( -1 + k + w >= 0)  &&  (3.53958127998627e-17 + w >= 0)  &&  (1.058823529411765 + 0.08823529411764706*k - 0.1470588235294118*w >= 0)  &&  (1.858823529411765 - 0.08235294117647057*k + 0.1294117647058823*w >= 0)  &&  (1.736470588235294 - 0.06352941176470588*k + 0.02588235294117647*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*k >= 0)  &&  (w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m( -1 + 2*k >= 0)  &&  (w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -1 + 2*k >= 0)  &&  (w >= 0) [0m

=====================time=========================
