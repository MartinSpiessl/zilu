[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 35
[  8%] Building CXX object CMakeFiles/35.dir/test/35.cpp.o
[ 16%] Building CXX object CMakeFiles/35.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/35.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/35.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/35.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/35.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/35.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/35.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/35.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/35.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/35.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/35.dir/src/instrumentation.cpp.o
Linking CXX executable 35
[100%] Built target 35
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/35.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/35.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [2+:7-]|-->> [33m(0.9754231212003689 - 0.03921842361643263*x + 0.06379530241606374*n >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [2+:19-]|-->> [33m(0.9500496296428063 - 0.08003147460654406*x + 0.1299818449637377*n >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [2+:29-]|-->> [33m(0.97494893475879 - 0.1065617032322514*x + 0.1316127684734615*n >= 0) [0m
[31m[4][0m[#r16,#s64] -->  [2+:44-]|-->> [33m(0.9908613566471218 - 0.1235404446004932*x + 0.1326790879533713*n >= 0) [0m
[31m[5][0m[#r20,#s80] -->  [2+:53-]|-->> [33m(0.9814906990792731 - 0.2591302128901729*x + 0.2776395138108996*n >= 0) [0m
[31m[6][0m[#r24,#s96] -->  [2+:62-]|-->> [33m(0.9692461445598219 - 0.4766847593227848*x + 0.5074386147629637*n >= 0) [0m
[31m[7][0m[#r28,#s112] -->  [2+:76-]|-->> [33m(0.8837721274944439 - 1.766663662084461*x + 1.882891534590017*n >= 0) [0m
[31m[8][0m[#r32,#s128] -->  [2+:88-]|-->> [33m(0.9200369984438819 - 1.839149035790718*x + 1.919112037346836*n >= 0) [0m
[31m[9][0m[#r36,#s144] -->  [2+:101-]|-->> [33m(0.9466909069518916 - 1.892472803207907*x + 1.945781896256015*n >= 0) [0m
[31m[10][0m[#r40,#s160] -->  [2+:117-]|-->> [33m(1 - 1.999105978469039*x + 1.99910597846904*n >= 0) [0m
[31m[11][0m[#r44,#s176] -->  [2+:126-]|-->> [33m(0.9999999999999991 - 1.999073422286264*x + 1.999073422286264*n >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(1 - 2*x + 2*n >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/35.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/35.inv >>> [0m(1 - 2*x + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*x + 2*n >= 0) [0m

=====================time=========================
