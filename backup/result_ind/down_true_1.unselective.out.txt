[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down_true_1
[  8%] Building CXX object CMakeFiles/down_true_1.dir/test/down_true_1.cpp.o
[ 16%] Building CXX object CMakeFiles/down_true_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down_true_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down_true_1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down_true_1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down_true_1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down_true_1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down_true_1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down_true_1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down_true_1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down_true_1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down_true_1.dir/src/instrumentation.cpp.o
Linking CXX executable down_true_1
[100%] Built target down_true_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1983-]|-->> [33m(1.016367816091954 - 0.006160919540229885*i + 0.001747126436781609*k - 0.01195402298850575*n >= 0)  &&  (0.9815289892252437 + 0.00513083632632119*i + 0.04104669061056952*k + 0.01847101077475629*n >= 0)  &&  (1.007871909511254 + 0.009324009324009324*i + 0.001987083954297069*k - 0.007871909511253774*n >= 0)  &&  (1.002056343820687 + 0.005915942991822079*i - 0.004903589110868568*k - 0.002056343820686819*n >= 0)  &&  (1.012908716930279 + 0.002695226611816441*i - 0.01659692176750124*k + 0.0009929782254060571*n >= 0)  &&  (1.014404699633847 - 0.01102482597674325*i - 0.005794069126463605*k + 0.002414195469359836*n >= 0)  &&  (1.00720871751886 - 0.001508801341156748*i + 0.01676445934618609*k - 0.007208717518860017*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:4528-]|-->> [33m(1.181818181818182 + 0.1212121212121212*i - 0.1515151515151515*k - 0.1515151515151515*n >= 0)  &&  (1.094339622641509 + 0.169811320754717*i - 0.09433962264150944*n >= 0)  &&  (1.026455026455027 + 0.08994708994708994*i + 0.04232804232804233*k - 0.02645502645502645*n >= 0)  &&  (1.026637069922309 - 0.001109877913429523*i + 0.03884572697003329*k - 0.02663706992230854*n >= 0)  &&  (1.012908716930279 + 0.002695226611816441*i - 0.01659692176750124*k + 0.0009929782254060571*n >= 0)  &&  (1.014404699633847 - 0.01102482597674325*i - 0.005794069126463605*k + 0.002414195469359836*n >= 0)  &&  (1.020898641588297 - 0.01602229188436085*i + 0.01219087425983978*k - 0.01706722396377569*n >= 0)  &&  (0.9815289892252437 + 0.00513083632632119*i + 0.04104669061056952*k + 0.01847101077475629*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:5968-]|-->> [33m(1.037533512064343 + 0.096514745308311*k - 0.03753351206434316*n >= 0)  &&  (1.181818181818182 + 0.1212121212121212*i - 0.1515151515151515*k - 0.1515151515151515*n >= 0)  &&  (1.094339622641509 + 0.169811320754717*i - 0.09433962264150944*n >= 0)  &&  (1.026455026455027 + 0.08994708994708994*i + 0.04232804232804233*k - 0.02645502645502645*n >= 0)  &&  (1.012908716930279 + 0.002695226611816441*i - 0.01659692176750124*k + 0.0009929782254060571*n >= 0)  &&  (1.014404699633847 - 0.01102482597674325*i - 0.005794069126463605*k + 0.002414195469359836*n >= 0)  &&  (1.020898641588297 - 0.01602229188436085*i + 0.01219087425983978*k - 0.01706722396377569*n >= 0)  &&  (0.9815289892252437 + 0.00513083632632119*i + 0.04104669061056952*k + 0.01847101077475629*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:6908-]|-->> [33m(1.12316715542522 - 0.08797653958944282*i + 0.02346041055718475*k - 0.05865102639296187*n >= 0)  &&  (1.037533512064343 + 0.096514745308311*k - 0.03753351206434316*n >= 0)  &&  (1.181818181818182 + 0.1212121212121212*i - 0.1515151515151515*k - 0.1515151515151515*n >= 0)  &&  (1.094339622641509 + 0.169811320754717*i - 0.09433962264150944*n >= 0)  &&  (1.012908716930279 + 0.002695226611816441*i - 0.01659692176750124*k + 0.0009929782254060571*n >= 0)  &&  (1.014404699633847 - 0.01102482597674325*i - 0.005794069126463605*k + 0.002414195469359836*n >= 0)  &&  (1.026455026455027 + 0.08994708994708994*i + 0.04232804232804233*k - 0.02645502645502645*n >= 0)  &&  (0.9815289892252437 + 0.00513083632632119*i + 0.04104669061056952*k + 0.01847101077475629*n >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:8685-]|-->> [33m(1.12316715542522 - 0.08797653958944282*i + 0.02346041055718475*k - 0.05865102639296187*n >= 0)  &&  (1.037533512064343 + 0.096514745308311*k - 0.03753351206434316*n >= 0)  &&  (1.181818181818182 + 0.1212121212121212*i - 0.1515151515151515*k - 0.1515151515151515*n >= 0)  &&  (1.094339622641509 + 0.169811320754717*i - 0.09433962264150944*n >= 0)  &&  (1.012908716930279 + 0.002695226611816441*i - 0.01659692176750124*k + 0.0009929782254060571*n >= 0)  &&  (1.014404699633847 - 0.01102482597674325*i - 0.005794069126463605*k + 0.002414195469359836*n >= 0)  &&  (1.026455026455027 + 0.08994708994708994*i + 0.04232804232804233*k - 0.02645502645502645*n >= 0)  &&  (0.9815289892252437 + 0.00513083632632119*i + 0.04104669061056952*k + 0.01847101077475629*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(29 + 3*i - 4*k - 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(29 + 3*i - 4*k - 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,12) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,13) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,14) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,15) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [102+:11529-]|-->> [33m(0.9999884522247892 - 0.1052732792246472*i + 0.1052476700525846*k + 1.154777521090999e-05*n >= 0)  &&  (1 + 0.005524861878453039*i + 0.1049723756906077*k + 6.938893903907228e-18*n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0)  &&  (1.201184590533066 - 0.01204170541876744*i - 0.00567820255519115*k + 0.004307601938420873*n >= 0)  &&  (0.9815289892252437 + 0.005130836326321191*i + 0.04104669061056953*k + 0.01847101077475629*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [102+:12616-]|-->> [33m(0.9999884522247892 - 0.1052732792246472*i + 0.1052476700525846*k + 1.154777521090999e-05*n >= 0)  &&  (1 + 0.005524861878453039*i + 0.1049723756906077*k + 6.938893903907228e-18*n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0)  &&  (1.201184590533066 - 0.01204170541876744*i - 0.00567820255519115*k + 0.004307601938420873*n >= 0)  &&  (0.9815289892252437 + 0.005130836326321191*i + 0.04104669061056953*k + 0.01847101077475629*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(10 - i + k >= 0)  &&  (9 + 2*i >= 0)  &&  (9 + 2*i - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(10 - i + k >= 0)  &&  (9 + 2*i >= 0)  &&  (9 + 2*i - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,1,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-1,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-1,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [102+:14898-]|-->> [33m(k + n >= 0)  &&  (0.9999884522247892 - 0.1052732792246472*i + 0.1052476700525846*k + 1.154777521090999e-05*n >= 0)  &&  (1 + 0.005524861878453039*i + 0.1049723756906077*k + 6.938893903907228e-18*n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.201184590533066 - 0.01204170541876744*i - 0.00567820255519115*k + 0.004307601938420873*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [102+:16985-]|-->> [33m(k + n >= 0)  &&  (0.9999884522247892 - 0.1052732792246472*i + 0.1052476700525846*k + 1.154777521090999e-05*n >= 0)  &&  (1 + 0.005524861878453039*i + 0.1049723756906077*k + 6.938893903907228e-18*n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.201184590533066 - 0.01204170541876744*i - 0.00567820255519115*k + 0.004307601938420873*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(k + n >= 0)  &&  (10 - i + k >= 0)  &&  (9 + 2*i - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(k + n >= 0)  &&  (10 - i + k >= 0)  &&  (9 + 2*i - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (-1,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [102+:19198-]|-->> [33m( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.3333333333333334 + 0.3333333333333333*i - 0.3333333333333333*k + 0.6666666666666666*n >= 0)  &&  (k + n >= 0)  &&  (0.9999884522247892 - 0.1052732792246472*i + 0.1052476700525846*k + 1.154777521090999e-05*n >= 0)  &&  (1 + 0.005524861878453039*i + 0.1049723756906077*k + 6.938893903907228e-18*n >= 0)  &&  (1.201184590533066 - 0.01204170541876744*i - 0.00567820255519115*k + 0.004307601938420873*n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [102+:21365-]|-->> [33m( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.3333333333333334 + 0.3333333333333333*i - 0.3333333333333333*k + 0.6666666666666666*n >= 0)  &&  (k + n >= 0)  &&  (0.9999884522247892 - 0.1052732792246472*i + 0.1052476700525846*k + 1.154777521090999e-05*n >= 0)  &&  (1 + 0.005524861878453039*i + 0.1049723756906077*k + 6.938893903907228e-18*n >= 0)  &&  (1.201184590533066 - 0.01204170541876744*i - 0.00567820255519115*k + 0.004307601938420873*n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 + i - k + 2*n >= 0)  &&  (9 + 2*i - 2*k >= 0)  &&  (10 - i + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 + i - k + 2*n >= 0)  &&  (9 + 2*i - 2*k >= 0)  &&  (10 - i + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,4,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [102+:23018-]|-->> [33m(0.9999580855298973 + 0.9997275559443457*i - 1.99941319741859*k + 0.9997275559443457*n >= 0)  &&  ( -0.3338120404411764 + 0.6669060202205883*i - 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.9992248452764665 - 2.000371843888041*i + 1.999596689164508*k + 0.0007751547235339551*n >= 0)  &&  ( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (k + n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [102+:24551-]|-->> [33m(0.9999580855298973 + 0.9997275559443457*i - 1.99941319741859*k + 0.9997275559443457*n >= 0)  &&  ( -0.3338120404411764 + 0.6669060202205883*i - 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.9992248452764665 - 2.000371843888041*i + 1.999596689164508*k + 0.0007751547235339551*n >= 0)  &&  ( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (k + n >= 0)  &&  (1.000051147287758 + 0.2222585952320244*i - 0.2222108577634505*k - 5.114728775762467e-05*n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i - 2*k + n >= 0)  &&  (9 + 2*i - 2*k >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + i - 2*k + n >= 0)  &&  (9 + 2*i - 2*k >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [102+:26637-]|-->> [33m(0.9992248452764665 + 1.999596689164508*i - 2.000371843888041*k + 0.0007751547235339551*n >= 0)  &&  (0.9999580855298973 + 0.9997275559443457*i - 1.99941319741859*k + 0.9997275559443457*n >= 0)  &&  ( -0.3338120404411764 + 0.6669060202205883*i - 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.9992248452764665 - 2.000371843888041*i + 1.999596689164508*k + 0.0007751547235339551*n >= 0)  &&  ( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (k + n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [102+:28972-]|-->> [33m(0.9992248452764665 + 1.999596689164508*i - 2.000371843888041*k + 0.0007751547235339551*n >= 0)  &&  (0.9999580855298973 + 0.9997275559443457*i - 1.99941319741859*k + 0.9997275559443457*n >= 0)  &&  ( -0.3338120404411764 + 0.6669060202205883*i - 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.9992248452764665 - 2.000371843888041*i + 1.999596689164508*k + 0.0007751547235339551*n >= 0)  &&  ( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (k + n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,3,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [102+:30864-]|-->> [33m(0.9999475302425189 - 0.9996327116976262*i - 0.9996327116976262*k + 1.999317893152731*n >= 0)  &&  (0.9992248452764665 + 1.999596689164508*i - 2.000371843888041*k + 0.0007751547235339551*n >= 0)  &&  (0.9999580855298973 + 0.9997275559443457*i - 1.99941319741859*k + 0.9997275559443457*n >= 0)  &&  ( -0.3338120404411764 + 0.6669060202205883*i - 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.9992248452764665 - 2.000371843888041*i + 1.999596689164508*k + 0.0007751547235339551*n >= 0)  &&  ( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (k + n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [102+:32423-]|-->> [33m(0.9999475302425189 - 0.9996327116976262*i - 0.9996327116976262*k + 1.999317893152731*n >= 0)  &&  (0.9992248452764665 + 1.999596689164508*i - 2.000371843888041*k + 0.0007751547235339551*n >= 0)  &&  (0.9999580855298973 + 0.9997275559443457*i - 1.99941319741859*k + 0.9997275559443457*n >= 0)  &&  ( -0.3338120404411764 + 0.6669060202205883*i - 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (0.9992248452764665 - 2.000371843888041*i + 1.999596689164508*k + 0.0007751547235339551*n >= 0)  &&  ( -0.3338120404411764 - 0.6669060202205883*i + 0.6669060202205883*k + 1.333812040441176*n >= 0)  &&  (k + n >= 0)  &&  (0.9999735586562295 + 0.2221957808784518*i + 2.644134377041696e-05*n >= 0)  &&  (1.401013233502567 - 0.04812158802030804*i + 0.04812158802030802*k - 0.0267342155668378*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - i - k + 2*n >= 0)  &&  (1 + 2*i - 2*k >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 - i - k + 2*n >= 0)  &&  (1 + 2*i - 2*k >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - i - k + 2*n >= 0)  &&  (1 + 2*i - 2*k >= 0)  &&  (1 - 2*i + 2*k >= 0) [0m

=====================time=========================
