[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down_true_1
[  8%] Building CXX object CMakeFiles/down_true_1.dir/test/down_true_1.cpp.o
[ 16%] Building CXX object CMakeFiles/down_true_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down_true_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down_true_1.dir/src/state.cpp.o
[ 41%] Building CXX object CMakeFiles/down_true_1.dir/src/polynomial.cpp.o
[ 50%] Building CXX object CMakeFiles/down_true_1.dir/src/iif.cpp.o
[ 58%] Building CXX object CMakeFiles/down_true_1.dir/src/config.cpp.o
[ 66%] Building CXX object CMakeFiles/down_true_1.dir/src/classifier.cpp.o
[ 75%] Building CXX object CMakeFiles/down_true_1.dir/src/poly_learner.cpp.o
[ 83%] Building CXX object CMakeFiles/down_true_1.dir/src/conjunctive_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down_true_1.dir/src/instrumentation.cpp.o
Linking CXX executable down_true_1
[100%] Built target down_true_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1940-]|-->> [33m(1.000363967242948 + 0.006824385805277525*i - 0.006642402183803458*k - 0.000545950864422202*n >= 0)  &&  (1.006416044864788 + 0.005750677249180172*i + 0.004562520792737989*k - 0.006416044864787795*n >= 0)  &&  (1.014360174449527 + 0.00255291990213807*i - 0.0001063716625890862*k - 0.01436017444952664*n >= 0)  &&  (0.9946436994993685 - 0.003195520185035835*i + 0.004686762938052559*k + 0.005356300500631496*n >= 0)  &&  (1.002430318219792 - 0.008961798435482646*i - 0.001746791220475431*k + 0.008278271436166173*n >= 0)  &&  (1.020909161310307 - 0.005266010996670022*i - 0.009370401920545186*k - 0.006272748393092232*n >= 0)  &&  (0.9922105828632823 - 0.0069836153639538*i + 0.0206822455009401*k + 0.007789417136717699*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:3796-]|-->> [33m(1.028688524590164 - 0.01229508196721311*i + 0.03278688524590163*k - 0.02868852459016392*n >= 0)  &&  (1 + 0.03516115529510255*i - 0.02092925910422771*k >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0)  &&  (1.002430318219792 - 0.008961798435482646*i - 0.001746791220475431*k + 0.008278271436166173*n >= 0)  &&  (0.9922105828632823 - 0.0069836153639538*i + 0.0206822455009401*k + 0.007789417136717699*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:7048-]|-->> [33m(1.028688524590164 - 0.01229508196721311*i + 0.03278688524590163*k - 0.02868852459016392*n >= 0)  &&  (1 + 0.03516115529510255*i - 0.02092925910422771*k >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0)  &&  (1.002430318219792 - 0.008961798435482646*i - 0.001746791220475431*k + 0.008278271436166173*n >= 0)  &&  (0.9922105828632823 - 0.0069836153639538*i + 0.0206822455009401*k + 0.007789417136717699*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:9033-]|-->> [33m( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0)  &&  (1.028688524590164 - 0.01229508196721311*i + 0.03278688524590163*k - 0.02868852459016392*n >= 0)  &&  (1 + 0.03516115529510255*i - 0.02092925910422771*k >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0)  &&  (1.002430318219792 - 0.008961798435482646*i - 0.001746791220475431*k + 0.008278271436166173*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0)  &&  (0.9922105828632823 - 0.0069836153639538*i + 0.0206822455009401*k + 0.007789417136717699*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:12373-]|-->> [33m( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0)  &&  (1.028688524590164 - 0.01229508196721311*i + 0.03278688524590163*k - 0.02868852459016392*n >= 0)  &&  (1 + 0.03516115529510255*i - 0.02092925910422771*k >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0)  &&  (1.002430318219792 - 0.008961798435482646*i - 0.001746791220475431*k + 0.008278271436166173*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0)  &&  (0.9922105828632823 - 0.0069836153639538*i + 0.0206822455009401*k + 0.007789417136717699*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*i - 2*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m( -1 + 2*i - 2*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-4,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-7,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-10,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-11,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-13,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-19,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:13831-]|-->> [33m(k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0)  &&  (1.028688524590164 - 0.01229508196721311*i + 0.03278688524590163*k - 0.02868852459016392*n >= 0)  &&  (1 + 0.03516115529510255*i - 0.02092925910422771*k >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:16812-]|-->> [33m(k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0)  &&  (1.028688524590164 - 0.01229508196721311*i + 0.03278688524590163*k - 0.02868852459016392*n >= 0)  &&  (1 + 0.03516115529510255*i - 0.02092925910422771*k >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:18531-]|-->> [33m(1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0)  &&  (1.028688524590164 - 0.01229508196721311*i + 0.03278688524590163*k - 0.02868852459016392*n >= 0)  &&  (1 + 0.03516115529510255*i - 0.02092925910422771*k >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0)  &&  (1.02481568063298 + 0.00143859018162201*i + 0.01007013127135407*k - 0.02481568063297968*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:21432-]|-->> [33m(1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:23188-]|-->> [33m(1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0)  &&  (1.063907044299201 - 0.02323892519970951*i - 0.01379811183732753*k - 0.02687000726216413*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,4,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,5,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,6,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,5,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,5,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:25380-]|-->> [33m(3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:27135-]|-->> [33m(3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 - 2*k >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(3 - 2*k >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:29754-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:31566-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:33527-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (2,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,4,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,5,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,4,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,4,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,6,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:35056-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:36682-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:38106-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:39952-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:40923-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 9 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:42828-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:44330-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 10 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:45952-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:47262-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 11 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:49153-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:50307-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 12 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:52244-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:52901-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 13 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,1,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:55034-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:56334-]|-->> [33m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  (1.06993006993007 + 0.01598401598401598*i - 0.03796203796203796*k - 0.04795204795204795*n >= 0)  &&  (1.032323232323232 + 0.04040404040404041*i + 0.00404040404040404*k - 0.03232323232323232*n >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  ( -0.3330078125 - 0.666015625*i + 0.6669921875*k + 1.3330078125*n >= 0)  &&  (k + n >= 0)  &&  ( -0.3330078125 + 0.6669921875*i - 0.666015625*k + 1.3330078125*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (3 - 2*k >= 0)  &&  ( -1 - 2*i + 2*k + 4*n >= 0)  &&  (1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
