[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down_true_1
[  8%] Building CXX object CMakeFiles/down_true_1.dir/test/down_true_1.cpp.o
[ 16%] Building CXX object CMakeFiles/down_true_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down_true_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down_true_1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down_true_1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down_true_1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down_true_1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down_true_1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down_true_1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down_true_1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down_true_1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down_true_1.dir/src/instrumentation.cpp.o
Linking CXX executable down_true_1
[100%] Built target down_true_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1422-]|-->> [33m(1.017808068594042 - 0.001319116192151258*i + 0.01099263493459382*k - 0.01780806859404199*n >= 0)  &&  (0.9948690915480584 - 0.00332689041176126*i + 0.004123469806126633*k + 0.00433432905757629*n >= 0)  &&  (0.9955606472862667 + 0.01460690247744523*i - 0.007303451238722613*k + 0.004439352713733353*n >= 0)  &&  (1.00437199425395 - 0.00943101617637874*i + 0.005933420773218413*k - 0.0008743988507900818*n >= 0)  &&  (0.994939426468333 - 0.002606962122373869*i + 0.01656187701272811*k + 0.005060573531666922*n >= 0)  &&  (1.016171065820247 + 0.005479452054794521*i - 0.009622452388907451*k - 0.01202806548613431*n >= 0)  &&  (1.004036013660354 + 0.0223533064265756*i + 0.01024526544551382*k - 0.004036013660353928*n >= 0)  &&  (1.014023732470334 + 0.0442286947141316*i + 0.002157497303128371*k - 0.01402373247033441*n >= 0)  &&  (1.027972019886692 + 0.04195860793155286*i - 0.04195745172852344*k - 0.0279720198866921*n >= 0)  &&  (1.014481723890496 - 0.007480049577072778*i - 0.005305616560481854*k - 0.00169605775294092*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:5555-]|-->> [33m(1.001192961526991 + 0.01073665374291679*i + 0.03280644199224574*k - 0.001192961526990755*n >= 0)  &&  (0.9981683456831237 - 0.007409874281908251*i - 0.001248855216051952*k + 0.0104903838148364*n >= 0)  &&  (0.9955606472862667 + 0.01460690247744523*i - 0.007303451238722613*k + 0.004439352713733353*n >= 0)  &&  (1.00437199425395 - 0.00943101617637874*i + 0.005933420773218413*k - 0.0008743988507900818*n >= 0)  &&  (0.994939426468333 - 0.002606962122373869*i + 0.01656187701272811*k + 0.005060573531666922*n >= 0)  &&  (1.016171065820247 + 0.005479452054794521*i - 0.009622452388907451*k - 0.01202806548613431*n >= 0)  &&  (1.017808068594042 - 0.001319116192151258*i + 0.01099263493459382*k - 0.01780806859404199*n >= 0)  &&  (1.014023732470334 + 0.0442286947141316*i + 0.002157497303128371*k - 0.01402373247033441*n >= 0)  &&  (1.027972019886692 + 0.04195860793155286*i - 0.04195745172852344*k - 0.0279720198866921*n >= 0)  &&  (1.014481723890496 - 0.007480049577072778*i - 0.005305616560481854*k - 0.00169605775294092*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:8338-]|-->> [33m(1.002999447470203 - 0.00205225353224406*i - 0.01294498381877023*k + 0.01199778988081143*n >= 0)  &&  (1.001192961526991 + 0.01073665374291679*i + 0.03280644199224574*k - 0.001192961526990755*n >= 0)  &&  (0.9955606472862667 + 0.01460690247744523*i - 0.007303451238722613*k + 0.004439352713733353*n >= 0)  &&  (1.00437199425395 - 0.00943101617637874*i + 0.005933420773218413*k - 0.0008743988507900818*n >= 0)  &&  (0.994939426468333 - 0.002606962122373869*i + 0.01656187701272811*k + 0.005060573531666922*n >= 0)  &&  (1.016171065820247 + 0.005479452054794521*i - 0.009622452388907451*k - 0.01202806548613431*n >= 0)  &&  (0.9981683456831237 - 0.007409874281908251*i - 0.001248855216051952*k + 0.0104903838148364*n >= 0)  &&  (1.014023732470334 + 0.0442286947141316*i + 0.002157497303128371*k - 0.01402373247033441*n >= 0)  &&  (1.027972019886692 + 0.04195860793155286*i - 0.04195745172852344*k - 0.0279720198866921*n >= 0)  &&  (1.014481723890496 - 0.007480049577072778*i - 0.005305616560481854*k - 0.00169605775294092*n >= 0)  &&  (1.017808068594042 - 0.001319116192151258*i + 0.01099263493459382*k - 0.01780806859404199*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:11193-]|-->> [33m(1.022075055187638 - 0.01766004415011038*i + 0.03752759381898454*k - 0.02207505518763797*n >= 0)  &&  (1.002999447470203 - 0.00205225353224406*i - 0.01294498381877023*k + 0.01199778988081143*n >= 0)  &&  (0.9955606472862667 + 0.01460690247744523*i - 0.007303451238722613*k + 0.004439352713733353*n >= 0)  &&  (1.001192961526991 + 0.01073665374291679*i + 0.03280644199224574*k - 0.001192961526990755*n >= 0)  &&  (0.994939426468333 - 0.002606962122373869*i + 0.01656187701272811*k + 0.005060573531666922*n >= 0)  &&  (0.9981683456831237 - 0.007409874281908251*i - 0.001248855216051952*k + 0.0104903838148364*n >= 0)  &&  (1.014481723890496 - 0.007480049577072778*i - 0.005305616560481854*k - 0.00169605775294092*n >= 0)  &&  (1.014023732470334 + 0.0442286947141316*i + 0.002157497303128371*k - 0.01402373247033441*n >= 0)  &&  (1.027972019886692 + 0.04195860793155286*i - 0.04195745172852344*k - 0.0279720198866921*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:13488-]|-->> [33m(0.9716437749224635 + 0.02924235711120957*i - 0.01063358440407621*k + 0.02835622507753656*n >= 0)  &&  (1.022075055187638 - 0.01766004415011038*i + 0.03752759381898454*k - 0.02207505518763797*n >= 0)  &&  (1.002999447470203 - 0.00205225353224406*i - 0.01294498381877023*k + 0.01199778988081143*n >= 0)  &&  (1.001192961526991 + 0.01073665374291679*i + 0.03280644199224574*k - 0.001192961526990755*n >= 0)  &&  (0.994939426468333 - 0.002606962122373869*i + 0.01656187701272811*k + 0.005060573531666922*n >= 0)  &&  (0.9981683456831237 - 0.007409874281908251*i - 0.001248855216051952*k + 0.0104903838148364*n >= 0)  &&  (1.014481723890496 - 0.007480049577072778*i - 0.005305616560481854*k - 0.00169605775294092*n >= 0)  &&  (1.014023732470334 + 0.0442286947141316*i + 0.002157497303128371*k - 0.01402373247033441*n >= 0)  &&  (1.027972019886692 + 0.04195860793155286*i - 0.04195745172852344*k - 0.0279720198866921*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:14894-]|-->> [33m(0.9716437749224635 + 0.02924235711120957*i - 0.01063358440407621*k + 0.02835622507753656*n >= 0)  &&  (1.022075055187638 - 0.01766004415011038*i + 0.03752759381898454*k - 0.02207505518763797*n >= 0)  &&  (1.002999447470203 - 0.00205225353224406*i - 0.01294498381877023*k + 0.01199778988081143*n >= 0)  &&  (1.001192961526991 + 0.01073665374291679*i + 0.03280644199224574*k - 0.001192961526990755*n >= 0)  &&  (0.994939426468333 - 0.002606962122373869*i + 0.01656187701272811*k + 0.005060573531666922*n >= 0)  &&  (0.9981683456831237 - 0.007409874281908251*i - 0.001248855216051952*k + 0.0104903838148364*n >= 0)  &&  (1.014481723890496 - 0.007480049577072778*i - 0.005305616560481854*k - 0.00169605775294092*n >= 0)  &&  (1.014023732470334 + 0.0442286947141316*i + 0.002157497303128371*k - 0.01402373247033441*n >= 0)  &&  (1.027972019886692 + 0.04195860793155286*i - 0.04195745172852344*k - 0.0279720198866921*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1097 + 33*i - 12*k + 32*n >= 0)  &&  (463 - 8*i + 17*k - 10*n >= 0)  &&  (74 + 3*i - 3*k - 2*n >= 0)  &&  (95 + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1097 + 33*i - 12*k + 32*n >= 0)  &&  (463 - 8*i + 17*k - 10*n >= 0)  &&  (74 + 3*i - 3*k - 2*n >= 0)  &&  (95 + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,47) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,48) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [414+:16697-]|-->> [33m(3.235051437182122 - 0.04582321604990759*i + 0.04582571854353919*k - 0.04138984142929855*n >= 0)  &&  (4.88688946015424 - 0.04113110539845757*i + 0.02313624678663238*k - 0.05398457583547558*n >= 0)  &&  (1.000017084022112 - 0.02266927787795689*i + 0.0481722154906584*k - 1.708402211199334e-05*n >= 0)  &&  (0.9999885760795217 + 0.08694329997073275*i - 0.08694649118885237*k + 1.142392047814855e-05*n >= 0)  &&  (1.014768220976344 - 0.01367427868179954*i - 0.004922740325447832*k + 0.01832353343361138*n >= 0)  &&  (4.247258577997878 - 0.0318358684117439*i - 0.01485673859214715*k - 0.01344181110718076*n >= 0)  &&  (0.9999916190373778 + 0.04736938521308211*i + 0.00338352751522015*k + 8.380962622268895e-06*n >= 0)  &&  (0.9999904521634215 + 0.0106058415056744*i + 0.03368914360625985*k + 9.547836578504762e-06*n >= 0)  &&  (3.379749158372297 + 0.0335839866606906*i - 0.03356942874311321*k - 0.04406942885874625*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [414+:18369-]|-->> [33m(6.559913845949236 - 0.01083338182725886*i + 0.01084269554486292*k - 0.1029613675175785*n >= 0)  &&  (5.653061224489795 + 0.018140589569161*i + 0.036281179138322*k - 0.08616780045351474*n >= 0)  &&  (2.640287769784172 + 0.03037569944044763*i + 0.03677058353317345*k - 0.03037569944044763*n >= 0)  &&  (3.235051437182122 - 0.04582321604990759*i + 0.04582571854353919*k - 0.04138984142929855*n >= 0)  &&  (4.88688946015424 - 0.04113110539845757*i + 0.02313624678663238*k - 0.05398457583547558*n >= 0)  &&  (1.000017084022112 - 0.02266927787795689*i + 0.0481722154906584*k - 1.708402211199334e-05*n >= 0)  &&  (0.9999916190373778 + 0.04736938521308211*i + 0.00338352751522015*k + 8.380962622268895e-06*n >= 0)  &&  (0.9999885760795217 + 0.08694329997073275*i - 0.08694649118885237*k + 1.142392047814855e-05*n >= 0)  &&  (1.014768220976344 - 0.01367427868179954*i - 0.004922740325447832*k + 0.01832353343361138*n >= 0)  &&  (4.247258577997878 - 0.0318358684117439*i - 0.01485673859214715*k - 0.01344181110718076*n >= 0)  &&  (0.9999904521634215 + 0.0106058415056744*i + 0.03368914360625985*k + 9.547836578504762e-06*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [414+:20877-]|-->> [33m(1.000008787144232 + 0.9996822457177869*i - 0.9996736212984493*k - 8.787144231803268e-06*n >= 0)  &&  (0.999981456860926 + 0.9997033097748307*i + 1.854313907401206e-05*n >= 0)  &&  (0.9999819954609208 + 0.3998847709498934*i + 0.1999423854749467*k + 1.800453907918609e-05*n >= 0)  &&  (0.9999874634057232 + 0.1384337650834485*i + 0.1076707061760155*k + 1.253659427680187e-05*n >= 0)  &&  (0.9999920947126965 - 0.04001802142313588*i + 0.02491345190855488*k + 0.01511247480188457*n >= 0)  &&  (6.559913845949236 - 0.01083338182725886*i + 0.01084269554486292*k - 0.1029613675175785*n >= 0)  &&  (5.653061224489795 + 0.018140589569161*i + 0.036281179138322*k - 0.08616780045351474*n >= 0)  &&  (3.235051437182122 - 0.04582321604990759*i + 0.04582571854353919*k - 0.04138984142929855*n >= 0)  &&  (4.88688946015424 - 0.04113110539845757*i + 0.02313624678663238*k - 0.05398457583547558*n >= 0)  &&  (1.000017084022112 - 0.02266927787795689*i + 0.0481722154906584*k - 1.708402211199334e-05*n >= 0)  &&  (1.014768220976344 - 0.01367427868179954*i - 0.004922740325447832*k + 0.01832353343361138*n >= 0)  &&  (4.247258577997878 - 0.0318358684117439*i - 0.01485673859214715*k - 0.01344181110718076*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [414+:22457-]|-->> [33m(1.000008787144232 + 0.9996822457177869*i - 0.9996736212984493*k - 8.787144231803268e-06*n >= 0)  &&  (0.999981456860926 + 0.9997033097748307*i + 1.854313907401206e-05*n >= 0)  &&  (0.9999819954609208 + 0.3998847709498934*i + 0.1999423854749467*k + 1.800453907918609e-05*n >= 0)  &&  (0.9999874634057232 + 0.1384337650834485*i + 0.1076707061760155*k + 1.253659427680187e-05*n >= 0)  &&  (0.9999920947126965 - 0.04001802142313588*i + 0.02491345190855488*k + 0.01511247480188457*n >= 0)  &&  (6.559913845949236 - 0.01083338182725886*i + 0.01084269554486292*k - 0.1029613675175785*n >= 0)  &&  (5.653061224489795 + 0.018140589569161*i + 0.036281179138322*k - 0.08616780045351474*n >= 0)  &&  (3.235051437182122 - 0.04582321604990759*i + 0.04582571854353919*k - 0.04138984142929855*n >= 0)  &&  (4.88688946015424 - 0.04113110539845757*i + 0.02313624678663238*k - 0.05398457583547558*n >= 0)  &&  (1.000017084022112 - 0.02266927787795689*i + 0.0481722154906584*k - 1.708402211199334e-05*n >= 0)  &&  (1.014768220976344 - 0.01367427868179954*i - 0.004922740325447832*k + 0.01832353343361138*n >= 0)  &&  (4.247258577997878 - 0.0318358684117439*i - 0.01485673859214715*k - 0.01344181110718076*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i - k >= 0)  &&  (64 - n >= 0)  &&  (728 - 29*i + 18*k + 11*n >= 0)  &&  (65 + 9*i + 7*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + i - k >= 0)  &&  (64 - n >= 0)  &&  (728 - 29*i + 18*k + 11*n >= 0)  &&  (65 + 9*i + 7*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,65) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,66) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,67) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,68) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,72) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [970+:24598-]|-->> [33m(0.9999861004122614 + 0.9996553166599846*i - 0.9996497039529906*k + 1.389958773856392e-05*n >= 0)  &&  (0.9999859980535124 + 0.9996499513377696*i + 1.400194648759623e-05*n >= 0)  &&  (0.9999860123077502 + 0.3998601230774977*i + 0.1999300615387489*k + 1.398769224980612e-05*n >= 0)  &&  (0.9999898624936674 + 0.15995944997467*i + 0.1199695874810025*k + 1.013750633255261e-05*n >= 0)  &&  (17 - 0.4444444444444444*i + 0.4444444444444444*k - 0.2222222222222214*n >= 0)  &&  (6.333333333333314 + 0.07407407407407347*i + 0.3703703703703674*k - 0.07407407407407351*n >= 0)  &&  (2.051094890510953 + 0.08759124087591263*i + 0.1459854014598544*k - 0.01459854014598538*n >= 0)  &&  (0.9999985557263588 - 0.0190464361187319*i - 0.004761247961272657*k + 0.02380912835364583*n >= 0)  &&  (2.34330790165243 - 0.07774281876989164*i + 0.07773263281025039*k - 0.01865705418961705*n >= 0)  &&  (7.040595399188092 - 0.07307171853856564*i - 0.008119079837618393*k - 0.002706359945872788*n >= 0)  &&  (0.9999980107324334 + 0.007052910755539512*i + 0.04433258189196265*k + 1.989267566574349e-06*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [970+:26624-]|-->> [33m(1.00001115265995 - 0.04597547319632878*i + 0.114938682990822*k - 1.115265994965087e-05*n >= 0)  &&  (0.9999861004122614 + 0.9996553166599846*i - 0.9996497039529906*k + 1.389958773856392e-05*n >= 0)  &&  (0.9999859980535124 + 0.9996499513377696*i + 1.400194648759623e-05*n >= 0)  &&  (0.9999860123077502 + 0.3998601230774977*i + 0.1999300615387489*k + 1.398769224980612e-05*n >= 0)  &&  (17 - 0.4444444444444444*i + 0.4444444444444444*k - 0.2222222222222214*n >= 0)  &&  (6.333333333333314 + 0.07407407407407347*i + 0.3703703703703674*k - 0.07407407407407351*n >= 0)  &&  (0.9999985557263588 - 0.0190464361187319*i - 0.004761247961272657*k + 0.02380912835364583*n >= 0)  &&  (2.34330790165243 - 0.07774281876989164*i + 0.07773263281025039*k - 0.01865705418961705*n >= 0)  &&  (7.040595399188092 - 0.07307171853856564*i - 0.008119079837618393*k - 0.002706359945872788*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [970+:28760-]|-->> [33m(1.00001115265995 - 0.04597547319632878*i + 0.114938682990822*k - 1.115265994965087e-05*n >= 0)  &&  (0.9999861004122614 + 0.9996553166599846*i - 0.9996497039529906*k + 1.389958773856392e-05*n >= 0)  &&  (0.9999859980535124 + 0.9996499513377696*i + 1.400194648759623e-05*n >= 0)  &&  (0.9999860123077502 + 0.3998601230774977*i + 0.1999300615387489*k + 1.398769224980612e-05*n >= 0)  &&  (17 - 0.4444444444444444*i + 0.4444444444444444*k - 0.2222222222222214*n >= 0)  &&  (6.333333333333314 + 0.07407407407407347*i + 0.3703703703703674*k - 0.07407407407407351*n >= 0)  &&  (0.9999985557263588 - 0.0190464361187319*i - 0.004761247961272657*k + 0.02380912835364583*n >= 0)  &&  (2.34330790165243 - 0.07774281876989164*i + 0.07773263281025039*k - 0.01865705418961705*n >= 0)  &&  (7.040595399188092 - 0.07307171853856564*i - 0.008119079837618393*k - 0.002706359945872788*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(87 - 4*i + 10*k >= 0)  &&  (1 + i - k >= 0)  &&  (210 - 4*i + 5*n >= 0)  &&  (77 - 2*i + 2*k - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(87 - 4*i + 10*k >= 0)  &&  (1 + i - k >= 0)  &&  (210 - 4*i + 5*n >= 0)  &&  (77 - 2*i + 2*k - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,78) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,84) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,85) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1630+:30826-]|-->> [33m(0.9999883247241002 + 0.9996354137431913*i - 0.9996290438754658*k + 1.167527589984729e-05*n >= 0)  &&  (0.9999882046492843 + 0.9996284464524113*i + 1.179535071571536e-05*n >= 0)  &&  (1.000009445026336 - 0.499784735832968*i + 0.4997961993268992*k - 9.445026336152296e-06*n >= 0)  &&  (1.000010867378059 - 0.1999217548779672*i + 0.5997652646339017*k - 1.086737805877647e-05*n >= 0)  &&  (10.72820158889196 + 0.01346797972210693*i - 0.0134612980326113*k - 0.1144494304575524*n >= 0)  &&  (1.000002513206827 - 0.07961053488972536*i + 0.03502742901220213*k + 0.04458059267069608*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1630+:32618-]|-->> [33m(0.9999900530260522 - 0.230676392345718*i - 0.07688992034325093*k + 0.3075762596629167*n >= 0)  &&  (0.9999883247241002 + 0.9996354137431913*i - 0.9996290438754658*k + 1.167527589984729e-05*n >= 0)  &&  (0.9999882046492843 + 0.9996284464524113*i + 1.179535071571536e-05*n >= 0)  &&  (1.000009445026336 - 0.499784735832968*i + 0.4997961993268992*k - 9.445026336152296e-06*n >= 0)  &&  (1.000010867378059 - 0.1999217548779672*i + 0.5997652646339017*k - 1.086737805877647e-05*n >= 0)  &&  (10.72820158889196 + 0.01346797972210693*i - 0.0134612980326113*k - 0.1144494304575524*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1630+:35124-]|-->> [33m(0.9999900530260522 - 0.230676392345718*i - 0.07688992034325093*k + 0.3075762596629167*n >= 0)  &&  (0.9999883247241002 + 0.9996354137431913*i - 0.9996290438754658*k + 1.167527589984729e-05*n >= 0)  &&  (0.9999882046492843 + 0.9996284464524113*i + 1.179535071571536e-05*n >= 0)  &&  (1.000009445026336 - 0.499784735832968*i + 0.4997961993268992*k - 9.445026336152296e-06*n >= 0)  &&  (1.000010867378059 - 0.1999217548779672*i + 0.5997652646339017*k - 1.086737805877647e-05*n >= 0)  &&  (10.72820158889196 + 0.01346797972210693*i - 0.0134612980326113*k - 0.1144494304575524*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [1630+:36566-]|-->> [33m(0.9999884198443283 + 1.999258153573456*i - 1.999258870037415*k + 1.158015567170878e-05*n >= 0)  &&  (0.9999881277037943 + 1.999240173042981*i + 1.187229620569497e-05*n >= 0)  &&  (0.9999900530260522 - 0.230676392345718*i - 0.07688992034325093*k + 0.3075762596629167*n >= 0)  &&  (1.000009445026336 - 0.499784735832968*i + 0.4997961993268992*k - 9.445026336152296e-06*n >= 0)  &&  (1.000010867378059 - 0.1999217548779672*i + 0.5997652646339017*k - 1.086737805877647e-05*n >= 0)  &&  (10.72820158889196 + 0.01346797972210693*i - 0.0134612980326113*k - 0.1144494304575524*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [1630+:38636-]|-->> [33m(0.9999884198443283 + 1.999258153573456*i - 1.999258870037415*k + 1.158015567170878e-05*n >= 0)  &&  (0.9999881277037943 + 1.999240173042981*i + 1.187229620569497e-05*n >= 0)  &&  (0.9999900530260522 - 0.230676392345718*i - 0.07688992034325093*k + 0.3075762596629167*n >= 0)  &&  (1.000009445026336 - 0.499784735832968*i + 0.4997961993268992*k - 9.445026336152296e-06*n >= 0)  &&  (1.000010867378059 - 0.1999217548779672*i + 0.5997652646339017*k - 1.086737805877647e-05*n >= 0)  &&  (10.72820158889196 + 0.01346797972210693*i - 0.0134612980326113*k - 0.1144494304575524*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (94 - n >= 0)  &&  (13 - 3*i - k + 4*n >= 0)  &&  (2 - i + k >= 0)  &&  (5 - i + 3*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (94 - n >= 0)  &&  (13 - 3*i - k + 4*n >= 0)  &&  (2 - i + k >= 0)  &&  (5 - i + 3*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,95) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,96) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,97) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,98) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,99) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,100) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,101) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,102) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2426+:40522-]|-->> [33m(0.9999915213880115 + 1.999314539162222*i - 1.99931323242954*k + 8.478611988493867e-06*n >= 0)  &&  (0.9999901042241248 + 1.999198442154159*i + 9.895775875179424e-06*n >= 0)  &&  (1.000009809599391 - 0.999607718844949*i + 0.9996115618543158*k - 9.809599390564472e-06*n >= 0)  &&  (0.9999920309782595 - 0.2306792216903409*i - 0.07689130300306013*k + 0.3075784937151418*n >= 0)  &&  (7.192706897972649 - 0.02218064806084875*i + 0.02218640739219813*k - 0.06071281272522205*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2426+:41954-]|-->> [33m(0.9999915213880115 + 1.999314539162222*i - 1.99931323242954*k + 8.478611988493867e-06*n >= 0)  &&  (0.9999901042241248 + 1.999198442154159*i + 9.895775875179424e-06*n >= 0)  &&  (1.000009809599391 - 0.999607718844949*i + 0.9996115618543158*k - 9.809599390564472e-06*n >= 0)  &&  (0.9999920309782595 - 0.2306792216903409*i - 0.07689130300306013*k + 0.3075784937151418*n >= 0)  &&  (7.192706897972649 - 0.02218064806084875*i + 0.02218640739219813*k - 0.06071281272522205*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*k >= 0)  &&  (1 + 2*i >= 0)  &&  (1 - i + k >= 0)  &&  (13 - 3*i - k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + 2*i - 2*k >= 0)  &&  (1 + 2*i >= 0)  &&  (1 - i + k >= 0)  &&  (13 - 3*i - k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
