[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 23
[  8%] Building CXX object CMakeFiles/23.dir/test/23.cpp.o
[ 16%] Building CXX object CMakeFiles/23.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/23.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/23.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/23.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/23.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/23.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/23.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/23.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/23.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/23.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/23.dir/src/instrumentation.cpp.o
Linking CXX executable 23
[100%] Built target 23
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:903-]|-->> [33m(1 + 0.006807936459259714*n - 0.005397282958692386*sum + 0.006869269220153945*i >= 0)  &&  (1 + 0.001629142711007132*n + 0.005114750371766578*sum + 0.003012019663373651*i >= 0)  &&  (1 - 0.001367755171824244*n + 0.003487775688151821*sum + 0.01107881689177637*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:2316-]|-->> [33m(1 + 0.006807936459259714*n - 0.005397282958692386*sum + 0.006869269220153945*i >= 0)  &&  (1 + 0.003911391928993192*n + 0.01158373763586446*sum - 0.0009778479822482981*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1+:4249-]|-->> [33m(1 + 0.006807936459259714*n - 0.005397282958692386*sum + 0.006869269220153945*i >= 0)  &&  (1 - 0.003756796836381611*n + 0.01878398418190806*sum + 0.005338606030647553*i >= 0)  &&  (1 + 0.003737735555209469*n + 0.01105746768416135*sum - 0.0132378134247002*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.003911391928993192*n + 0.01158373763586446*sum - 0.0009778479822482981*i >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [1+:5339-]|-->> [33m(1 + 0.006807936459259714*n - 0.005397282958692386*sum + 0.006869269220153945*i >= 0)  &&  (1 - 0.01739130434782609*sum + 0.03478260869565217*i >= 0)  &&  (1 - 0.003756796836381611*n + 0.01878398418190806*sum + 0.005338606030647553*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.003911391928993192*n + 0.01158373763586446*sum - 0.0009778479822482981*i >= 0)  &&  (1 + 0.003737735555209469*n + 0.01105746768416135*sum - 0.0132378134247002*i >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [1+:5600-]|-->> [33m(1 + 0.006807936459259714*n - 0.005397282958692386*sum + 0.006869269220153945*i >= 0)  &&  (1 - 0.01739130434782609*sum + 0.03478260869565217*i >= 0)  &&  (1 - 0.003756796836381611*n + 0.01878398418190806*sum + 0.005338606030647553*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.003911391928993192*n + 0.01158373763586446*sum - 0.0009778479822482981*i >= 0)  &&  (1 + 0.003737735555209469*n + 0.01105746768416135*sum - 0.0132378134247002*i >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [1+:8705-]|-->> [33m(1 + 0.006807936459259714*n - 0.005397282958692386*sum + 0.006869269220153945*i >= 0)  &&  (1 - 0.01739130434782609*sum + 0.03478260869565217*i >= 0)  &&  (1 - 0.003756796836381611*n + 0.01878398418190806*sum + 0.005338606030647553*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.003911391928993192*n + 0.01158373763586446*sum - 0.0009778479822482981*i >= 0)  &&  (1 + 0.003737735555209469*n + 0.01105746768416135*sum - 0.0132378134247002*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(452 + 5*sum - 6*i >= 0)  &&  (58 - sum + 2*i >= 0)  &&  (53 + sum >= 0)  &&  (841 + 15*n + 16*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(452 + 5*sum - 6*i >= 0)  &&  (58 - sum + 2*i >= 0)  &&  (53 + sum >= 0)  &&  (841 + 15*n + 16*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (4,64,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (5,66,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (5,64,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (6,64,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (7,64,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (5,65,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (6,65,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (6,66,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:9610-]|-->> [33m(1 + 0.006807936459259714*n - 0.005397282958692386*sum + 0.006869269220153945*i >= 0)  &&  (1 - 0.01739130434782609*sum + 0.03478260869565217*i >= 0)  &&  (1 - 0.003756796836381611*n + 0.01878398418190806*sum + 0.005338606030647553*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.003911391928993192*n + 0.01158373763586446*sum - 0.0009778479822482981*i >= 0)  &&  (1 + 0.003737735555209469*n + 0.01105746768416135*sum - 0.0132378134247002*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:11984-]|-->> [33m(1 - 0.003552397868561279*n + 0.07460035523978686*sum + 0.03907637655417407*i >= 0)  &&  (1 - 0.01075268817204301*n - 0.04301075268817205*sum + 0.1397849462365592*i >= 0)  &&  (1 - 0.003838771593090211*n - 0.0690978886756238*sum + 0.05374280230326296*i >= 0)  &&  (1 - 0.0005717552887364208*n + 0.002287021154945683*sum - 0.03373356203544883*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.003737735555209469*n + 0.01105746768416135*sum - 0.0132378134247002*i >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1+:13080-]|-->> [33m(1 - 0.003552397868561279*n + 0.07460035523978686*sum + 0.03907637655417407*i >= 0)  &&  (1 - 0.01075268817204301*n - 0.04301075268817205*sum + 0.1397849462365592*i >= 0)  &&  (1 - 0.003838771593090211*n - 0.0690978886756238*sum + 0.05374280230326296*i >= 0)  &&  (1 - 0.0005717552887364208*n + 0.002287021154945683*sum - 0.03373356203544883*i >= 0)  &&  (1 + 0.01241646565700502*n + 0.001898058444382933*sum + 0.0006326861481276444*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 - 0.007852261160389704*n + 0.002326595899374727*sum + 0.02268431001890359*i >= 0)  &&  (1 + 0.003737735555209469*n + 0.01105746768416135*sum - 0.0132378134247002*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(256 + 19*sum + 10*i >= 0)  &&  (93 - n - 4*sum + 13*i >= 0)  &&  (59 - 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(256 + 19*sum + 10*i >= 0)  &&  (93 - n - 4*sum + 13*i >= 0)  &&  (59 - 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (94,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (95,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (96,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (97,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (98,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (99,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (100,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (101,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:14604-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:15953-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(504 + 9*sum - 13*i >= 0)  &&  (22 + sum >= 0)  &&  (17 + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(504 + 9*sum - 13*i >= 0)  &&  (22 + sum >= 0)  &&  (17 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-22,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-21,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-22,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-22,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-22,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-20,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-22,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-22,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:16838-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.004484304932735426*n + 0.09417040358744394*sum + 0.008968609865470852*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:18900-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.004484304932735426*n + 0.09417040358744394*sum + 0.008968609865470852*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(504 + 9*sum - 13*i >= 0)  &&  (32 + 3*sum >= 0)  &&  (17 + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(504 + 9*sum - 13*i >= 0)  &&  (32 + 3*sum >= 0)  &&  (17 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-10,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-9,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-10,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-10,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-10,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-8,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-10,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-10,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:20535-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:22560-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.01783010933557611*n + 0.01883936080740118*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(504 + 9*sum - 13*i >= 0)  &&  (51 + 10*sum + i >= 0)  &&  (17 + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(504 + 9*sum - 13*i >= 0)  &&  (51 + 10*sum + i >= 0)  &&  (17 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-7,0,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-4,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-5,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-5,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-3,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-4,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,1,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:25063-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:27008-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [789+:27535-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(504 + 9*sum - 13*i >= 0)  &&  (57 + 7*n + 8*i >= 0)  &&  (51 + 10*sum + i >= 0)  &&  (17 + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(504 + 9*sum - 13*i >= 0)  &&  (57 + 7*n + 8*i >= 0)  &&  (51 + 10*sum + i >= 0)  &&  (17 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-5,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-4,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-5,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-5,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-5,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:28031-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:28915-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 + 0.0003640876980252408*n + 0.01784400530629454*sum - 0.02578458510198796*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(17 + 2*i >= 0)  &&  (144 + 49*sum - 48*i >= 0)  &&  (5 + 2*sum + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(17 + 2*i >= 0)  &&  (144 + 49*sum - 48*i >= 0)  &&  (5 + 2*sum + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (1,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (4,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (3,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:29176-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.01262746299844542*n + 0.4191367020715109*sum - 0.8028192013454607*i >= 0)  &&  (1 + 4.434572686506932e-06*n + 0.9997782713656752*sum + 2.530856864723601e-05*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:30400-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.01262746299844542*n + 0.4191367020715109*sum - 0.8028192013454607*i >= 0)  &&  (1 + 4.434572686506932e-06*n + 0.9997782713656752*sum + 2.530856864723601e-05*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(17 + 2*i >= 0)  &&  (79 + n + 33*sum - 64*i >= 0)  &&  (1 + sum >= 0)  &&  (5 + 2*sum + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(17 + 2*i >= 0)  &&  (79 + n + 33*sum - 64*i >= 0)  &&  (1 + sum >= 0)  &&  (5 + 2*sum + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 9 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (17,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (15,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (14,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (13,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (12,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (16,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (11,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (10,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:31409-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.01262746299844542*n + 0.4191367020715109*sum - 0.8028192013454607*i >= 0)  &&  (1 + 4.434572686506932e-06*n + 0.9997782713656752*sum + 2.530856864723601e-05*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:32751-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.01262746299844542*n + 0.4191367020715109*sum - 0.8028192013454607*i >= 0)  &&  (1 + 4.434572686506932e-06*n + 0.9997782713656752*sum + 2.530856864723601e-05*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(17 + 2*i >= 0)  &&  (79 + n + 33*sum - 64*i >= 0)  &&  (1 + sum >= 0)  &&  (5 + 2*sum + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(17 + 2*i >= 0)  &&  (79 + n + 33*sum - 64*i >= 0)  &&  (1 + sum >= 0)  &&  (5 + 2*sum + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 10 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (17,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (15,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (14,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (13,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (12,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (16,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (11,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (10,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [789+:34546-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.01262746299844542*n + 0.4191367020715109*sum - 0.8028192013454607*i >= 0)  &&  (1 + 4.434572686506932e-06*n + 0.9997782713656752*sum + 2.530856864723601e-05*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [789+:35160-]|-->> [33m(1 + 0.008787999415193801*n - 0.0003529853555474657*sum + 0.008865997456363583*i >= 0)  &&  (1 + 0.01262746299844542*n + 0.4191367020715109*sum - 0.8028192013454607*i >= 0)  &&  (1 + 4.434572686506932e-06*n + 0.9997782713656752*sum + 2.530856864723601e-05*i >= 0)  &&  (1 + 0.004231102836954452*n + 0.004442657978802175*sum - 0.006854386595866213*i >= 0)  &&  (1 + 0.00354738242692304*n + 0.3368862937712682*sum - 0.333264658918096*i >= 0)  &&  (1 + 7.1754646979727e-07*n + 0.3999856490706042*sum + 0.1999928245353021*i >= 0)  &&  (1 + 0.1238859036110952*n + 0.1415838898412516*i >= 0)  &&  (1 + 3.796106181586768e-07*n + 0.1980160058740164*sum + 0.01980160058740164*i >= 0)  &&  (1 + 2.168404344971009e-18*n + 0.0194843834715389*sum + 0.005537666881384739*i >= 0)  &&  (1 - 1.301042606982605e-18*n + 0.04552805592464765*sum + 0.009756011983853067*i >= 0)  &&  (1 + 9.860251582556427e-06*n - 0.002354880746758437*sum + 0.1177439397116696*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(17 + 2*i >= 0)  &&  (79 + n + 33*sum - 64*i >= 0)  &&  (1 + sum >= 0)  &&  (5 + 2*sum + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(17 + 2*i >= 0)  &&  (79 + n + 33*sum - 64*i >= 0)  &&  (1 + sum >= 0)  &&  (5 + 2*sum + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 