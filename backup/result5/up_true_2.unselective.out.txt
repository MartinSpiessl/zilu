[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2192-]|-->> [33m(1.026945462384135 - 0.004095710282388446*j - 0.01853847812028454*k - 0.008406984263849967*n >= 0)  &&  (1.008286898128304 + 0.01143020431490213*j - 0.0005715102157451065*k - 0.007715387912558937*n >= 0)  &&  (1.006349664477957 + 0.0053394905837362*j + 0.01111191283642398*k - 0.01168915506169276*n >= 0)  &&  (1.017966734857245 - 0.0005336653917993418*j - 0.006137152005692431*k - 0.01182958285155208*n >= 0)  &&  (0.9943568255037796 - 0.002821587248110168*j - 0.002147775367964456*k + 0.008464761744330505*n >= 0)  &&  (1.027606901725431 - 0.01500375093773443*j + 0.01470367591897975*k - 0.01260315078769692*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:3733-]|-->> [33m(1.00168776371308 + 0.006853343562204321*j - 0.006035033883135148*k + 0.00434727017005498*n >= 0)  &&  (1.008286898128304 + 0.01143020431490213*j - 0.0005715102157451065*k - 0.007715387912558937*n >= 0)  &&  (1.006349664477957 + 0.0053394905837362*j + 0.01111191283642398*k - 0.01168915506169276*n >= 0)  &&  (1.017966734857245 - 0.0005336653917993418*j - 0.006137152005692431*k - 0.01182958285155208*n >= 0)  &&  (0.9943568255037796 - 0.002821587248110168*j - 0.002147775367964456*k + 0.008464761744330505*n >= 0)  &&  (1.027606901725431 - 0.01500375093773443*j + 0.01470367591897975*k - 0.01260315078769692*n >= 0)  &&  (1.026945462384135 - 0.004095710282388446*j - 0.01853847812028454*k - 0.008406984263849967*n >= 0)  &&  (0.9909989237843656 + 0.0003913511398101947*j + 0.01780647686136386*k + 0.008609725075824285*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:6894-]|-->> [33m(0.9853172522286313 + 0.03041426324069219*j + 0.03041426324069219*k - 0.01573151546932355*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398167*j + 0.01036269430051814*k + 0.0191311279394181*n >= 0)  &&  (1.034914017717561 - 0.003126628452318916*j + 0.004689942678478374*k - 0.03178738926524231*n >= 0)  &&  (1.030419468459814 + 0.01184758245276977*j - 0.01088696765930195*k - 0.01953250080051233*n >= 0)  &&  (0.9943568255037796 - 0.002821587248110168*j - 0.002147775367964456*k + 0.008464761744330505*n >= 0)  &&  (1.027606901725431 - 0.01500375093773443*j + 0.01470367591897975*k - 0.01260315078769692*n >= 0)  &&  (1.026945462384135 - 0.004095710282388446*j - 0.01853847812028454*k - 0.008406984263849967*n >= 0)  &&  (0.9909989237843656 + 0.0003913511398101947*j + 0.01780647686136386*k + 0.008609725075824285*n >= 0)  &&  (1.00168776371308 + 0.006853343562204321*j - 0.006035033883135148*k + 0.00434727017005498*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:8276-]|-->> [33m(0.9853172522286313 + 0.03041426324069219*j + 0.03041426324069219*k - 0.01573151546932355*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398167*j + 0.01036269430051814*k + 0.0191311279394181*n >= 0)  &&  (1.034914017717561 - 0.003126628452318916*j + 0.004689942678478374*k - 0.03178738926524231*n >= 0)  &&  (1.030419468459814 + 0.01184758245276977*j - 0.01088696765930195*k - 0.01953250080051233*n >= 0)  &&  (0.9943568255037796 - 0.002821587248110168*j - 0.002147775367964456*k + 0.008464761744330505*n >= 0)  &&  (1.027606901725431 - 0.01500375093773443*j + 0.01470367591897975*k - 0.01260315078769692*n >= 0)  &&  (1.026945462384135 - 0.004095710282388446*j - 0.01853847812028454*k - 0.008406984263849967*n >= 0)  &&  (0.9909989237843656 + 0.0003913511398101947*j + 0.01780647686136386*k + 0.008609725075824285*n >= 0)  &&  (1.00168776371308 + 0.006853343562204321*j - 0.006035033883135148*k + 0.00434727017005498*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(752 + 23*j + 23*k - 12*n >= 0)  &&  (2038 - 30*j + 29*k - 25*n >= 0)  &&  (55 - k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(752 + 23*j + 23*k - 12*n >= 0)  &&  (2038 - 30*j + 29*k - 25*n >= 0)  &&  (55 - k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,56,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,57,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,58,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,59,59) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,60,60) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,61,61) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,62,62) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,63,63) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [486+:10121-]|-->> [33m(0.9999952771283147 + 0.03436301147381525*j + 0.08246556009113425*k - 0.03435828860212996*n >= 0)  &&  (0.9999922126286948 + 0.07988596952232146*j + 0.04244331499438592*k - 0.04243552762308064*n >= 0)  &&  (0.9999955988671264 + 0.06060112600253568*j + 2.200566436787177e-06*k + 2.200566436787177e-06*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398166*j + 0.01036269430051813*k + 0.01913112793941809*n >= 0)  &&  (8.634056795537077 + 0.0605839041124272*j + 0.06059929704484612*k - 0.1817748017359111*n >= 0)  &&  (3.085325487311512 - 0.006987863184994485*j + 0.002206693637366679*k - 0.0261125413755057*n >= 0)  &&  (0.9999893499877408 - 0.03030276376939915*j - 0.03030049017877606*k + 0.0303111401910354*n >= 0)  &&  (1.000010624903054 - 0.003292630584629176*j + 0.04026964713050443*k + 0.003282005681575627*n >= 0)  &&  (2.043591979075851 - 0.0008718395815170012*j - 0.03661726242371405*k + 0.02005231037489103*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [486+:11586-]|-->> [33m(0.9999952771283147 + 0.03436301147381525*j + 0.08246556009113425*k - 0.03435828860212996*n >= 0)  &&  (0.9999922126286948 + 0.07988596952232146*j + 0.04244331499438592*k - 0.04243552762308064*n >= 0)  &&  (0.9999955988671264 + 0.06060112600253568*j + 2.200566436787177e-06*k + 2.200566436787177e-06*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398166*j + 0.01036269430051813*k + 0.01913112793941809*n >= 0)  &&  (8.634056795537077 + 0.0605839041124272*j + 0.06059929704484612*k - 0.1817748017359111*n >= 0)  &&  (3.085325487311512 - 0.006987863184994485*j + 0.002206693637366679*k - 0.0261125413755057*n >= 0)  &&  (0.9999893499877408 - 0.03030276376939915*j - 0.03030049017877606*k + 0.0303111401910354*n >= 0)  &&  (1.000010624903054 - 0.003292630584629176*j + 0.04026964713050443*k + 0.003282005681575627*n >= 0)  &&  (2.043591979075851 - 0.0008718395815170012*j - 0.03661726242371405*k + 0.02005231037489103*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(146 + 5*j + 12*k - 5*n >= 0)  &&  (189 + 15*j + 8*k - 8*n >= 0)  &&  (33 - j - k + n >= 0)  &&  (95 - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(146 + 5*j + 12*k - 5*n >= 0)  &&  (189 + 15*j + 8*k - 8*n >= 0)  &&  (33 - j - k + n >= 0)  &&  (95 - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,48,48) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,49,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,50,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,51,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,52,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,53,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,54,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,55,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [906+:13643-]|-->> [33m(0.9999847841492473 + 0.03436023498107231*j + 0.08244630493367032*k - 0.03434501913031962*n >= 0)  &&  (0.9999904435096182 + 0.07988275374532357*j + 0.04244249117239401*k - 0.04243293468201227*n >= 0)  &&  (0.9999952020387212 + 0.0606006810737177*j + 2.398980639396753e-06*k + 2.398980639396753e-06*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398167*j + 0.01036269430051814*k + 0.0191311279394181*n >= 0)  &&  (8.634005545828529 + 0.06058341187480687*j + 0.06059914678283573*k - 0.1817738379864635*n >= 0)  &&  (3.085325487311512 - 0.006987863184994485*j + 0.002206693637366679*k - 0.0261125413755057*n >= 0)  &&  (1.00202894781704 - 0.03032140033995411*j - 0.0303167159005497*k + 0.03028451037964427*n >= 0)  &&  (0.999984107543053 - 0.003279992534866195*j + 0.0402772498509113*k + 0.0032958849918132*n >= 0)  &&  (2.043591979075851 - 0.0008718395815170009*j - 0.03661726242371403*k + 0.02005231037489102*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [906+:16378-]|-->> [33m(0.9999847841492473 + 0.03436023498107231*j + 0.08244630493367032*k - 0.03434501913031962*n >= 0)  &&  (0.9999904435096182 + 0.07988275374532357*j + 0.04244249117239401*k - 0.04243293468201227*n >= 0)  &&  (0.9999952020387212 + 0.0606006810737177*j + 2.398980639396753e-06*k + 2.398980639396753e-06*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398167*j + 0.01036269430051814*k + 0.0191311279394181*n >= 0)  &&  (8.634005545828529 + 0.06058341187480687*j + 0.06059914678283573*k - 0.1817738379864635*n >= 0)  &&  (3.085325487311512 - 0.006987863184994485*j + 0.002206693637366679*k - 0.0261125413755057*n >= 0)  &&  (1.00202894781704 - 0.03032140033995411*j - 0.0303167159005497*k + 0.03028451037964427*n >= 0)  &&  (0.999984107543053 - 0.003279992534866195*j + 0.0402772498509113*k + 0.0032958849918132*n >= 0)  &&  (2.043591979075851 - 0.0008718395815170009*j - 0.03661726242371403*k + 0.02005231037489102*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(146 + 5*j + 12*k - 5*n >= 0)  &&  (189 + 15*j + 8*k - 8*n >= 0)  &&  (33 - j - k + n >= 0)  &&  (95 - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(146 + 5*j + 12*k - 5*n >= 0)  &&  (189 + 15*j + 8*k - 8*n >= 0)  &&  (33 - j - k + n >= 0)  &&  (95 - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,48,48) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,49,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,50,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,51,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,52,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,53,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,54,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,55,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [906+:17732-]|-->> [33m(7.230769230769234 - 0.04761904761904764*j - 0.05860805860805868*k - 0.04029304029304032*n >= 0)  &&  (5.522022838499179 + 0.006525285481239799*j - 0.05383360522022834*k - 0.01794453507340946*n >= 0)  &&  (0.9999847841492473 + 0.03436023498107231*j + 0.08244630493367032*k - 0.03434501913031962*n >= 0)  &&  (0.9999904435096182 + 0.07988275374532357*j + 0.04244249117239401*k - 0.04243293468201227*n >= 0)  &&  (0.9999952020387212 + 0.0606006810737177*j + 2.398980639396753e-06*k + 2.398980639396753e-06*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398167*j + 0.01036269430051814*k + 0.0191311279394181*n >= 0)  &&  (8.634005545828529 + 0.06058341187480687*j + 0.06059914678283573*k - 0.1817738379864635*n >= 0)  &&  (0.999984107543053 - 0.003279992534866195*j + 0.0402772498509113*k + 0.0032958849918132*n >= 0)  &&  (1.00202894781704 - 0.03032140033995411*j - 0.0303167159005497*k + 0.03028451037964427*n >= 0)  &&  (2.043591979075851 - 0.0008718395815170009*j - 0.03661726242371403*k + 0.02005231037489102*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [906+:19250-]|-->> [33m(0.9999923586267983 + 0.2499384318505598*j + 0.2499463207500685*k - 0.2499307904773582*n >= 0)  &&  (1.000016053413629 + 0.2789768069768916*j + 0.2324726457739286*k - 0.2324886991875577*n >= 0)  &&  (1.000014482206024 + 0.2499203478668692*j - 7.241103012090022e-06*k - 7.241103012090022e-06*n >= 0)  &&  (1.00000940446616 + 0.1110860325346854*j - 0.0277762103667511*k + 0.02776680590059161*n >= 0)  &&  (7.230769230769234 - 0.04761904761904764*j - 0.05860805860805868*k - 0.04029304029304032*n >= 0)  &&  (5.522022838499179 + 0.006525285481239799*j - 0.05383360522022834*k - 0.01794453507340946*n >= 0)  &&  (0.9999847841492473 + 0.03436023498107231*j + 0.08244630493367032*k - 0.03434501913031962*n >= 0)  &&  (0.999984107543053 - 0.003279992534866195*j + 0.0402772498509113*k + 0.0032958849918132*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398167*j + 0.01036269430051814*k + 0.0191311279394181*n >= 0)  &&  (8.634005545828529 + 0.06058341187480687*j + 0.06059914678283573*k - 0.1817738379864635*n >= 0)  &&  (2.043591979075851 - 0.0008718395815170009*j - 0.03661726242371403*k + 0.02005231037489102*n >= 0)  &&  (1.00202894781704 - 0.03032140033995411*j - 0.0303167159005497*k + 0.03028451037964427*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [906+:21069-]|-->> [33m(0.9999923586267983 + 0.2499384318505598*j + 0.2499463207500685*k - 0.2499307904773582*n >= 0)  &&  (1.000016053413629 + 0.2789768069768916*j + 0.2324726457739286*k - 0.2324886991875577*n >= 0)  &&  (1.000014482206024 + 0.2499203478668692*j - 7.241103012090022e-06*k - 7.241103012090022e-06*n >= 0)  &&  (1.00000940446616 + 0.1110860325346854*j - 0.0277762103667511*k + 0.02776680590059161*n >= 0)  &&  (7.230769230769234 - 0.04761904761904764*j - 0.05860805860805868*k - 0.04029304029304032*n >= 0)  &&  (5.522022838499179 + 0.006525285481239799*j - 0.05383360522022834*k - 0.01794453507340946*n >= 0)  &&  (0.9999847841492473 + 0.03436023498107231*j + 0.08244630493367032*k - 0.03434501913031962*n >= 0)  &&  (0.999984107543053 - 0.003279992534866195*j + 0.0402772498509113*k + 0.0032958849918132*n >= 0)  &&  (0.9705061777600638 + 0.03347947389398167*j + 0.01036269430051814*k + 0.0191311279394181*n >= 0)  &&  (8.634005545828529 + 0.06058341187480687*j + 0.06059914678283573*k - 0.1817738379864635*n >= 0)  &&  (2.043591979075851 - 0.0008718395815170009*j - 0.03661726242371403*k + 0.02005231037489102*n >= 0)  &&  (1.00202894781704 - 0.03032140033995411*j - 0.0303167159005497*k + 0.03028451037964427*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(4 + j + k - n >= 0)  &&  (33 - j - k + n >= 0)  &&  (146 + 5*j + 12*k - 5*n >= 0)  &&  (36 + 4*j - k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(4 + j + k - n >= 0)  &&  (33 - j - k + n >= 0)  &&  (146 + 5*j + 12*k - 5*n >= 0)  &&  (36 + 4*j - k + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
