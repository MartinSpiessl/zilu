[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target half
[  8%] Building CXX object CMakeFiles/half.dir/test/half.cpp.o
[ 16%] Building CXX object CMakeFiles/half.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/half.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/half.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/half.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/half.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/half.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/half.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/half.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/half.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/half.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/half.dir/src/instrumentation.cpp.o
Linking CXX executable half
[100%] Built target half
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:857-]|-->> [33m(1 - 0.00856898029134533*i + 0.008041658427262541*k + 0.01120558961175928*n >= 0)  &&  (1 - 0.01775898520084566*i + 0.02536997885835095*k - 0.02706131078224101*n >= 0)  &&  (1 + 0.02844774273345702*i + 0.009894867037724181*k - 0.03957946815089673*n >= 0)  &&  (1 - 0.02477547228244038*i + 0.002167853824713534*k + 0.0009290802105915144*n >= 0)  &&  (1 + 0.008288507022207339*i + 0.003432614019297989*k - 0.001800029302802604*n >= 0)  &&  (1 + 0.0103578154425612*i + 0.003295668549905838*k - 0.0108286252354049*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:1739-]|-->> [33m(1 - 0.00856898029134533*i + 0.008041658427262541*k + 0.01120558961175928*n >= 0)  &&  (1 + 0.009641622703292706*i + 0.01509914498817537*k + 0.006549026741859196*n >= 0)  &&  (1 - 0.01775898520084566*i + 0.02536997885835095*k - 0.02706131078224101*n >= 0)  &&  (1 - 0.02477547228244038*i + 0.002167853824713534*k + 0.0009290802105915144*n >= 0)  &&  (1 + 0.008288507022207339*i + 0.003432614019297989*k - 0.001800029302802604*n >= 0)  &&  (1 + 0.0103578154425612*i + 0.003295668549905838*k - 0.0108286252354049*n >= 0)  &&  (1 + 0.02844774273345702*i + 0.009894867037724181*k - 0.03957946815089673*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:3106-]|-->> [33m(1 - 0.00856898029134533*i + 0.008041658427262541*k + 0.01120558961175928*n >= 0)  &&  (1 + 0.009641622703292706*i + 0.01509914498817537*k + 0.006549026741859196*n >= 0)  &&  (1 - 0.01775898520084566*i + 0.02536997885835095*k - 0.02706131078224101*n >= 0)  &&  (1 - 0.02477547228244038*i + 0.002167853824713534*k + 0.0009290802105915144*n >= 0)  &&  (1 + 0.008288507022207339*i + 0.003432614019297989*k - 0.001800029302802604*n >= 0)  &&  (1 + 0.0103578154425612*i + 0.003295668549905838*k - 0.0108286252354049*n >= 0)  &&  (1 + 0.02844774273345702*i + 0.009894867037724181*k - 0.03957946815089673*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(176 + 5*i - 7*n >= 0)  &&  (66 + k >= 0)  &&  (1070 - 19*i + 27*k - 29*n >= 0)  &&  (40 - i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(176 + 5*i - 7*n >= 0)  &&  (66 + k >= 0)  &&  (1070 - 19*i + 27*k - 29*n >= 0)  &&  (40 - i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,26,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,27,27) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,28,28) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,29,29) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,30,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,31,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,32,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,33,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [129+:3998-]|-->> [33m(1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (1.500267982276818 - 0.002309109130103941*i - 0.004627690130712864*k - 0.01053194569585738*n >= 0)  &&  (1 - 0.007999145284693854*i + 0.04115654688182609*k - 0.01152863025389612*n >= 0)  &&  (1.029434153768079 - 0.0236826524570752*i + 0.01150300262200795*k + 0.01793115114607122*n >= 0)  &&  (1.081499962198533 + 0.009576371563216652*i + 0.0005040195559587713*k - 0.00297371538015675*n >= 0)  &&  (1 + 0.0346187089179615*i + 0.03011819643585573*k - 0.03008825385625124*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [129+:4923-]|-->> [33m(1.867021935803693 + 0.0116495228652869*i - 0.01586318007188003*k - 0.01041021192217127*n >= 0)  &&  (2.065868263473054 - 0.004491017964071855*i - 0.001497005988023952*k - 0.02694610778443114*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (1.029434153768079 - 0.0236826524570752*i + 0.01150300262200795*k + 0.01793115114607122*n >= 0)  &&  (1.500267982276818 - 0.002309109130103941*i - 0.004627690130712864*k - 0.01053194569585738*n >= 0)  &&  (1 - 0.007999145284693854*i + 0.04115654688182609*k - 0.01152863025389612*n >= 0)  &&  (1 + 0.0346187089179615*i + 0.03011819643585573*k - 0.03008825385625124*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [129+:5522-]|-->> [33m(4.860550458715597 - 0.04403669724770642*i + 0.003669724770642202*k - 0.07339449541284404*n >= 0)  &&  (1 + 0.02542372881355933*i + 0.08474576271186443*k + 0.02542372881355933*n >= 0)  &&  (1.867021935803693 + 0.0116495228652869*i - 0.01586318007188003*k - 0.01041021192217127*n >= 0)  &&  (1.029434153768079 - 0.0236826524570752*i + 0.01150300262200795*k + 0.01793115114607122*n >= 0)  &&  (2.065868263473054 - 0.004491017964071855*i - 0.001497005988023952*k - 0.02694610778443114*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (1 + 0.0346187089179615*i + 0.03011819643585573*k - 0.03008825385625124*n >= 0)  &&  (1 - 0.007999145284693854*i + 0.04115654688182609*k - 0.01152863025389612*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [129+:6669-]|-->> [33m(4.860550458715597 - 0.04403669724770642*i + 0.003669724770642202*k - 0.07339449541284404*n >= 0)  &&  (1 + 0.02542372881355933*i + 0.08474576271186443*k + 0.02542372881355933*n >= 0)  &&  (1.867021935803693 + 0.0116495228652869*i - 0.01586318007188003*k - 0.01041021192217127*n >= 0)  &&  (1.029434153768079 - 0.0236826524570752*i + 0.01150300262200795*k + 0.01793115114607122*n >= 0)  &&  (2.065868263473054 - 0.004491017964071855*i - 0.001497005988023952*k - 0.02694610778443114*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (1 + 0.0346187089179615*i + 0.03011819643585573*k - 0.03008825385625124*n >= 0)  &&  (1 - 0.007999145284693854*i + 0.04115654688182609*k - 0.01152863025389612*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(66 - n >= 0)  &&  (118 + 3*i + 10*k + 3*n >= 0)  &&  (233 + 8*i + 7*k - 7*n >= 0)  &&  (1253 - 29*i + 14*k + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(66 - n >= 0)  &&  (118 + 3*i + 10*k + 3*n >= 0)  &&  (233 + 8*i + 7*k - 7*n >= 0)  &&  (1253 - 29*i + 14*k + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,67,67) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,68,68) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,69,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,70,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,71,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,72,72) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,73,73) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,74,74) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [421+:7321-]|-->> [33m(1.038447393850213 + 0.03844739385021323*i + 0.1537895754008529*k - 0.1153421815506398*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (74.97536931177456 + 0.3332285481231811*i + 0.6664386047386444*k - 1.666105757600405*n >= 0)  &&  (1.028880536094042 - 0.02368081407533446*i + 0.01151112865180478*k + 0.01794583650155042*n >= 0)  &&  (75.00000000009095 + 1.000000000001217*i - 1.000000000001222*n >= 0)  &&  (1 + 0.0346067741305475*i + 0.03009551087807159*k - 0.03009018326201102*n >= 0)  &&  (15.80000000000075 + 0.3333333333333505*i - 0.1333333333333409*k - 0.06666666666667087*n >= 0)  &&  (2.544774604642785 - 0.002452566386044889*i - 0.004905132772089774*k - 0.01597019972308299*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698064 - 0.02878074306645735*i - 0.005756148613291472*k - 0.01360544217687075*n >= 0)  &&  (7.040816326530518 + 0.149659863945576*i - 0.06802721088435271*k - 0.01360544217687054*n >= 0)  &&  (3.728110599078342 + 0.07066052227342552*i - 0.03379416282642089*k - 0.003072196620583723*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [421+:8576-]|-->> [33m(1.038447393850213 + 0.03844739385021323*i + 0.1537895754008529*k - 0.1153421815506398*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (74.97536931177456 + 0.3332285481231811*i + 0.6664386047386444*k - 1.666105757600405*n >= 0)  &&  (1.028880536094042 - 0.02368081407533446*i + 0.01151112865180478*k + 0.01794583650155042*n >= 0)  &&  (75.00000000009095 + 1.000000000001217*i - 1.000000000001222*n >= 0)  &&  (1 + 0.0346067741305475*i + 0.03009551087807159*k - 0.03009018326201102*n >= 0)  &&  (15.80000000000075 + 0.3333333333333505*i - 0.1333333333333409*k - 0.06666666666667087*n >= 0)  &&  (2.544774604642785 - 0.002452566386044889*i - 0.004905132772089774*k - 0.01597019972308299*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698064 - 0.02878074306645735*i - 0.005756148613291472*k - 0.01360544217687075*n >= 0)  &&  (7.040816326530518 + 0.149659863945576*i - 0.06802721088435271*k - 0.01360544217687054*n >= 0)  &&  (3.728110599078342 + 0.07066052227342552*i - 0.03379416282642089*k - 0.003072196620583723*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(27 + i + 4*k - 3*n >= 0)  &&  (233 + 8*i + 7*k - 7*n >= 0)  &&  (45 - n >= 0)  &&  (1251 - 29*i + 14*k + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(27 + i + 4*k - 3*n >= 0)  &&  (233 + 8*i + 7*k - 7*n >= 0)  &&  (45 - n >= 0)  &&  (1251 - 29*i + 14*k + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,46,46) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,47,47) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,48,48) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,49,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,50,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,51,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,52,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,53,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [629+:9477-]|-->> [33m(1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0)  &&  (1 + 0.03461344147034218*i + 0.03010093409392936*k - 0.03009635541970922*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [629+:10087-]|-->> [33m(1 + 0.0666522305514391*i + 0.1333035717290142*k - 0.1332908167557348*n >= 0)  &&  (1 + 0.1333016413505065*i + 0.06665676292203332*k - 0.06664487842847311*n >= 0)  &&  (1 + 0.0826709928694678*i + 0.005172352944338265*k - 0.005161521164345206*n >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [629+:10457-]|-->> [33m(1 + 0.399852564463735*i + 0.7997289814467017*k - 0.7997158841486502*n >= 0)  &&  (1 + 0.6664414937635813*i + 0.6664482489506742*k - 0.6664347385764877*n >= 0)  &&  (1 + 0.6313706082897599*i + 0.1052350987595636*k - 0.1052217706703571*n >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (1 + 0.2827418644480568*i - 0.02018954744611112*k + 0.02020214747503979*n >= 0)  &&  (1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [629+:11190-]|-->> [33m(1 + 0.399852564463735*i + 0.7997289814467017*k - 0.7997158841486502*n >= 0)  &&  (1 + 0.6664414937635813*i + 0.6664482489506742*k - 0.6664347385764877*n >= 0)  &&  (1 + 0.6313706082897599*i + 0.1052350987595636*k - 0.1052217706703571*n >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (1 + 0.2827418644480568*i - 0.02018954744611112*k + 0.02020214747503979*n >= 0)  &&  (1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 + 2*i + 4*k - 4*n >= 0)  &&  (1253 - 29*i + 14*k + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(5 + 2*i + 4*k - 4*n >= 0)  &&  (1253 - 29*i + 14*k + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-5,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-6,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-12,-7,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [629+:11883-]|-->> [33m(1 + 2*k >= 0)  &&  (1 + 0.399852564463735*i + 0.7997289814467017*k - 0.7997158841486502*n >= 0)  &&  (1 + 0.6664414937635813*i + 0.6664482489506742*k - 0.6664347385764877*n >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (1 + 0.6313706082897599*i + 0.1052350987595636*k - 0.1052217706703571*n >= 0)  &&  (1 + 0.2827418644480568*i - 0.02018954744611112*k + 0.02020214747503979*n >= 0)  &&  (1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [629+:12778-]|-->> [33m(1 + 2*k >= 0)  &&  (1 + 0.399852564463735*i + 0.7997289814467017*k - 0.7997158841486502*n >= 0)  &&  (1 + 0.6664414937635813*i + 0.6664482489506742*k - 0.6664347385764877*n >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (1 + 0.6313706082897599*i + 0.1052350987595636*k - 0.1052217706703571*n >= 0)  &&  (1 + 0.2827418644480568*i - 0.02018954744611112*k + 0.02020214747503979*n >= 0)  &&  (1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0)  &&  (5 + 2*i + 4*k - 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + 2*k >= 0)  &&  (5 + 2*i + 4*k - 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (-1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,0,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-4,0,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,0,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-6,0,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-7,0,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [629+:13706-]|-->> [33m(1 + 0.9995842001663281*i + 1.999148695304009*k - 1.999147021076118*n >= 0)  &&  (1 + 1.999997048067398*i + 2.784842077812074e-08*k + 2.784842077812074e-08*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (1 + 0.2827418644480568*i - 0.02018954744611112*k + 0.02020214747503979*n >= 0)  &&  (1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [629+:14371-]|-->> [33m(1 + 0.9995842001663281*i + 1.999148695304009*k - 1.999147021076118*n >= 0)  &&  (1 + 1.999997048067398*i + 2.784842077812074e-08*k + 2.784842077812074e-08*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.029440442180617 - 0.02368771209934697*i + 0.01150546016253995*k + 0.01793498201807698*n >= 0)  &&  (1 + 0.2827418644480568*i - 0.02018954744611112*k + 0.02020214747503979*n >= 0)  &&  (1.038456251974274 + 0.03845625197426827*i + 0.1538250078970736*k - 0.1153687559228054*n >= 0)  &&  (1 + 0.02542372881355932*i + 0.0847457627118644*k + 0.02542372881355932*n >= 0)  &&  (2.54487893230345 - 0.002452732022192011*i - 0.004905464044384016*k - 0.01597127828404099*n >= 0)  &&  (1 + 0.02792181890706023*i + 0.01675309134423614*k + 0.02313522138013562*n >= 0)  &&  (4.349555206698065 - 0.02878074306645736*i - 0.005756148613291472*k - 0.01360544217687076*n >= 0)  &&  (74.97526435946565 + 0.3332281016293654*i + 0.6664376329580364*k - 1.666103367545389*n >= 0)  &&  (75.00000000001091 + 1.000000000000148*i - 1.000000000000156*n >= 0)  &&  (3.728110599078349 + 0.07066052227342574*i - 0.033794162826421*k - 0.003072196620583723*n >= 0)  &&  (7.040816326530717 + 0.1496598639455807*i - 0.06802721088435493*k - 0.01360544217687099*n >= 0)  &&  (15.79999999999984 + 0.3333333333333268*i - 0.133333333333332*k - 0.06666666666666643*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i + 2*k - 2*n >= 0)  &&  (1 + 2*i >= 0)  &&  (1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + i + 2*k - 2*n >= 0)  &&  (1 + 2*i >= 0)  &&  (1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> 