[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_07
[  8%] Building CXX object CMakeFiles/dillig_07.dir/test/dillig_07.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_07.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_07.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_07.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_07.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_07.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_07.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_07.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_07.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_07.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_07.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_07.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_07
[100%] Built target dillig_07
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:1223-]|-->> [33m(1 - 0.001820112240254816*i - 0.00538449871075383*j - 0.006597906870923707*n >= 0)  &&  (1 + 0.004353270218716721*i + 0.00411922343276421*j + 0.003300059681930418*n >= 0)  &&  (1 + 0.000484050534875841*i - 0.009342175323103731*j + 0.003049518369717798*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1 + 0.01297161587279448*i - 0.002650115070785968*j + 0.01018202106144082*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (1 - 0.0103516664248053*i - 0.007933052774149858*j - 0.004837227301310889*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:2466-]|-->> [33m(1 - 0.02153478037942232*i - 0.01333105452059477*j + 0.006494616304905144*n >= 0)  &&  (1 + 0.04324324324324325*i - 0.009729729729729729*j + 0.01405405405405405*n >= 0)  &&  (1 + 0.02493853178784686*i + 0.007727432384966632*j + 0.0045662100456621*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1 - 0.006830052229811169*i - 0.01325833668139815*j - 0.02410606669345118*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (1 + 0.01325833668139815*i + 0.006830052229811169*j - 0.02410606669345118*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:3354-]|-->> [33m(1 + 0.01199520191923231*i + 0.02079168332666933*j + 0.03198720511795282*n >= 0)  &&  (1 + 0.006972690296339337*i - 0.03312027890761185*j - 0.004067402672864613*n >= 0)  &&  (1 - 0.02153478037942232*i - 0.01333105452059477*j + 0.006494616304905144*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1 + 0.04324324324324325*i - 0.009729729729729729*j + 0.01405405405405405*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (1 + 0.02493853178784686*i + 0.007727432384966632*j + 0.0045662100456621*n >= 0)  &&  (1 - 0.006830052229811169*i - 0.01325833668139815*j - 0.02410606669345118*n >= 0)  &&  (1 + 0.01325833668139815*i + 0.006830052229811169*j - 0.02410606669345118*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [1+:5353-]|-->> [33m(1 + 0.03953646898432175*i - 0.00136332651670075*j - 0.03408316291751875*n >= 0)  &&  (1 + 0.01199520191923231*i + 0.02079168332666933*j + 0.03198720511795282*n >= 0)  &&  (1 + 0.006972690296339337*i - 0.03312027890761185*j - 0.004067402672864613*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1 - 0.02153478037942232*i - 0.01333105452059477*j + 0.006494616304905144*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (1 + 0.04324324324324325*i - 0.009729729729729729*j + 0.01405405405405405*n >= 0)  &&  (1 - 0.006830052229811169*i - 0.01325833668139815*j - 0.02410606669345118*n >= 0)  &&  (1 + 0.01325833668139815*i + 0.006830052229811169*j - 0.02410606669345118*n >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [1+:7144-]|-->> [33m(1 + 0.03953646898432175*i - 0.00136332651670075*j - 0.03408316291751875*n >= 0)  &&  (1 + 0.01199520191923231*i + 0.02079168332666933*j + 0.03198720511795282*n >= 0)  &&  (1 + 0.006972690296339337*i - 0.03312027890761185*j - 0.004067402672864613*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1 - 0.02153478037942232*i - 0.01333105452059477*j + 0.006494616304905144*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (1 + 0.04324324324324325*i - 0.009729729729729729*j + 0.01405405405405405*n >= 0)  &&  (1 - 0.006830052229811169*i - 0.01325833668139815*j - 0.02410606669345118*n >= 0)  &&  (1 + 0.01325833668139815*i + 0.006830052229811169*j - 0.02410606669345118*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(176 + 7*i - 6*n >= 0)  &&  (1000 + 12*i + 21*j + 32*n >= 0)  &&  (30 - j >= 0)  &&  (712 + 31*i + 10*n >= 0)  &&  (375 - 8*i - 5*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(176 + 7*i - 6*n >= 0)  &&  (1000 + 12*i + 21*j + 32*n >= 0)  &&  (30 - j >= 0)  &&  (712 + 31*i + 10*n >= 0)  &&  (375 - 8*i - 5*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [277+:9042-]|-->> [33m(1 + 0.04030880124255609*i - 0.06960993862924304*j + 0.02931692725537617*n >= 0)  &&  (1 + 0.07691246017795232*i - 0.05127497345196821*j - 1.104141492958011e-05*n >= 0)  &&  (1 + 0.05802841613752733*i + 0.006826872486767921*j - 2.280321858340317e-05*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1 + 0.01199520191923231*i + 0.02079168332666933*j + 0.03198720511795282*n >= 0)  &&  (1 - 0.01987358478448015*i - 0.006374546062946461*j + 0.02624813084742661*n >= 0)  &&  (2.335212855934593 - 0.01973498731322244*i - 0.01268677755850014*j - 0.003665069072455597*n >= 0)  &&  (3.589985262324067 + 0.02435444755119103*i - 0.02434092753363278*j - 0.06999960168443424*n >= 0)  &&  (1.53257790368272 + 0.008575147385345686*i + 0.005053211852078707*j - 0.01439399739683026*n >= 0)  &&  (1.76431225393863 + 0.00253921958067058*i - 0.00251517427803801*j - 0.02065708794428728*n >= 0)  &&  (1.441275602800104 + 0.02488981073373088*i + 0.01659320715582059*j - 0.01192636764324605*n >= 0)  &&  (2.537488708220415 + 0.04155374887082203*i + 0.01264679313459801*j - 0.04155374887082201*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [277+:10723-]|-->> [33m(1 + 0.04030880124255609*i - 0.06960993862924304*j + 0.02931692725537617*n >= 0)  &&  (1 + 0.07691246017795232*i - 0.05127497345196821*j - 1.104141492958011e-05*n >= 0)  &&  (1 + 0.05802841613752733*i + 0.006826872486767921*j - 2.280321858340317e-05*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1 + 0.01199520191923231*i + 0.02079168332666933*j + 0.03198720511795282*n >= 0)  &&  (1 - 0.01987358478448015*i - 0.006374546062946461*j + 0.02624813084742661*n >= 0)  &&  (2.335212855934593 - 0.01973498731322244*i - 0.01268677755850014*j - 0.003665069072455597*n >= 0)  &&  (3.589985262324067 + 0.02435444755119103*i - 0.02434092753363278*j - 0.06999960168443424*n >= 0)  &&  (1.53257790368272 + 0.008575147385345686*i + 0.005053211852078707*j - 0.01439399739683026*n >= 0)  &&  (1.76431225393863 + 0.00253921958067058*i - 0.00251517427803801*j - 0.02065708794428728*n >= 0)  &&  (1.441275602800104 + 0.02488981073373088*i + 0.01659320715582059*j - 0.01192636764324605*n >= 0)  &&  (2.537488708220415 + 0.04155374887082203*i + 0.01264679313459801*j - 0.04155374887082201*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(273 + 11*i - 19*j + 8*n >= 0)  &&  (39 + 3*i - 2*j >= 0)  &&  (51 - n >= 0)  &&  (151 - 3*i + 4*n >= 0)  &&  (1000 + 12*i + 21*j + 32*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(273 + 11*i - 19*j + 8*n >= 0)  &&  (39 + 3*i - 2*j >= 0)  &&  (51 - n >= 0)  &&  (151 - 3*i + 4*n >= 0)  &&  (1000 + 12*i + 21*j + 32*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,59) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [729+:11532-]|-->> [33m(1 + 1.999088093459704*i - 1.999088195060125*j - 1.682318753637446e-05*n >= 0)  &&  (1.519823788546255 + 0.1321585903083697*i - 0.008810572687224644*j - 0.008810572687224627*n >= 0)  &&  (1.138660399529966 + 0.06345475910693299*i + 0.02585193889541714*j - 0.002350176263219761*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1.035446079903875 + 0.02883748873535597*i + 0.01922499249023731*j - 0.0006007810153199206*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (3.51063829787234 - 0.03294440631434455*i - 0.01578586135895677*j + 0.006177076183939596*n >= 0)  &&  (1 - 0.03827039919594566*i - 0.01055344999841593*j + 0.04884001256771922*n >= 0)  &&  (2.559452294173254 + 0.00422168111652363*i - 0.004221681116523648*j - 0.02643139481649583*n >= 0)  &&  (1.790105086952478 + 0.01171766018785455*i + 0.007439784246256859*j - 0.01339161164326235*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [729+:12778-]|-->> [33m(1 + 1.999088093459704*i - 1.999088195060125*j - 1.682318753637446e-05*n >= 0)  &&  (1.519823788546255 + 0.1321585903083697*i - 0.008810572687224644*j - 0.008810572687224627*n >= 0)  &&  (1.138660399529966 + 0.06345475910693299*i + 0.02585193889541714*j - 0.002350176263219761*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1.035446079903875 + 0.02883748873535597*i + 0.01922499249023731*j - 0.0006007810153199206*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (3.51063829787234 - 0.03294440631434455*i - 0.01578586135895677*j + 0.006177076183939596*n >= 0)  &&  (1 - 0.03827039919594566*i - 0.01055344999841593*j + 0.04884001256771922*n >= 0)  &&  (2.559452294173254 + 0.00422168111652363*i - 0.004221681116523648*j - 0.02643139481649583*n >= 0)  &&  (1.790105086952478 + 0.01171766018785455*i + 0.007439784246256859*j - 0.01339161164326235*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*j >= 0)  &&  (474 - 18*i - 5*j + 23*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(1 + 2*i - 2*j >= 0)  &&  (474 - 18*i - 5*j + 23*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,1,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-5,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [729+:14066-]|-->> [33m(1 - 0.9996335120860584*i - 0.9996335120860584*j + 1.999279447491233*n >= 0)  &&  (1 + 1.999088093459704*i - 1.999088195060125*j - 1.682318753637446e-05*n >= 0)  &&  (1.519823788546255 + 0.1321585903083697*i - 0.008810572687224644*j - 0.008810572687224627*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1.138660399529966 + 0.06345475910693299*i + 0.02585193889541714*j - 0.002350176263219761*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (3.51063829787234 - 0.03294440631434455*i - 0.01578586135895677*j + 0.006177076183939596*n >= 0)  &&  (1 - 0.03827039919594566*i - 0.01055344999841593*j + 0.04884001256771922*n >= 0)  &&  (1.035446079903875 + 0.02883748873535597*i + 0.01922499249023731*j - 0.0006007810153199206*n >= 0)  &&  (1.790105086952478 + 0.01171766018785455*i + 0.007439784246256859*j - 0.01339161164326235*n >= 0)  &&  (2.559452294173254 + 0.00422168111652363*i - 0.004221681116523648*j - 0.02643139481649583*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [729+:15544-]|-->> [33m(1 - 0.9996335120860584*i - 0.9996335120860584*j + 1.999279447491233*n >= 0)  &&  (1 + 1.999088093459704*i - 1.999088195060125*j - 1.682318753637446e-05*n >= 0)  &&  (1.519823788546255 + 0.1321585903083697*i - 0.008810572687224644*j - 0.008810572687224627*n >= 0)  &&  (1 - 0.006765499648785538*i + 0.003696994343598655*j + 0.003807904173906614*n >= 0)  &&  (1.138660399529966 + 0.06345475910693299*i + 0.02585193889541714*j - 0.002350176263219761*n >= 0)  &&  (1 - 0.005573817350292982*i + 0.004573388595112191*j + 0.01529226811490639*n >= 0)  &&  (3.51063829787234 - 0.03294440631434455*i - 0.01578586135895677*j + 0.006177076183939596*n >= 0)  &&  (1 - 0.03827039919594566*i - 0.01055344999841593*j + 0.04884001256771922*n >= 0)  &&  (1.035446079903875 + 0.02883748873535597*i + 0.01922499249023731*j - 0.0006007810153199206*n >= 0)  &&  (1.790105086952478 + 0.01171766018785455*i + 0.007439784246256859*j - 0.01339161164326235*n >= 0)  &&  (2.559452294173254 + 0.00422168111652363*i - 0.004221681116523648*j - 0.02643139481649583*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) [0m

=====================time=========================
