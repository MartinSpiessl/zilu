[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down_true_1
[  8%] Building CXX object CMakeFiles/down_true_1.dir/test/down_true_1.cpp.o
[ 16%] Building CXX object CMakeFiles/down_true_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down_true_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down_true_1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down_true_1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down_true_1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down_true_1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down_true_1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down_true_1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down_true_1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down_true_1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down_true_1.dir/src/instrumentation.cpp.o
Linking CXX executable down_true_1
[100%] Built target down_true_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2031-]|-->> [33m(1.00564227948091 + 0.004984013541470753*i + 0.006112469437652811*k - 0.005642279480910287*n >= 0)  &&  (1.01486436269045 + 0.001858045336306206*i + 0.004830917874396135*k - 0.01486436269044965*n >= 0)  &&  (0.9933805067336224 + 0.01826067107966218*i - 0.008902077151335312*k + 0.00661949326637754*n >= 0)  &&  (0.9975852701479022 - 0.01177180802897676*i + 0.02143072743736795*k + 0.002414729852097797*n >= 0)  &&  (1.054479078910418 - 0.01909575961808481*i - 0.009547879809042403*k - 0.02583543948329121*n >= 0)  &&  (0.987257054130749 + 0.005782513251592868*i - 0.004283343149328051*k + 0.01274294586925095*n >= 0)  &&  (1.021529324424647 - 0.01707498144023756*i - 0.01707498144023756*k + 0.01262063845582776*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:4058-]|-->> [33m(0.9829706717123936 + 0.03784295175023652*i + 0.04541154210028382*k + 0.01702932828760644*n >= 0)  &&  (1.01486436269045 + 0.001858045336306206*i + 0.004830917874396135*k - 0.01486436269044965*n >= 0)  &&  (1.008052028491793 + 0.01858160421183028*i - 0.02973056673892846*k + 0.003096934035305048*n >= 0)  &&  (0.9975852701479022 - 0.01177180802897676*i + 0.02143072743736795*k + 0.002414729852097797*n >= 0)  &&  (1.054479078910418 - 0.01909575961808481*i - 0.009547879809042403*k - 0.02583543948329121*n >= 0)  &&  (0.987257054130749 + 0.005782513251592868*i - 0.004283343149328051*k + 0.01274294586925095*n >= 0)  &&  (1.021529324424647 - 0.01707498144023756*i - 0.01707498144023756*k + 0.01262063845582776*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:5206-]|-->> [33m(1.02363238512035 - 0.03938730853391685*i + 0.01400437636761488*k + 0.00175054704595186*n >= 0)  &&  (1.01486436269045 + 0.001858045336306206*i + 0.004830917874396135*k - 0.01486436269044965*n >= 0)  &&  (0.9829706717123936 + 0.03784295175023652*i + 0.04541154210028382*k + 0.01702932828760644*n >= 0)  &&  (1.008052028491793 + 0.01858160421183028*i - 0.02973056673892846*k + 0.003096934035305048*n >= 0)  &&  (1.054479078910418 - 0.01909575961808481*i - 0.009547879809042403*k - 0.02583543948329121*n >= 0)  &&  (0.987257054130749 + 0.005782513251592868*i - 0.004283343149328051*k + 0.01274294586925095*n >= 0)  &&  (1.021529324424647 - 0.01707498144023756*i - 0.01707498144023756*k + 0.01262063845582776*n >= 0)  &&  (0.9975852701479022 - 0.01177180802897676*i + 0.02143072743736795*k + 0.002414729852097797*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:7036-]|-->> [33m(1.021140052850132 + 0.03246508116270291*i - 0.003020007550018875*k - 0.02114005285013213*n >= 0)  &&  (1.01486436269045 + 0.001858045336306206*i + 0.004830917874396135*k - 0.01486436269044965*n >= 0)  &&  (1.02363238512035 - 0.03938730853391685*i + 0.01400437636761488*k + 0.00175054704595186*n >= 0)  &&  (0.9829706717123936 + 0.03784295175023652*i + 0.04541154210028382*k + 0.01702932828760644*n >= 0)  &&  (1.054479078910418 - 0.01909575961808481*i - 0.009547879809042403*k - 0.02583543948329121*n >= 0)  &&  (0.987257054130749 + 0.005782513251592868*i - 0.004283343149328051*k + 0.01274294586925095*n >= 0)  &&  (1.021529324424647 - 0.01707498144023756*i - 0.01707498144023756*k + 0.01262063845582776*n >= 0)  &&  (1.008052028491793 + 0.01858160421183028*i - 0.02973056673892846*k + 0.003096934035305048*n >= 0)  &&  (0.9975852701479022 - 0.01177180802897676*i + 0.02143072743736795*k + 0.002414729852097797*n >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:8542-]|-->> [33m(1.021140052850132 + 0.03246508116270291*i - 0.003020007550018875*k - 0.02114005285013213*n >= 0)  &&  (1.01486436269045 + 0.001858045336306206*i + 0.004830917874396135*k - 0.01486436269044965*n >= 0)  &&  (1.02363238512035 - 0.03938730853391685*i + 0.01400437636761488*k + 0.00175054704595186*n >= 0)  &&  (0.9829706717123936 + 0.03784295175023652*i + 0.04541154210028382*k + 0.01702932828760644*n >= 0)  &&  (1.054479078910418 - 0.01909575961808481*i - 0.009547879809042403*k - 0.02583543948329121*n >= 0)  &&  (0.987257054130749 + 0.005782513251592868*i - 0.004283343149328051*k + 0.01274294586925095*n >= 0)  &&  (1.021529324424647 - 0.01707498144023756*i - 0.01707498144023756*k + 0.01262063845582776*n >= 0)  &&  (1.008052028491793 + 0.01858160421183028*i - 0.02973056673892846*k + 0.003096934035305048*n >= 0)  &&  (0.9975852701479022 - 0.01177180802897676*i + 0.02143072743736795*k + 0.002414729852097797*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(531 + 17*i - 11*n >= 0)  &&  (271 + 5*i - 8*k >= 0)  &&  (365 - 14*i + 5*k >= 0)  &&  (520 + 20*i + 24*k + 9*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(531 + 17*i - 11*n >= 0)  &&  (271 + 5*i - 8*k >= 0)  &&  (365 - 14*i + 5*k >= 0)  &&  (520 + 20*i + 24*k + 9*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,53) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [430+:11007-]|-->> [33m(1.000006723154302 + 0.03636645690444937*i - 0.03636645690444937*k - 6.723154301870038e-06*n >= 0)  &&  (1.781535158346752 + 0.007944176060118088*i + 0.01309715512614063*k - 0.01395598497047773*n >= 0)  &&  (2.612403100775194 - 0.00487264673311185*i + 0.005758582502768551*k - 0.02879291251384275*n >= 0)  &&  (1.704655761279885 - 0.01905446701420097*i - 0.009706992629875965*k + 0.01617832104979328*n >= 0)  &&  (1 + 0.009898624371409943*i - 0.01979724874281989*k + 0.009898624371409943*n >= 0)  &&  (1.000016401507339 - 0.1176031538200055*i + 0.1176036029465439*k - 1.64015073391699e-05*n >= 0)  &&  (0.9999831330648842 + 0.04188305386360364*i - 0.008194510538531149*k + 1.686693511582932e-05*n >= 0)  &&  (0.9700499168053245 + 0.04658901830282862*i + 0.05990016638935108*k + 0.02995008319467554*n >= 0)  &&  (0.9925031236984589 + 0.02665556018325698*i + 0.0299875052061641*k + 0.007496876301541025*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [430+:13735-]|-->> [33m(1.000006723154302 + 0.03636645690444937*i - 0.03636645690444937*k - 6.723154301870038e-06*n >= 0)  &&  (1.781535158346752 + 0.007944176060118088*i + 0.01309715512614063*k - 0.01395598497047773*n >= 0)  &&  (2.612403100775194 - 0.00487264673311185*i + 0.005758582502768551*k - 0.02879291251384275*n >= 0)  &&  (1.704655761279885 - 0.01905446701420097*i - 0.009706992629875965*k + 0.01617832104979328*n >= 0)  &&  (1 + 0.009898624371409943*i - 0.01979724874281989*k + 0.009898624371409943*n >= 0)  &&  (1.000016401507339 - 0.1176031538200055*i + 0.1176036029465439*k - 1.64015073391699e-05*n >= 0)  &&  (0.9999831330648842 + 0.04188305386360364*i - 0.008194510538531149*k + 1.686693511582932e-05*n >= 0)  &&  (0.9700499168053245 + 0.04658901830282862*i + 0.05990016638935108*k + 0.02995008319467554*n >= 0)  &&  (0.9925031236984589 + 0.02665556018325698*i + 0.0299875052061641*k + 0.007496876301541025*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(55 + 2*i - 2*k >= 0)  &&  (292 + 14*i + 18*k + 9*n >= 0)  &&  (91 - n >= 0)  &&  (89 - i >= 0)  &&  (17 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(55 + 2*i - 2*k >= 0)  &&  (292 + 14*i + 18*k + 9*n >= 0)  &&  (91 - n >= 0)  &&  (89 - i >= 0)  &&  (17 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,0,92) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,93) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,94) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,95) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,96) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,97) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,98) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,99) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1202+:15774-]|-->> [33m(1.000000067518734 + 0.04255291138363385*i - 0.04255291070162644*k - 6.751873372207173e-08*n >= 0)  &&  (0.9999987156171256 + 0.04611052761798821*i - 0.004289351406324485*k + 1.284382874409962e-06*n >= 0)  &&  (3.154302670623148 + 0.01285855588526212*i + 0.03659742828882297*k - 0.02176063303659743*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999956965583189 - 0.01603473208013467*i - 0.005947466017761978*k + 0.02198650153957779*n >= 0)  &&  (0.945619335347432 + 0.05438066465256797*i + 0.07854984894259819*k + 0.05438066465256797*n >= 0)  &&  (1.000000707443599 - 0.1176054199409559*i + 0.1176146131270162*k - 7.074435989240513e-07*n >= 0)  &&  (0.9865571321882001 + 0.03435399551904406*i + 0.04032860343539954*k + 0.01344286781179985*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1202+:16653-]|-->> [33m(1.000000067518734 + 0.04255291138363385*i - 0.04255291070162644*k - 6.751873372207173e-08*n >= 0)  &&  (0.9999987156171256 + 0.04611052761798821*i - 0.004289351406324485*k + 1.284382874409962e-06*n >= 0)  &&  (3.154302670623148 + 0.01285855588526212*i + 0.03659742828882297*k - 0.02176063303659743*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999956965583189 - 0.01603473208013467*i - 0.005947466017761978*k + 0.02198650153957779*n >= 0)  &&  (0.945619335347432 + 0.05438066465256797*i + 0.07854984894259819*k + 0.05438066465256797*n >= 0)  &&  (1.000000707443599 - 0.1176054199409559*i + 0.1176146131270162*k - 7.074435989240513e-07*n >= 0)  &&  (0.9865571321882001 + 0.03435399551904406*i + 0.04032860343539954*k + 0.01344286781179985*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(47 + 2*i - 2*k >= 0)  &&  (17 - 2*i + 2*k >= 0)  &&  (156 + 9*i + 13*k + 9*n >= 0)  &&  (499 - 8*i + 11*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(47 + 2*i - 2*k >= 0)  &&  (17 - 2*i + 2*k >= 0)  &&  (156 + 9*i + 13*k + 9*n >= 0)  &&  (499 - 8*i + 11*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-7,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1202+:19240-]|-->> [33m(k + n >= 0)  &&  (1.000000067518734 + 0.04255291138363385*i - 0.04255291070162644*k - 6.751873372207173e-08*n >= 0)  &&  (3.154302670623148 + 0.01285855588526212*i + 0.03659742828882297*k - 0.02176063303659743*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999956965583189 - 0.01603473208013467*i - 0.005947466017761978*k + 0.02198650153957779*n >= 0)  &&  (0.9999987156171256 + 0.04611052761798821*i - 0.004289351406324485*k + 1.284382874409962e-06*n >= 0)  &&  (1.000000707443599 - 0.1176054199409559*i + 0.1176146131270162*k - 7.074435989240513e-07*n >= 0)  &&  (0.945619335347432 + 0.05438066465256797*i + 0.07854984894259819*k + 0.05438066465256797*n >= 0)  &&  (0.9865571321882001 + 0.03435399551904406*i + 0.04032860343539954*k + 0.01344286781179985*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1202+:20557-]|-->> [33m(1.000002724643291 - 0.4999395979034713*i + 0.4999422950251121*k - 2.724643291429629e-06*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (0.9999923296496214 + 0.08821295986213289*i + 0.1470215997702215*k + 7.670350378630175e-06*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999956965583189 - 0.01603473208013467*i - 0.005947466017761978*k + 0.02198650153957779*n >= 0)  &&  (k + n >= 0)  &&  (1.000000067518734 + 0.04255291138363385*i - 0.04255291070162644*k - 6.751873372207173e-08*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1202+:22373-]|-->> [33m(1.000002724643291 - 0.4999395979034713*i + 0.4999422950251121*k - 2.724643291429629e-06*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (0.9999923296496214 + 0.08821295986213289*i + 0.1470215997702215*k + 7.670350378630175e-06*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999956965583189 - 0.01603473208013467*i - 0.005947466017761978*k + 0.02198650153957779*n >= 0)  &&  (k + n >= 0)  &&  (1.000000067518734 + 0.04255291138363385*i - 0.04255291070162644*k - 6.751873372207173e-08*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 - i + k >= 0)  &&  (47 + 2*i - 2*k >= 0)  &&  (k + n >= 0)  &&  (499 - 8*i + 11*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(2 - i + k >= 0)  &&  (47 + 2*i - 2*k >= 0)  &&  (k + n >= 0)  &&  (499 - 8*i + 11*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (1,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1202+:23545-]|-->> [33m(0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999995405032679 - 0.99993106611269*i + 0.9999319944836386*k + 4.594967321081e-07*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (0.9999923296496214 + 0.08821295986213289*i + 0.1470215997702215*k + 7.670350378630175e-06*n >= 0)  &&  (k + n >= 0)  &&  (1.000000067518734 + 0.04255291138363385*i - 0.04255291070162644*k - 6.751873372207173e-08*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1202+:24494-]|-->> [33m(0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999995405032679 - 0.99993106611269*i + 0.9999319944836386*k + 4.594967321081e-07*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (0.9999923296496214 + 0.08821295986213289*i + 0.1470215997702215*k + 7.670350378630175e-06*n >= 0)  &&  (k + n >= 0)  &&  (1.000000067518734 + 0.04255291138363385*i - 0.04255291070162644*k - 6.751873372207173e-08*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - k + n >= 0)  &&  (1 - 2*i + k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0)  &&  (47 + 2*i - 2*k >= 0)  &&  (k + n >= 0)  &&  (1 - i + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 - k + n >= 0)  &&  (1 - 2*i + k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0)  &&  (47 + 2*i - 2*k >= 0)  &&  (k + n >= 0)  &&  (1 - i + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (-10,13,12) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,12,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,11,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,10,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,9,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,8,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,7,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,6,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1202+:26624-]|-->> [33m(0.999989859766913 - 1.999168484860945*i + 1.999165099441488*k + 1.014023308698597e-05*n >= 0)  &&  (1.000005001080365 + 0.1818155380484446*i - 0.1818155380484446*k - 5.001080365413246e-06*n >= 0)  &&  (0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (k + n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1202+:28575-]|-->> [33m(0.999989859766913 - 1.999168484860945*i + 1.999165099441488*k + 1.014023308698597e-05*n >= 0)  &&  (1.000005001080365 + 0.1818155380484446*i - 0.1818155380484446*k - 5.001080365413246e-06*n >= 0)  &&  (0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (k + n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*i + 2*k >= 0)  &&  (11 + 2*i - 2*k >= 0)  &&  (1 - k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 - 2*i + 2*k >= 0)  &&  (11 + 2*i - 2*k >= 0)  &&  (1 - k + n >= 0)  &&  ( -1 + 2*i - 2*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (-1,4,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,4,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,5,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,4,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,4,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,5,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1202+:30985-]|-->> [33m(0.9992946984468212 + 0.9995259602687363*i - 1.000231261821915*k + 0.0007053015531788276*n >= 0)  &&  (0.999989859766913 - 1.999168484860945*i + 1.999165099441488*k + 1.014023308698597e-05*n >= 0)  &&  (0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (k + n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1202+:33397-]|-->> [33m(0.9992946984468212 + 0.9995259602687363*i - 1.000231261821915*k + 0.0007053015531788276*n >= 0)  &&  (0.999989859766913 - 1.999168484860945*i + 1.999165099441488*k + 1.014023308698597e-05*n >= 0)  &&  (0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (k + n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i - k >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  (1 - 2*i + k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.inv >>> [0m(1 + i - k >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  (1 - 2*i + k + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt[0m
[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1202+:35741-]|-->> [33m(0.9992946984468212 + 0.9995259602687363*i - 1.000231261821915*k + 0.0007053015531788276*n >= 0)  &&  (0.999989859766913 - 1.999168484860945*i + 1.999165099441488*k + 1.014023308698597e-05*n >= 0)  &&  (0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (k + n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1202+:37223-]|-->> [33m(0.9992946984468212 + 0.9995259602687363*i - 1.000231261821915*k + 0.0007053015531788276*n >= 0)  &&  (0.999989859766913 - 1.999168484860945*i + 1.999165099441488*k + 1.014023308698597e-05*n >= 0)  &&  (0.9999907597594726 + 3.080080176243172e-06*i - 0.9995487682542166*k + 0.9995549284145691*n >= 0)  &&  (6.417910447761194 - 0.01990049751243781*i + 0.03980099502487561*k - 0.05472636815920398*n >= 0)  &&  (6.641257195716612 - 0.03107711527578037*i + 0.03108549845112447*k - 0.05698239591632942*n >= 0)  &&  (0.9999950806535622 - 1.999517904048849*i + 0.9997614116976443*k + 0.9997614116976443*n >= 0)  &&  ( -0.3330209532608881 + 0.6660419065217764*i - 0.6669790467391117*k + 1.333020953260888*n >= 0)  &&  (0.9999899953701183 + 0.07689768055491494*i + 0.3844884027745747*k + 1.000462988187678e-05*n >= 0)  &&  (k + n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i - k >= 0)  &&  (1 - 2*i + 2*k >= 0)  &&  (1 - 2*i + k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down_true_1.ds
