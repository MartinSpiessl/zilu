[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target interproc1
[  8%] Building CXX object CMakeFiles/interproc1.dir/test/interproc1.cpp.o
[ 16%] Building CXX object CMakeFiles/interproc1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/interproc1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/interproc1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/interproc1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/interproc1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/interproc1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/interproc1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/interproc1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/interproc1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/interproc1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/interproc1.dir/src/instrumentation.cpp.o
Linking CXX executable interproc1
[100%] Built target interproc1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: -1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/interproc1.cnt[0m
[34m[1mTest Counter Example: (-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc1.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r2,#s8] -->  [162+:4-]|-->> [33m(1.327868852459016 - 0.03278688524590163*x >= 0) [0m
[31m[2][0m[#r4,#s16] -->  [162+:10-]|-->> [33m(1.714285714285714 - 0.07142857142857144*x >= 0) [0m
[31m[3][0m[#r6,#s24] -->  [408+:15-]|-->> [33m(2.666666666666666 - 0.1666666666666667*x >= 0) [0m
[31m[4][0m[#r8,#s32] -->  [518+:20-]|-->> [33m(7.666666666666668 - 0.666666666666667*x >= 0) [0m
[31m[5][0m[#r10,#s40] -->  [518+:23-]|-->> [33m(20.99999999999974 - 1.999999999999975*x >= 0) [0m
[31m[6][0m[#r12,#s48] -->  [518+:25-]|-->> [33m(20.99999999999974 - 1.999999999999975*x >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(21 - 2*x >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/interproc1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/interproc1.inv >>> [0m(21 - 2*x >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(21 - 2*x >= 0) [0m

=====================time=========================
