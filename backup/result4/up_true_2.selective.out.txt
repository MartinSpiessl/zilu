[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:896-]|-->> [33m(0.9836608723278718 + 0.003812463123496574*j + 0.003177052602913811*k + 0.0125266645486316*n >= 0)  &&  (1.00059035749426 - 0.00708428993112496*j - 0.006231551328304363*k + 0.006493932436864546*n >= 0)  &&  (1.015751555018571 + 0.001700451962232067*j - 0.01297713339598157*k - 0.002774421622589162*n >= 0)  &&  (1.008657681329275 - 0.002873291620196216*j + 0.005822196177766015*k - 0.005784389709079223*n >= 0)  &&  (1.003238866396761 + 0.04696356275303643*j + 0.02105263157894736*k - 0.0242914979757085*n >= 0)  &&  (1.016511867905057 - 0.006191950464396285*j + 0.03508771929824561*k - 0.01031991744066047*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:6605-]|-->> [33m(0.9836608723278718 + 0.003812463123496574*j + 0.003177052602913811*k + 0.0125266645486316*n >= 0)  &&  (1.00059035749426 - 0.00708428993112496*j - 0.006231551328304363*k + 0.006493932436864546*n >= 0)  &&  (1.015751555018571 + 0.001700451962232067*j - 0.01297713339598157*k - 0.002774421622589162*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0)  &&  (1.003238866396761 + 0.04696356275303643*j + 0.02105263157894736*k - 0.0242914979757085*n >= 0)  &&  (1.016511867905057 - 0.006191950464396285*j + 0.03508771929824561*k - 0.01031991744066047*n >= 0)  &&  (1.01611247136877 - 0.01706026380222731*j - 0.004896927572861543*k + 0.0009477924334570729*n >= 0)  &&  (1.05748502994012 + 0.05508982035928144*j - 0.03592814371257485*k - 0.02155688622754491*n >= 0)  &&  (1.107883817427386 + 0.09958506224066391*j - 0.03319502074688797*k - 0.07468879668049792*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:11433-]|-->> [33m(0.9836608723278718 + 0.003812463123496574*j + 0.003177052602913811*k + 0.0125266645486316*n >= 0)  &&  (1.00059035749426 - 0.00708428993112496*j - 0.006231551328304363*k + 0.006493932436864546*n >= 0)  &&  (1.015751555018571 + 0.001700451962232067*j - 0.01297713339598157*k - 0.002774421622589162*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0)  &&  (1.003238866396761 + 0.04696356275303643*j + 0.02105263157894736*k - 0.0242914979757085*n >= 0)  &&  (1.016511867905057 - 0.006191950464396285*j + 0.03508771929824561*k - 0.01031991744066047*n >= 0)  &&  (1.01611247136877 - 0.01706026380222731*j - 0.004896927572861543*k + 0.0009477924334570729*n >= 0)  &&  (1.05748502994012 + 0.05508982035928144*j - 0.03592814371257485*k - 0.02155688622754491*n >= 0)  &&  (1.107883817427386 + 0.09958506224066391*j - 0.03319502074688797*k - 0.07468879668049792*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:14863-]|-->> [33m(0.9836608723278718 + 0.003812463123496574*j + 0.003177052602913811*k + 0.0125266645486316*n >= 0)  &&  (0.9943820224719101 - 0.01217228464419476*j - 0.001872659176029963*k + 0.01779026217228465*n >= 0)  &&  (1.084745762711864 - 0.02542372881355932*j - 0.0423728813559322*k - 0.0423728813559322*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0)  &&  (1.003238866396761 + 0.04696356275303643*j + 0.02105263157894736*k - 0.0242914979757085*n >= 0)  &&  (1.016511867905057 - 0.006191950464396285*j + 0.03508771929824561*k - 0.01031991744066047*n >= 0)  &&  (1.01611247136877 - 0.01706026380222731*j - 0.004896927572861543*k + 0.0009477924334570729*n >= 0)  &&  (1.05748502994012 + 0.05508982035928144*j - 0.03592814371257485*k - 0.02155688622754491*n >= 0)  &&  (1.107883817427386 + 0.09958506224066391*j - 0.03319502074688797*k - 0.07468879668049792*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:16090-]|-->> [33m(0.9836608723278718 + 0.003812463123496574*j + 0.003177052602913811*k + 0.0125266645486316*n >= 0)  &&  (0.9943820224719101 - 0.01217228464419476*j - 0.001872659176029963*k + 0.01779026217228465*n >= 0)  &&  (1.084745762711864 - 0.02542372881355932*j - 0.0423728813559322*k - 0.0423728813559322*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0)  &&  (1.003238866396761 + 0.04696356275303643*j + 0.02105263157894736*k - 0.0242914979757085*n >= 0)  &&  (1.016511867905057 - 0.006191950464396285*j + 0.03508771929824561*k - 0.01031991744066047*n >= 0)  &&  (1.01611247136877 - 0.01706026380222731*j - 0.004896927572861543*k + 0.0009477924334570729*n >= 0)  &&  (1.05748502994012 + 0.05508982035928144*j - 0.03592814371257485*k - 0.02155688622754491*n >= 0)  &&  (1.107883817427386 + 0.09958506224066391*j - 0.03319502074688797*k - 0.07468879668049792*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:17093-]|-->> [33m(0.9271255060728745 + 0.04453441295546559*j + 0.0728744939271255*k + 0.02834008097165992*n >= 0)  &&  (1.36734693877551 - 0.08163265306122448*j - 0.2448979591836735*k - 0.1224489795918367*n >= 0)  &&  (1.201438848920863 + 0.04316546762589928*j - 0.158273381294964*k - 0.04316546762589928*n >= 0)  &&  (0.9943820224719101 - 0.01217228464419476*j - 0.001872659176029963*k + 0.01779026217228465*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0)  &&  (1.016511867905057 - 0.006191950464396285*j + 0.03508771929824561*k - 0.01031991744066047*n >= 0)  &&  (1.01611247136877 - 0.01706026380222731*j - 0.004896927572861543*k + 0.0009477924334570729*n >= 0)  &&  (1.107883817427386 + 0.09958506224066391*j - 0.03319502074688797*k - 0.07468879668049792*n >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [2+:19255-]|-->> [33m(0.9111111111111111 + 0.1777777777777778*j + 0.2222222222222222*k - 0.08888888888888888*n >= 0)  &&  (1.028985507246377 + 0.2318840579710145*j + 0.02898550724637682*k - 0.05797101449275363*n >= 0)  &&  (1.256410256410256 - 0.1196581196581197*j + 0.03418803418803419*k - 0.1367521367521368*n >= 0)  &&  (0.9271255060728745 + 0.04453441295546559*j + 0.0728744939271255*k + 0.02834008097165992*n >= 0)  &&  (1.36734693877551 - 0.08163265306122448*j - 0.2448979591836735*k - 0.1224489795918367*n >= 0)  &&  (1.201438848920863 + 0.04316546762589928*j - 0.158273381294964*k - 0.04316546762589928*n >= 0)  &&  (0.9943820224719101 - 0.01217228464419476*j - 0.001872659176029963*k + 0.01779026217228465*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0) 
[0m[31m[8][0m[#r48,#s192] -->   [2+:21108-]|-->> [33m(0.9111111111111111 + 0.1777777777777778*j + 0.2222222222222222*k - 0.08888888888888888*n >= 0)  &&  (1.028985507246377 + 0.2318840579710145*j + 0.02898550724637682*k - 0.05797101449275363*n >= 0)  &&  (1.256410256410256 - 0.1196581196581197*j + 0.03418803418803419*k - 0.1367521367521368*n >= 0)  &&  (0.9271255060728745 + 0.04453441295546559*j + 0.0728744939271255*k + 0.02834008097165992*n >= 0)  &&  (1.36734693877551 - 0.08163265306122448*j - 0.2448979591836735*k - 0.1224489795918367*n >= 0)  &&  (1.201438848920863 + 0.04316546762589928*j - 0.158273381294964*k - 0.04316546762589928*n >= 0)  &&  (0.9943820224719101 - 0.01217228464419476*j - 0.001872659176029963*k + 0.01779026217228465*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0) 
[0m[31m[9][0m[#r54,#s216] -->   [2+:22967-]|-->> [33m(0.9111111111111111 + 0.1777777777777778*j + 0.2222222222222222*k - 0.08888888888888888*n >= 0)  &&  (1.028985507246377 + 0.2318840579710145*j + 0.02898550724637682*k - 0.05797101449275363*n >= 0)  &&  (1.256410256410256 - 0.1196581196581197*j + 0.03418803418803419*k - 0.1367521367521368*n >= 0)  &&  (0.9271255060728745 + 0.04453441295546559*j + 0.0728744939271255*k + 0.02834008097165992*n >= 0)  &&  (1.36734693877551 - 0.08163265306122448*j - 0.2448979591836735*k - 0.1224489795918367*n >= 0)  &&  (1.201438848920863 + 0.04316546762589928*j - 0.158273381294964*k - 0.04316546762589928*n >= 0)  &&  (0.9943820224719101 - 0.01217228464419476*j - 0.001872659176029963*k + 0.01779026217228465*n >= 0)  &&  (1.088495575221239 + 0.07079646017699115*j + 0.07079646017699115*k - 0.1592920353982301*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 9 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(41 + 8*j + 10*k - 4*n >= 0)  &&  (899 - 11*j + 16*n >= 0)  &&  (73 - 7*j + 2*k - 8*n >= 0)  &&  (229 + 11*j + 18*k + 7*n >= 0)  &&  (67 - 4*j - 12*k - 6*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(41 + 8*j + 10*k - 4*n >= 0)  &&  (899 - 11*j + 16*n >= 0)  &&  (73 - 7*j + 2*k - 8*n >= 0)  &&  (229 + 11*j + 18*k + 7*n >= 0)  &&  (67 - 4*j - 12*k - 6*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,13,13) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,14,14) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,15,15) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,16,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,17,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,18,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,19,19) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,20,20) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [142+:25481-]|-->> [33m(0.9999523201467309 + 0.6664717610533991*j + 0.6664918405380105*k - 0.6664441606847422*n >= 0)  &&  (0.9999488257278628 + 0.8886273314979644*j + 0.2221824200105598*k - 0.2221312457384226*n >= 0)  &&  (0.9999577725971041 + 0.4847409969138399*j - 0.06057151091278179*k + 0.06061373831567818*n >= 0)  &&  (0.9999614270760575 - 0.3998839597604177*j - 0.3998654769678365*k + 0.3999040498917787*n >= 0)  &&  (0.9999591956493976 - 0.3998694260780713*k + 0.3999102304286737*n >= 0)  &&  (0.9999999999999999 + 0.001026798258589767*j + 0.03696473730923153*k - 0.001026798258589763*n >= 0)  &&  (4.508407935461403 - 0.1520158820209418*j - 0.1520320911449263*k - 0.0233883056281437*n >= 0)  &&  (4.561643835616438 - 0.0136986301369863*j - 0.1643835616438356*k - 0.0136986301369863*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [142+:28882-]|-->> [33m(0.9999502876659569 - 0.9996534257546774*j - 0.9996506015687689*k + 0.9997003139028084*n >= 0)  &&  (0.999949399270605 - 0.9996457948942332*k + 0.9996963956236273*n >= 0)  &&  (0.9999523201467309 + 0.6664717610533991*j + 0.6664918405380105*k - 0.6664441606847422*n >= 0)  &&  (0.9999488257278628 + 0.8886273314979644*j + 0.2221824200105598*k - 0.2221312457384226*n >= 0)  &&  (4.508407935461403 - 0.1520158820209418*j - 0.1520320911449263*k - 0.0233883056281437*n >= 0)  &&  (0.9999999999999999 + 0.001026798258589767*j + 0.03696473730923153*k - 0.001026798258589763*n >= 0)  &&  (4.561643835616438 - 0.0136986301369863*j - 0.1643835616438356*k - 0.0136986301369863*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [142+:31126-]|-->> [33m(0.9999502876659569 - 0.9996534257546774*j - 0.9996506015687689*k + 0.9997003139028084*n >= 0)  &&  (0.999949399270605 - 0.9996457948942332*k + 0.9996963956236273*n >= 0)  &&  (0.9999523201467309 + 0.6664717610533991*j + 0.6664918405380105*k - 0.6664441606847422*n >= 0)  &&  (0.9999488257278628 + 0.8886273314979644*j + 0.2221824200105598*k - 0.2221312457384226*n >= 0)  &&  (4.508407935461403 - 0.1520158820209418*j - 0.1520320911449263*k - 0.0233883056281437*n >= 0)  &&  (0.9999999999999999 + 0.001026798258589767*j + 0.03696473730923153*k - 0.001026798258589763*n >= 0)  &&  (4.561643835616438 - 0.0136986301369863*j - 0.1643835616438356*k - 0.0136986301369863*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [142+:33852-]|-->> [33m(0.9999502876659569 - 0.9996534257546774*j - 0.9996506015687689*k + 0.9997003139028084*n >= 0)  &&  (0.999949399270605 - 0.9996457948942332*k + 0.9996963956236273*n >= 0)  &&  (0.9999523201467309 + 0.6664717610533991*j + 0.6664918405380105*k - 0.6664441606847422*n >= 0)  &&  (0.9999488257278628 + 0.8886273314979644*j + 0.2221824200105598*k - 0.2221312457384226*n >= 0)  &&  (4.508407935461403 - 0.1520158820209418*j - 0.1520320911449263*k - 0.0233883056281437*n >= 0)  &&  (0.9999999999999999 + 0.001026798258589767*j + 0.03696473730923153*k - 0.001026798258589763*n >= 0)  &&  (4.561643835616438 - 0.0136986301369863*j - 0.1643835616438356*k - 0.0136986301369863*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - j - k + n >= 0)  &&  (27 + k >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0)  &&  (9 + 8*j + 2*k - 2*n >= 0)  &&  (59 - 2*j - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 - j - k + n >= 0)  &&  (27 + k >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0)  &&  (9 + 8*j + 2*k - 2*n >= 0)  &&  (59 - 2*j - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,30,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,31,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,32,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,33,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,34,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,35,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,36,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,37,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [418+:35901-]|-->> [33m(0.9999723284372699 - 0.999572180847341*j - 0.999570000708049*k + 0.9995976722707791*n >= 0)  &&  (0.9999728025253951 - 0.9995784391436073*k + 0.9996056366182122*n >= 0)  &&  (16.69465894558962 - 0.1211884793652491*j - 0.1211974987981601*k - 0.3029824727042612*n >= 0)  &&  (15.50980392156862 + 0.03921568627450978*j - 0.1960784313725488*k - 0.1960784313725488*n >= 0)  &&  (0.999973660460622 + 0.6664152356616122*j + 0.6664208309658104*k - 0.6663944914264324*n >= 0)  &&  (0.9999734534908296 + 0.8885526331060599*j + 0.2221514315311004*k - 0.2221248850219295*n >= 0)  &&  (0.9999878922480357 + 0.00103316641544835*j + 0.03697605142078195*k - 0.001021058663483981*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [418+:38840-]|-->> [33m(0.9999722553278332 + 1.999416497538527*j + 1.99941736188444*k - 1.999389617212259*n >= 0)  &&  (0.9999722380407832 + 1.999416998856454*j + 1.388097960841606e-05*k + 1.388097960841606e-05*n >= 0)  &&  (1.000007657738319 - 0.07909063719045273*j + 0.1807698475915277*k + 0.07908297945213405*n >= 0)  &&  (0.9999723284372699 - 0.999572180847341*j - 0.999570000708049*k + 0.9995976722707791*n >= 0)  &&  (0.9999728025253951 - 0.9995784391436073*k + 0.9996056366182122*n >= 0)  &&  (16.69465894558962 - 0.1211884793652491*j - 0.1211974987981601*k - 0.3029824727042612*n >= 0)  &&  (15.50980392156862 + 0.03921568627450978*j - 0.1960784313725488*k - 0.1960784313725488*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [418+:41588-]|-->> [33m(0.9999722553278332 + 1.999416497538527*j + 1.99941736188444*k - 1.999389617212259*n >= 0)  &&  (0.9999722380407832 + 1.999416998856454*j + 1.388097960841606e-05*k + 1.388097960841606e-05*n >= 0)  &&  (1.000007657738319 - 0.07909063719045273*j + 0.1807698475915277*k + 0.07908297945213405*n >= 0)  &&  (0.9999723284372699 - 0.999572180847341*j - 0.999570000708049*k + 0.9995976722707791*n >= 0)  &&  (0.9999728025253951 - 0.9995784391436073*k + 0.9996056366182122*n >= 0)  &&  (16.69465894558962 - 0.1211884793652491*j - 0.1211974987981601*k - 0.3029824727042612*n >= 0)  &&  (15.50980392156862 + 0.03921568627450978*j - 0.1960784313725488*k - 0.1960784313725488*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*j + 2*k - 2*n >= 0)  &&  (55 - n >= 0)  &&  (89 - 7*j + 16*k + 7*n >= 0)  &&  (1 - j - k + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + 2*j + 2*k - 2*n >= 0)  &&  (55 - n >= 0)  &&  (89 - 7*j + 16*k + 7*n >= 0)  &&  (1 - j - k + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,56,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,57,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,58,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,59,59) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,60,60) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,61,61) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,62,62) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,63,63) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [902+:43934-]|-->> [33m(1.000011633084569 - 1.999161427471301*j - 1.999165836002135*k + 1.999149794386767*n >= 0)  &&  (1.000016111789819 - 1.999162186931159*k + 1.99914607514134*n >= 0)  &&  (1.797953964194373 + 0.004627938131774449*j - 0.02021678236511996*k + 0.007550846425526733*n >= 0)  &&  (1.00001077464367 + 1.999558239608885*j + 1.99954249801624*k - 1.999553272659881*n >= 0)  &&  (1.000016128894202 + 1.999338715337192*j - 8.06444710121923e-06*k - 8.06444710121923e-06*n >= 0)  &&  (2.965562913907285 - 0.02089771891096395*j - 0.006769683590875644*k - 0.01030169242089772*n >= 0)  &&  (0.9999861206340988 + 0.001034257285128178*j + 0.03698343367839138*k - 0.001020377919226899*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [902+:45277-]|-->> [33m(1.000011633084569 - 1.999161427471301*j - 1.999165836002135*k + 1.999149794386767*n >= 0)  &&  (1.000016111789819 - 1.999162186931159*k + 1.99914607514134*n >= 0)  &&  (1.797953964194373 + 0.004627938131774449*j - 0.02021678236511996*k + 0.007550846425526733*n >= 0)  &&  (1.00001077464367 + 1.999558239608885*j + 1.99954249801624*k - 1.999553272659881*n >= 0)  &&  (1.000016128894202 + 1.999338715337192*j - 8.06444710121923e-06*k - 8.06444710121923e-06*n >= 0)  &&  (2.965562913907285 - 0.02089771891096395*j - 0.006769683590875644*k - 0.01030169242089772*n >= 0)  &&  (0.9999861206340988 + 0.001034257285128178*j + 0.03698343367839138*k - 0.001020377919226899*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*j - 2*k + 2*n >= 0)  &&  (27 + k >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 - 2*j - 2*k + 2*n >= 0)  &&  (27 + k >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (2,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-5,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-6,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-7,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-8,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [902+:46733-]|-->> [33m(0.9999857267223144 - 0.6663669278352706*j + 1.332748128948227*k + 0.666381201112956*n >= 0)  &&  (1.000011633084569 - 1.999161427471301*j - 1.999165836002135*k + 1.999149794386767*n >= 0)  &&  (1.797953964194373 + 0.004627938131774449*j - 0.02021678236511996*k + 0.007550846425526733*n >= 0)  &&  (1.000016111789819 - 1.999162186931159*k + 1.99914607514134*n >= 0)  &&  (1.00001077464367 + 1.999558239608885*j + 1.99954249801624*k - 1.999553272659881*n >= 0)  &&  (1.000016128894202 + 1.999338715337192*j - 8.06444710121923e-06*k - 8.06444710121923e-06*n >= 0)  &&  (2.965562913907285 - 0.02089771891096395*j - 0.006769683590875644*k - 0.01030169242089772*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [902+:48514-]|-->> [33m(0.9999857267223144 - 0.6663669278352706*j + 1.332748128948227*k + 0.666381201112956*n >= 0)  &&  (1.000011633084569 - 1.999161427471301*j - 1.999165836002135*k + 1.999149794386767*n >= 0)  &&  (1.797953964194373 + 0.004627938131774449*j - 0.02021678236511996*k + 0.007550846425526733*n >= 0)  &&  (1.000016111789819 - 1.999162186931159*k + 1.99914607514134*n >= 0)  &&  (1.00001077464367 + 1.999558239608885*j + 1.99954249801624*k - 1.999553272659881*n >= 0)  &&  (1.000016128894202 + 1.999338715337192*j - 8.06444710121923e-06*k - 8.06444710121923e-06*n >= 0)  &&  (2.965562913907285 - 0.02089771891096395*j - 0.006769683590875644*k - 0.01030169242089772*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [902+:49738-]|-->> [33m(0.9999857267223144 - 0.6663669278352706*j + 1.332748128948227*k + 0.666381201112956*n >= 0)  &&  (1.000011633084569 - 1.999161427471301*j - 1.999165836002135*k + 1.999149794386767*n >= 0)  &&  (1.797953964194373 + 0.004627938131774449*j - 0.02021678236511996*k + 0.007550846425526733*n >= 0)  &&  (1.000016111789819 - 1.999162186931159*k + 1.99914607514134*n >= 0)  &&  (1.00001077464367 + 1.999558239608885*j + 1.99954249801624*k - 1.999553272659881*n >= 0)  &&  (1.000016128894202 + 1.999338715337192*j - 8.06444710121923e-06*k - 8.06444710121923e-06*n >= 0)  &&  (2.965562913907285 - 0.02089771891096395*j - 0.006769683590875644*k - 0.01030169242089772*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 - 2*j + 4*k + 2*n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - 2*k + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(3 - 2*j + 4*k + 2*n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - 2*k + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(3 - 2*j + 4*k + 2*n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - 2*k + 2*n >= 0) [0m

=====================time=========================
