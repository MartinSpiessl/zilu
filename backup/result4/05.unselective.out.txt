[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear--> polynomial--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 05
[  8%] Building CXX object CMakeFiles/05.dir/test/05.cpp.o
[ 16%] Building CXX object CMakeFiles/05.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/05.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/05.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/05.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/05.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/05.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/05.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/05.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/05.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/05.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/05.dir/src/instrumentation.cpp.o
Linking CXX executable 05
[100%] Built target 05
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->  [25+:83-]|-->> [33m(1 - 0.05263203960410606*i + 0.06686257118692598*j >= 0) [0m
[31m[2Pure Random][0m[#r40,#s0] -->  [25+:188-]|-->> [33m(1 - 0.1926080189935675*i + 0.2004562235026435*j >= 0) [0m
[31m[3Pure Random][0m[#r60,#s0] -->  [25+:287-]|-->> [33m(1 - 0.1926077265409041*i + 0.200455919133403*j >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(104 - 20*i + 21*j >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/05.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/05.inv >>> [0m(104 - 20*i + 21*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-4,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->  [45+:358-]|-->> [33m(1 - 0.4803364498257331*i + 0.5064409510181758*j >= 0) [0m
[31m[2Pure Random][0m[#r40,#s0] -->  [45+:426-]|-->> [33m(1.329506591950576 - 0.6590131839011164*i + 0.6516908151911061*j >= 0) [0m
[31m[3Pure Random][0m[#r60,#s0] -->  [45+:451-]|-->> [33m(1.329506591950576 - 0.6590131839011164*i + 0.6516908151911061*j >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(96 - 48*i + 47*j >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/05.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/05.inv >>> [0m(96 - 48*i + 47*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/05.cnt --> [0m?
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->  [45+:496-]|-->> [33m(1 - 1.999208012045959*i + 1.999229417125794*j >= 0) [0m
[31m[2Pure Random][0m[#r40,#s0] -->  [45+:528-]|-->> [33m(1 - 1.999208012045959*i + 1.999229417125794*j >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(1 - 2*i + 2*j >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/05.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/05.inv >>> [0m(1 - 2*i + 2*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*i + 2*j >= 0) [0m

=====================time=========================
