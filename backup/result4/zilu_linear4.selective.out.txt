[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_linear4
[  8%] Building CXX object CMakeFiles/zilu_linear4.dir/test/zilu_linear4.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_linear4.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_linear4.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_linear4.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_linear4.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_linear4.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_linear4.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_linear4.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_linear4.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_linear4.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_linear4.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_linear4.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_linear4
[100%] Built target zilu_linear4
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [472+:149-]|-->> [33m(0.9690958889723067 + 0.03090411102769333*xa + 0.06563652963241023*ya >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [2294+:151-]|-->> [33m(0.918750144648502 + 0.08999983977396712*xa + 0.08124985535149808*ya >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [2296+:914-]|-->> [33m(0.8412725528315932 + 0.1587274471684068*xa + 0.1950067863183971*ya >= 0) [0m
[31m[4][0m[#r16,#s64] -->  [3201+:916-]|-->> [33m(0.8243870956630869 + 0.1756129043369132*xa + 0.1853704131775984*ya >= 0) [0m
[31m[5][0m[#r20,#s80] -->  [3573+:945-]|-->> [33m(0.6026478199599248 + 0.3973521800400751*xa + 0.4006922937812966*ya >= 0) [0m
[31m[6][0m[#r24,#s96] -->  [3764+:1103-]|-->> [33m(1.221245327087672e-15 + 0.9999999999999988*xa + 1*ya >= 0) [0m
[31m[7][0m[#r28,#s112] -->  [4107+:1308-]|-->> [33m( -4.479467849982655e-07 + 1.000000472160125*xa + 1.000000447946785*ya >= 0) [0m
[31m[8][0m[#r32,#s128] -->  [4397+:1440-]|-->> [33m(0.000749776833703919 + 0.9997811385890543*xa + 0.9997839626072479*ya >= 0) [0m
[31m[9][0m[#r36,#s144] -->  [4642+:1441-]|-->> [33m(0.000749382128532261 + 0.9997812538064531*xa + 0.9997840763379584*ya >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(xa + ya >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.inv >>> [0m(xa + ya >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(xa + ya >= 0) [0m

=====================time=========================
