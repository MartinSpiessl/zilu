[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_28
[  8%] Building CXX object CMakeFiles/dillig_28.dir/test/dillig_28.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_28.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_28.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_28.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_28.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_28.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_28.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_28.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_28.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_28.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_28.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_28.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_28
[100%] Built target dillig_28
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2149-]|-->> [33m(1.002595880087088 - 0.005442974376151399*x + 0.002847094289063809*y + 0.006782783453357897*n >= 0)  &&  (1 + 0.02325040688212044*x - 0.01627528481748431*y + 0.01116019530341781*n >= 0)  &&  (1.053475935828877 - 0.0106951871657754*x - 0.0427807486631016*y >= 0)  &&  (1 - 0.003683955404750363*x + 0.004362578768783325*y - 0.01269995152690257*n >= 0)  &&  (1 + 0.00317011523797284*x + 0.008439360836224994*y + 0.002099130360279313*n >= 0)  &&  (1.005792796138136 - 0.01470479019680653*x + 0.008911994058670627*y + 0.001188265874489417*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:4349-]|-->> [33m(1 + 0.006263048016701462*x - 0.004175365344467641*y - 0.02018093249826027*n >= 0)  &&  (1 + 0.02325040688212044*x - 0.01627528481748431*y + 0.01116019530341781*n >= 0)  &&  (1.020237264480112 - 0.02512212142358688*x + 0.004884856943475227*y + 0.02721563154221912*n >= 0)  &&  (1.03813155386082 - 0.03114076898633619*x - 0.006990784874483636*y - 0.01588814744200826*n >= 0)  &&  (1 + 0.00317011523797284*x + 0.008439360836224994*y + 0.002099130360279313*n >= 0)  &&  (1.005792796138136 - 0.01470479019680653*x + 0.008911994058670627*y + 0.001188265874489417*n >= 0)  &&  (1 - 0.003683955404750363*x + 0.004362578768783325*y - 0.01269995152690257*n >= 0)  &&  (1 + 0.003704526931910795*x + 0.01096539971845595*y + 0.01274357264577313*n >= 0)  &&  (1.053475935828877 - 0.0106951871657754*x - 0.0427807486631016*y >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:6317-]|-->> [33m(1 - 0.01733427032091825*x + 0.024361677207777*y - 0.006558913094401499*n >= 0)  &&  (1 + 0.02325040688212044*x - 0.01627528481748431*y + 0.01116019530341781*n >= 0)  &&  (1 + 0.006263048016701462*x - 0.004175365344467641*y - 0.02018093249826027*n >= 0)  &&  (1.020237264480112 - 0.02512212142358688*x + 0.004884856943475227*y + 0.02721563154221912*n >= 0)  &&  (1 + 0.00317011523797284*x + 0.008439360836224994*y + 0.002099130360279313*n >= 0)  &&  (1.03813155386082 - 0.03114076898633619*x - 0.006990784874483636*y - 0.01588814744200826*n >= 0)  &&  (1 + 0.003704526931910795*x + 0.01096539971845595*y + 0.01274357264577313*n >= 0)  &&  (1.053475935828877 - 0.0106951871657754*x - 0.0427807486631016*y >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:8125-]|-->> [33m(1 + 0.02893309222423146*x + 0.02097649186256781*y - 0.01301989150090416*n >= 0)  &&  (1 + 0.02325040688212044*x - 0.01627528481748431*y + 0.01116019530341781*n >= 0)  &&  (1 - 0.01733427032091825*x + 0.024361677207777*y - 0.006558913094401499*n >= 0)  &&  (1 + 0.006263048016701462*x - 0.004175365344467641*y - 0.02018093249826027*n >= 0)  &&  (1.020237264480112 - 0.02512212142358688*x + 0.004884856943475227*y + 0.02721563154221912*n >= 0)  &&  (1.03813155386082 - 0.03114076898633619*x - 0.006990784874483636*y - 0.01588814744200826*n >= 0)  &&  (1 + 0.003704526931910795*x + 0.01096539971845595*y + 0.01274357264577313*n >= 0)  &&  (1.053475935828877 - 0.0106951871657754*x - 0.0427807486631016*y >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:9089-]|-->> [33m(1 - 0.07142857142857142*x + 0.2142857142857143*y + 0.1428571428571428*n >= 0)  &&  (1 + 0.02325040688212044*x - 0.01627528481748431*y + 0.01116019530341781*n >= 0)  &&  (1.181818181818182 - 0.2121212121212121*x + 0.0303030303030303*y + 0.1212121212121212*n >= 0)  &&  (1.171428571428571 - 0.1238095238095238*x - 0.04761904761904762*y + 0.0380952380952381*n >= 0)  &&  (1.090322580645161 - 0.05376344086021505*x - 0.03655913978494624*y + 0.008602150537634409*n >= 0)  &&  (1 + 0.02893309222423146*x + 0.02097649186256781*y - 0.01301989150090416*n >= 0)  &&  (1 - 0.01733427032091825*x + 0.024361677207777*y - 0.006558913094401499*n >= 0)  &&  (1 + 0.006263048016701462*x - 0.004175365344467641*y - 0.02018093249826027*n >= 0)  &&  (1.053475935828877 - 0.0106951871657754*x - 0.0427807486631016*y >= 0)  &&  (1.03813155386082 - 0.03114076898633619*x - 0.006990784874483636*y - 0.01588814744200826*n >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [2+:12767-]|-->> [33m(1.066555740432612 + 0.01331114808652246*x - 0.07986688851913477*y + 0.009983361064891847*n >= 0)  &&  (1 + 0.02325040688212044*x - 0.01627528481748431*y + 0.01116019530341781*n >= 0)  &&  (1 - 0.07142857142857142*x + 0.2142857142857143*y + 0.1428571428571428*n >= 0)  &&  (1.181818181818182 - 0.2121212121212121*x + 0.0303030303030303*y + 0.1212121212121212*n >= 0)  &&  (1.171428571428571 - 0.1238095238095238*x - 0.04761904761904762*y + 0.0380952380952381*n >= 0)  &&  (1 + 0.02893309222423146*x + 0.02097649186256781*y - 0.01301989150090416*n >= 0)  &&  (1 - 0.01733427032091825*x + 0.024361677207777*y - 0.006558913094401499*n >= 0)  &&  (1 + 0.006263048016701462*x - 0.004175365344467641*y - 0.02018093249826027*n >= 0)  &&  (1.03813155386082 - 0.03114076898633619*x - 0.006990784874483636*y - 0.01588814744200826*n >= 0) 
[0m[31m[7Pure Random][0m[#r210,#s0] -->   [2+:14841-]|-->> [33m(1.066555740432612 + 0.01331114808652246*x - 0.07986688851913477*y + 0.009983361064891847*n >= 0)  &&  (1 + 0.02325040688212044*x - 0.01627528481748431*y + 0.01116019530341781*n >= 0)  &&  (1 - 0.07142857142857142*x + 0.2142857142857143*y + 0.1428571428571428*n >= 0)  &&  (1.181818181818182 - 0.2121212121212121*x + 0.0303030303030303*y + 0.1212121212121212*n >= 0)  &&  (1.171428571428571 - 0.1238095238095238*x - 0.04761904761904762*y + 0.0380952380952381*n >= 0)  &&  (1 + 0.02893309222423146*x + 0.02097649186256781*y - 0.01301989150090416*n >= 0)  &&  (1 - 0.01733427032091825*x + 0.024361677207777*y - 0.006558913094401499*n >= 0)  &&  (1 + 0.006263048016701462*x - 0.004175365344467641*y - 0.02018093249826027*n >= 0)  &&  (1.03813155386082 - 0.03114076898633619*x - 0.006990784874483636*y - 0.01588814744200826*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 7 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(80 + x - 6*y >= 0)  &&  (998 + 29*x + 21*y - 13*n >= 0)  &&  (14 - x + 3*y + 2*n >= 0)  &&  (123 - 13*x - 5*y + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(80 + x - 6*y >= 0)  &&  (998 + 29*x + 21*y - 13*n >= 0)  &&  (14 - x + 3*y + 2*n >= 0)  &&  (123 - 13*x - 5*y + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (17,17,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (18,18,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (17,17,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (17,17,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (19,19,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (20,20,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (17,17,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (17,17,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [86+:15866-]|-->> [33m(1.181847577214572 - 0.2424210245849924*x + 0.2424191112751679*y + 0.06060501698252005*n >= 0)  &&  (1.043966780654616 + 0.02296042989741084*x - 0.01856375183194919*y + 0.01025891548607719*n >= 0)  &&  (5.117647058823529 - 0.2745098039215688*x + 0.03921568627450989*y + 0.03921568627450983*n >= 0)  &&  (4.17711338369304 - 0.1326550540195916*x - 0.04945572507928375*y + 0.02735895284026275*n >= 0)  &&  (1.101367658889783 + 0.02976669348350764*x + 0.02091713596138375*y - 0.0168946098149638*n >= 0)  &&  (1.12603706972639 + 0.007060900264783759*x + 0.02224183583406884*y + 0.01270962047661077*n >= 0)  &&  (1.335729386892178 - 0.02536997885835095*x + 0.01099365750528541*y + 0.03044397463002114*n >= 0)  &&  (1.147041661804178 - 0.002333994631812347*x + 0.007352083090208893*y - 0.01318706966973976*n >= 0)  &&  (2.087221095334685 - 0.05882352941176471*x + 0.01825557809330629*y - 0.01622718052738337*n >= 0)  &&  (1.128267419708693 + 0.05667813326874077*x - 0.0640287017334223*y + 0.001102585269702217*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [86+:18529-]|-->> [33m(1.181847577214572 - 0.2424210245849924*x + 0.2424191112751679*y + 0.06060501698252005*n >= 0)  &&  (1.043966780654616 + 0.02296042989741084*x - 0.01856375183194919*y + 0.01025891548607719*n >= 0)  &&  (5.117647058823529 - 0.2745098039215688*x + 0.03921568627450989*y + 0.03921568627450983*n >= 0)  &&  (4.17711338369304 - 0.1326550540195916*x - 0.04945572507928375*y + 0.02735895284026275*n >= 0)  &&  (1.101367658889783 + 0.02976669348350764*x + 0.02091713596138375*y - 0.0168946098149638*n >= 0)  &&  (1.12603706972639 + 0.007060900264783759*x + 0.02224183583406884*y + 0.01270962047661077*n >= 0)  &&  (1.335729386892178 - 0.02536997885835095*x + 0.01099365750528541*y + 0.03044397463002114*n >= 0)  &&  (1.147041661804178 - 0.002333994631812347*x + 0.007352083090208893*y - 0.01318706966973976*n >= 0)  &&  (2.087221095334685 - 0.05882352941176471*x + 0.01825557809330629*y - 0.01622718052738337*n >= 0)  &&  (1.128267419708693 + 0.05667813326874077*x - 0.0640287017334223*y + 0.001102585269702217*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(39 - 8*x + 8*y + 2*n >= 0)  &&  (159 + 8*x - 9*y >= 0)  &&  (261 + 7*x + 5*y - 4*n >= 0)  &&  (253 - 8*x - 3*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(39 - 8*x + 8*y + 2*n >= 0)  &&  (159 + 8*x - 9*y >= 0)  &&  (261 + 7*x + 5*y - 4*n >= 0)  &&  (253 - 8*x - 3*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (-19,-19,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-20,-20,-21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-21,-21,-22) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-22,-22,-23) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-23,-23,-24) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-1,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-24,-24,-25) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [117+:21228-]|-->> [33m(1.000092878096943 - 0.250008896559649*x + 0.2499664956893062*y + 4.441995940643317e-05*n >= 0)  &&  (5.117647058823525 - 0.2745098039215683*x + 0.03921568627450978*y + 0.03921568627450975*n >= 0)  &&  (4.179840087014224 - 0.1327137693488177*x - 0.04948401594237298*y + 0.02730091875350527*n >= 0)  &&  (0.9997483548783257 + 0.02424280526154836*x + 0.01265092747009988*y - 0.0368780049115436*n >= 0)  &&  (1.540258350324994 - 0.03900483372621124*x + 0.03337714257699258*y + 0.02701291751624971*n >= 0)  &&  (1.528411912264396 - 0.03235780811057255*x + 0.005937212497352763*y + 0.02642059561321979*n >= 0)  &&  (2.087221095334685 - 0.05882352941176471*x + 0.01825557809330629*y - 0.01622718052738337*n >= 0)  &&  (1.99040228711456 + 0.008576679599754953*x + 0.004084133142740453*y + 0.02695527874208699*n >= 0)  &&  (1.128268128268944 + 0.05667844636362025*x - 0.06402905543347372*y + 0.001102591360478026*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [117+:22693-]|-->> [33m(1.000092878096943 - 0.250008896559649*x + 0.2499664956893062*y + 4.441995940643317e-05*n >= 0)  &&  (5.117647058823525 - 0.2745098039215683*x + 0.03921568627450978*y + 0.03921568627450975*n >= 0)  &&  (4.179840087014224 - 0.1327137693488177*x - 0.04948401594237298*y + 0.02730091875350527*n >= 0)  &&  (0.9997483548783257 + 0.02424280526154836*x + 0.01265092747009988*y - 0.0368780049115436*n >= 0)  &&  (1.540258350324994 - 0.03900483372621124*x + 0.03337714257699258*y + 0.02701291751624971*n >= 0)  &&  (1.528411912264396 - 0.03235780811057255*x + 0.005937212497352763*y + 0.02642059561321979*n >= 0)  &&  (2.087221095334685 - 0.05882352941176471*x + 0.01825557809330629*y - 0.01622718052738337*n >= 0)  &&  (1.99040228711456 + 0.008576679599754953*x + 0.004084133142740453*y + 0.02695527874208699*n >= 0)  &&  (1.128268128268944 + 0.05667844636362025*x - 0.06402905543347372*y + 0.001102591360478026*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(4 - x + y >= 0)  &&  (159 + 8*x - 9*y >= 0)  &&  (74 + n >= 0)  &&  (790 + 19*x + 10*y - 29*n >= 0)  &&  (71 - 2*x >= 0)  &&  (521 - 11*x + 9*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(4 - x + y >= 0)  &&  (159 + 8*x - 9*y >= 0)  &&  (74 + n >= 0)  &&  (790 + 19*x + 10*y - 29*n >= 0)  &&  (71 - 2*x >= 0)  &&  (521 - 11*x + 9*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (160,160,159) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (161,161,160) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (160,160,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (160,160,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (162,162,161) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (163,163,160) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (160,160,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (160,160,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [697+:25586-]|-->> [33m(0.9998824993722337 - 0.2498924262677154*x + 0.2498870227972834*y + 7.034453209930902e-07*n >= 0)  &&  (11.28609438875387 - 0.06700143541783343*x + 0.002740690762012832*y + 0.001177543688405447*n >= 0)  &&  (0.9998678875080032 + 0.2498994547274638*x - 0.2499033996571063*y - 1.33957003711771e-06*n >= 0)  &&  (0.9998788151153004 - 0.01845446105035037*x + 0.04230490746196278*y - 0.02385529380700044*n >= 0)  &&  (1.512808556461232 - 0.009704445655406378*x + 0.006936375932673099*y + 0.02316968919227324*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [697+:28207-]|-->> [33m(0.9998824993722337 - 0.2498924262677154*x + 0.2498870227972834*y + 7.034453209930902e-07*n >= 0)  &&  (11.28609438875387 - 0.06700143541783343*x + 0.002740690762012832*y + 0.001177543688405447*n >= 0)  &&  (0.9998678875080032 + 0.2498994547274638*x - 0.2499033996571063*y - 1.33957003711771e-06*n >= 0)  &&  (0.9998788151153004 - 0.01845446105035037*x + 0.04230490746196278*y - 0.02385529380700044*n >= 0)  &&  (1.512808556461232 - 0.009704445655406378*x + 0.006936375932673099*y + 0.02316968919227324*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(4 - x + y >= 0)  &&  (65 + n >= 0)  &&  (4 + x - y >= 0)  &&  (379 - 7*x + 16*y - 9*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(4 - x + y >= 0)  &&  (65 + n >= 0)  &&  (4 + x - y >= 0)  &&  (379 - 7*x + 16*y - 9*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (-65,-65,-66) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-66,-66,-67) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-67,-67,-68) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,-66) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-68,-68,-69) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-69,-69,-70) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-1,-66) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-70,-70,-71) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [774+:30238-]|-->> [33m(1.00060136952564 + 0.03319674428447544*x + 0.03688540976847066*y - 0.07008588926739112*n >= 0)  &&  (35.71111111111111 + 0.08888888888888857*x + 0.1777777777777776*y + 0.2222222222222219*n >= 0)  &&  (1.000684123679548 + 0.2498942514350047*x - 0.2498981860666083*y - 2.901450919523541e-07*n >= 0)  &&  (14.3067667871898 - 0.02800691017065532*x + 0.01360848268312045*y + 0.2016176785937847*n >= 0)  &&  (8.665653589145847 - 0.03019080959190704*x - 0.0155416090112145*y + 0.1161555375488024*n >= 0)  &&  (0.9994315202584403 - 0.2498857791363669*x + 0.2498834323337853*y + 5.943803513541734e-06*n >= 0)  &&  (11.28621039230259 - 0.06700246244950109*x + 0.002740737664664206*y + 0.001177817172661411*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [774+:31713-]|-->> [33m(1.000693860072715 + 0.5712567995029048*x + 0.1428131224532549*y - 0.7140742316460447*n >= 0)  &&  (35.71111111111111 + 0.08888888888888857*x + 0.1777777777777776*y + 0.2222222222222219*n >= 0)  &&  (1.000684123679548 + 0.2498942514350047*x - 0.2498981860666083*y - 2.901450919523541e-07*n >= 0)  &&  (14.3067667871898 - 0.02800691017065532*x + 0.01360848268312045*y + 0.2016176785937847*n >= 0)  &&  (8.665653589145847 - 0.03019080959190704*x - 0.0155416090112145*y + 0.1161555375488024*n >= 0)  &&  (0.9994315202584403 - 0.2498857791363669*x + 0.2498834323337853*y + 5.943803513541734e-06*n >= 0)  &&  (11.28621039230259 - 0.06700246244950109*x + 0.002740737664664206*y + 0.001177817172661411*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [774+:34145-]|-->> [33m(1.000693860072715 + 0.5712567995029048*x + 0.1428131224532549*y - 0.7140742316460447*n >= 0)  &&  (35.71111111111111 + 0.08888888888888857*x + 0.1777777777777776*y + 0.2222222222222219*n >= 0)  &&  (1.000684123679548 + 0.2498942514350047*x - 0.2498981860666083*y - 2.901450919523541e-07*n >= 0)  &&  (14.3067667871898 - 0.02800691017065532*x + 0.01360848268312045*y + 0.2016176785937847*n >= 0)  &&  (8.665653589145847 - 0.03019080959190704*x - 0.0155416090112145*y + 0.1161555375488024*n >= 0)  &&  (0.9994315202584403 - 0.2498857791363669*x + 0.2498834323337853*y + 5.943803513541734e-06*n >= 0)  &&  (11.28621039230259 - 0.06700246244950109*x + 0.002740737664664206*y + 0.001177817172661411*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(7 + 4*x + y - 5*n >= 0)  &&  (4 - x + y >= 0)  &&  (4 + x - y >= 0)  &&  (71 + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(7 + 4*x + y - 5*n >= 0)  &&  (4 - x + y >= 0)  &&  (4 + x - y >= 0)  &&  (71 + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (0,0,-72) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-1,-73) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-2,-2,-74) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-3,-3,-75) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-4,-4,-76) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-5,-5,-77) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-6,-6,-78) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-7,-7,-79) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1358+:36083-]|-->> [33m(1.000670527173497 + 0.5712530563299403*x + 0.142812222891223*y - 0.7140694439862116*n >= 0)  &&  (5.241610738255034 + 0.01497160557563242*x + 0.01393908105317501*y + 0.0247805885389778*n >= 0)  &&  (1.000668883767503 + 0.2498962134742628*x - 0.2498970005430872*y - 3.362600106804337e-06*n >= 0)  &&  (1.000121361577811 - 0.9995266984057944*x + 0.99952620361822*y + 1.406518869373485e-05*n >= 0)  &&  (51.9599660523844 - 0.6312421938811208*x + 0.325345783235462*y + 0.6721801163596126*n >= 0)  &&  (35.41981915232424 - 0.2342469078954302*x + 0.02763579663692028*y + 0.4540137836542613*n >= 0)  &&  (11.28621696264068 - 0.06700252061966372*x + 0.002740740321188817*y + 0.001177832662566991*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1358+:38503-]|-->> [33m(1.000670527173497 + 0.5712530563299403*x + 0.142812222891223*y - 0.7140694439862116*n >= 0)  &&  (5.241610738255034 + 0.01497160557563242*x + 0.01393908105317501*y + 0.0247805885389778*n >= 0)  &&  (1.000668883767503 + 0.2498962134742628*x - 0.2498970005430872*y - 3.362600106804337e-06*n >= 0)  &&  (1.000121361577811 - 0.9995266984057944*x + 0.99952620361822*y + 1.406518869373485e-05*n >= 0)  &&  (51.9599660523844 - 0.6312421938811208*x + 0.325345783235462*y + 0.6721801163596126*n >= 0)  &&  (35.41981915232424 - 0.2342469078954302*x + 0.02763579663692028*y + 0.4540137836542613*n >= 0)  &&  (11.28621696264068 - 0.06700252061966372*x + 0.002740740321188817*y + 0.001177832662566991*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(7 + 4*x + y - 5*n >= 0)  &&  (78 + n >= 0)  &&  (4 + x - y >= 0)  &&  (1 - x + y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(7 + 4*x + y - 5*n >= 0)  &&  (78 + n >= 0)  &&  (4 + x - y >= 0)  &&  (1 - x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (0,0,-79) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-1,-80) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-2,-2,-81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-3,-3,-82) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-4,-4,-83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-5,-5,-84) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-6,-6,-85) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-7,-7,-86) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1925+:40790-]|-->> [33m(1.000651657212074 + 0.5712499005508356*x + 0.1428114632476252*y - 0.7140654113587921*n >= 0)  &&  (1.000537344189951 + 0.03319735961708936*x + 0.03688607874274941*y - 0.0700867759013914*n >= 0)  &&  (1.000644496195036 + 0.2498953336294285*x - 0.2498970504655107*y - 2.27558229770608e-06*n >= 0)  &&  (1.000498041190525 - 0.01845477893978237*x + 0.04230756137268479*y - 0.02385587585644611*n >= 0)  &&  (5.189614125793915 + 0.001188205934711833*x - 0.00118820593471182*y + 0.04871644332318506*n >= 0)  &&  (1.000113712142138 - 0.9995616569391039*x + 0.9995611893108407*y + 1.29638730612669e-05*n >= 0)  &&  (55.96694256629507 - 0.6884508876222437*x + 0.3573970277241569*y + 0.6661083275339408*n >= 0)  &&  (37.74186756061499 - 0.2383825375772646*x + 0.01709438657310214*y + 0.4452544666496969*n >= 0)  &&  (5.369172036369804 - 0.01473447395033917*x - 0.01158028123268254*y + 0.05293706902877447*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1925+:42116-]|-->> [33m(1.000651657212074 + 0.5712499005508356*x + 0.1428114632476252*y - 0.7140654113587921*n >= 0)  &&  (1.000537344189951 + 0.03319735961708936*x + 0.03688607874274941*y - 0.0700867759013914*n >= 0)  &&  (1.000644496195036 + 0.2498953336294285*x - 0.2498970504655107*y - 2.27558229770608e-06*n >= 0)  &&  (1.000498041190525 - 0.01845477893978237*x + 0.04230756137268479*y - 0.02385587585644611*n >= 0)  &&  (5.189614125793915 + 0.001188205934711833*x - 0.00118820593471182*y + 0.04871644332318506*n >= 0)  &&  (1.000113712142138 - 0.9995616569391039*x + 0.9995611893108407*y + 1.29638730612669e-05*n >= 0)  &&  (55.96694256629507 - 0.6884508876222437*x + 0.3573970277241569*y + 0.6661083275339408*n >= 0)  &&  (37.74186756061499 - 0.2383825375772646*x + 0.01709438657310214*y + 0.4452544666496969*n >= 0)  &&  (5.369172036369804 - 0.01473447395033917*x - 0.01158028123268254*y + 0.05293706902877447*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(7 + 4*x + y - 5*n >= 0)  &&  (1 - x + y >= 0)  &&  (4 + x - y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(7 + 4*x + y - 5*n >= 0)  &&  (1 - x + y >= 0)  &&  (4 + x - y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
