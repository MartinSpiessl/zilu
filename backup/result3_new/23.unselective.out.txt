[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 23
[  8%] Building CXX object CMakeFiles/23.dir/test/23.cpp.o
[ 16%] Building CXX object CMakeFiles/23.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/23.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/23.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/23.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/23.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/23.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/23.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/23.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/23.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/23.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/23.dir/src/instrumentation.cpp.o
Linking CXX executable 23
[100%] Built target 23
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:636-]|-->> [33m(1 + 0.0007410563758637939*n + 0.006336032013635438*sum + 0.005780239731737592*i >= 0)  &&  (1 + 0.002449693788276465*n + 0.01802274715660542*sum - 0.004374453193350831*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:1781-]|-->> [33m(1 + 0.0007410563758637939*n + 0.006336032013635438*sum + 0.005780239731737592*i >= 0)  &&  (1 + 0.002449693788276465*n + 0.01802274715660542*sum - 0.004374453193350831*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:2679-]|-->> [33m(1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0)  &&  (1 + 0.002449693788276465*n + 0.01802274715660542*sum - 0.004374453193350831*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 + 0.008551184949914487*n + 0.001612509161983875*sum + 0.00469093574395309*i >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [1+:3102-]|-->> [33m(1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0)  &&  (1 + 0.002449693788276465*n + 0.01802274715660542*sum - 0.004374453193350831*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 + 0.008551184949914487*n + 0.001612509161983875*sum + 0.00469093574395309*i >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [1+:3856-]|-->> [33m(1 - 0.003849392517743294*n + 0.0009623481294358234*sum - 0.01022494887525562*i >= 0)  &&  (1 + 0.002449693788276465*n + 0.01802274715660542*sum - 0.004374453193350831*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 + 0.008551184949914487*n + 0.001612509161983875*sum + 0.00469093574395309*i >= 0)  &&  (1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [1+:4625-]|-->> [33m(1 - 0.003849392517743294*n + 0.0009623481294358234*sum - 0.01022494887525562*i >= 0)  &&  (1 + 0.002449693788276465*n + 0.01802274715660542*sum - 0.004374453193350831*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 + 0.008551184949914487*n + 0.001612509161983875*sum + 0.00469093574395309*i >= 0)  &&  (1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
		#r_samples=180		#s_samples=0	 TOTAL:[1m[32m180[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:5861-]|-->> [33m(1 + 2*sum >= 0)  &&  (1 - 0.003849392517743294*n + 0.0009623481294358234*sum - 0.01022494887525562*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:6425-]|-->> [33m(1 + 2*sum >= 0)  &&  (1 - 0.003849392517743294*n + 0.0009623481294358234*sum - 0.01022494887525562*i >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*sum >= 0) [33m }[0m
		#r_samples=60		#s_samples=0	 TOTAL:[1m[32m60[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(1 + 2*sum >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:7766-]|-->> [33m(1 + 2*i >= 0)  &&  (1 + 2*sum >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 - 0.003849392517743294*n + 0.0009623481294358234*sum - 0.01022494887525562*i >= 0)  &&  (1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:8542-]|-->> [33m(1 + 2*i >= 0)  &&  (1 + 2*sum >= 0)  &&  (1 + 0.003423423423423423*n - 0.005945945945945946*sum + 0.003603603603603604*i >= 0)  &&  (1 - 0.003139402845501303*n - 0.005811235054438582*sum + 0.009485004341727341*i >= 0)  &&  (1 + 0.008132606669866997*n + 0.0003388586112444582*sum - 0.006833648660096575*i >= 0)  &&  (1 - 0.01378169790518192*n + 0.005512679162072768*sum + 0.01819184123484013*i >= 0)  &&  (1 - 0.003849392517743294*n + 0.0009623481294358234*sum - 0.01022494887525562*i >= 0)  &&  (1 + 0.01077199281867145*n - 0.002534586545569754*sum + 0.01731967472805998*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i >= 0)  &&  (1 + 2*sum >= 0) [33m }[0m
		#r_samples=60		#s_samples=0	 TOTAL:[1m[32m60[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(1 + 2*i >= 0)  &&  (1 + 2*sum >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*i >= 0)  &&  (1 + 2*sum >= 0) [0m

=====================time=========================
