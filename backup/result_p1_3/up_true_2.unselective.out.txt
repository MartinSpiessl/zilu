[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2490-]|-->> [33m(1.010179583213291 + 0.00672236627292807*j + 0.007298569096321905*k - 0.01690194948621915*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (0.9992181221901266 - 0.004995330451968811*j + 0.005342831700801425*k + 0.005777208261842191*n >= 0)  &&  (1.031086273140063 + 0.006636395389451624*j - 0.02479916171847712*k - 0.006287111421585749*n >= 0)  &&  (1.056603773584906 - 0.01290963257199603*j - 0.03872889771598809*k - 0.01787487586891758*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:3797-]|-->> [33m(1.010179583213291 + 0.00672236627292807*j + 0.007298569096321905*k - 0.01690194948621915*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (0.9898154981549815 + 0.003837638376383764*j + 0.01549815498154982*k + 0.006346863468634687*n >= 0)  &&  (1.031086273140063 + 0.006636395389451624*j - 0.02479916171847712*k - 0.006287111421585749*n >= 0)  &&  (1.056603773584906 - 0.01290963257199603*j - 0.03872889771598809*k - 0.01787487586891758*n >= 0)  &&  (0.9992181221901266 - 0.004995330451968811*j + 0.005342831700801425*k + 0.005777208261842191*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:5873-]|-->> [33m(1.010179583213291 + 0.00672236627292807*j + 0.007298569096321905*k - 0.01690194948621915*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0)  &&  (1.031086273140063 + 0.006636395389451624*j - 0.02479916171847712*k - 0.006287111421585749*n >= 0)  &&  (1.056603773584906 - 0.01290963257199603*j - 0.03872889771598809*k - 0.01787487586891758*n >= 0)  &&  (0.9992181221901266 - 0.004995330451968811*j + 0.005342831700801425*k + 0.005777208261842191*n >= 0)  &&  (0.9898154981549815 + 0.003837638376383764*j + 0.01549815498154982*k + 0.006346863468634687*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:7336-]|-->> [33m(1.010179583213291 + 0.00672236627292807*j + 0.007298569096321905*k - 0.01690194948621915*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (1.119001919385797 - 0.02303262955854127*j - 0.0652591170825336*k - 0.05374280230326296*n >= 0)  &&  (1.031086273140063 + 0.006636395389451624*j - 0.02479916171847712*k - 0.006287111421585749*n >= 0)  &&  (1.056603773584906 - 0.01290963257199603*j - 0.03872889771598809*k - 0.01787487586891758*n >= 0)  &&  (0.9992181221901266 - 0.004995330451968811*j + 0.005342831700801425*k + 0.005777208261842191*n >= 0)  &&  (0.9898154981549815 + 0.003837638376383764*j + 0.01549815498154982*k + 0.006346863468634687*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:8895-]|-->> [33m(1.039660056657224 + 0.0453257790368272*j + 0.0453257790368272*k - 0.08498583569405099*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (1.057887120115774 + 0.06078147612156296*j - 0.01447178002894356*k - 0.04341534008683069*n >= 0)  &&  (1.031086273140063 + 0.006636395389451624*j - 0.02479916171847712*k - 0.006287111421585749*n >= 0)  &&  (1.056603773584906 - 0.01290963257199603*j - 0.03872889771598809*k - 0.01787487586891758*n >= 0)  &&  (0.9992181221901266 - 0.004995330451968811*j + 0.005342831700801425*k + 0.005777208261842191*n >= 0)  &&  (0.9898154981549815 + 0.003837638376383764*j + 0.01549815498154982*k + 0.006346863468634687*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0)  &&  (1.119001919385797 - 0.02303262955854127*j - 0.0652591170825336*k - 0.05374280230326296*n >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [2+:9981-]|-->> [33m(1.039660056657224 + 0.0453257790368272*j + 0.0453257790368272*k - 0.08498583569405099*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (1.057887120115774 + 0.06078147612156296*j - 0.01447178002894356*k - 0.04341534008683069*n >= 0)  &&  (1.031086273140063 + 0.006636395389451624*j - 0.02479916171847712*k - 0.006287111421585749*n >= 0)  &&  (1.056603773584906 - 0.01290963257199603*j - 0.03872889771598809*k - 0.01787487586891758*n >= 0)  &&  (0.9992181221901266 - 0.004995330451968811*j + 0.005342831700801425*k + 0.005777208261842191*n >= 0)  &&  (0.9898154981549815 + 0.003837638376383764*j + 0.01549815498154982*k + 0.006346863468634687*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0)  &&  (1.119001919385797 - 0.02303262955854127*j - 0.0652591170825336*k - 0.05374280230326296*n >= 0) 
[0m[31m[7Pure Random][0m[#r210,#s0] -->   [2+:11640-]|-->> [33m(0.9524838012958963 - 0.01295896328293736*j - 0.01511879049676026*k + 0.06263498920086392*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (1.039660056657224 + 0.0453257790368272*j + 0.0453257790368272*k - 0.08498583569405099*n >= 0)  &&  (1.057887120115774 + 0.06078147612156296*j - 0.01447178002894356*k - 0.04341534008683069*n >= 0)  &&  (1.119001919385797 - 0.02303262955854127*j - 0.0652591170825336*k - 0.05374280230326296*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0)  &&  (0.9898154981549815 + 0.003837638376383764*j + 0.01549815498154982*k + 0.006346863468634687*n >= 0) 
[0m[31m[8Pure Random][0m[#r240,#s0] -->   [2+:14299-]|-->> [33m(0.9524838012958963 - 0.01295896328293736*j - 0.01511879049676026*k + 0.06263498920086392*n >= 0)  &&  (0.9915429898018406 + 0.01658237293756737*j + 0.000994942376254042*k + 0.007462067821905316*n >= 0)  &&  (1.039660056657224 + 0.0453257790368272*j + 0.0453257790368272*k - 0.08498583569405099*n >= 0)  &&  (1.057887120115774 + 0.06078147612156296*j - 0.01447178002894356*k - 0.04341534008683069*n >= 0)  &&  (1.119001919385797 - 0.02303262955854127*j - 0.0652591170825336*k - 0.05374280230326296*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0)  &&  (0.9898154981549815 + 0.003837638376383764*j + 0.01549815498154982*k + 0.006346863468634687*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 8 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,1,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:16168-]|-->> [33m(0.0910493827160494 + 0.5455246913580246*j + 0.5453317901234568*k + 0.3636188271604938*n >= 0)  &&  (3 - 2*j - 2*k >= 0)  &&  (1.039660056657224 + 0.0453257790368272*j + 0.0453257790368272*k - 0.08498583569405099*n >= 0)  &&  (1.057887120115774 + 0.06078147612156296*j - 0.01447178002894356*k - 0.04341534008683069*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:18230-]|-->> [33m(0.0910493827160494 + 0.5455246913580246*j + 0.5453317901234568*k + 0.3636188271604938*n >= 0)  &&  (3 - 2*j - 2*k >= 0)  &&  (1.039660056657224 + 0.0453257790368272*j + 0.0453257790368272*k - 0.08498583569405099*n >= 0)  &&  (1.057887120115774 + 0.06078147612156296*j - 0.01447178002894356*k - 0.04341534008683069*n >= 0)  &&  (1.015472962194927 - 0.00957090445047057*j + 0.01387781145318233*k - 0.005902057744456852*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 6*j + 6*k + 4*n >= 0)  &&  (3 - 2*j - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + 6*j + 6*k + 4*n >= 0)  &&  (3 - 2*j - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,3,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,4,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,5,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,6,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,7,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,8,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,9,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [54+:19917-]|-->> [33m(2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.09117657034323701 + 0.5455882851716185*j + 0.5452205009496677*k + 0.3636029287070953*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (1.00003225398347 + 0.06452677161767978*j + 0.06450361753299802*k - 0.06453587151646786*n >= 0)  &&  (1.144288577154309 + 0.08416833667334668*j + 0.01202404809619238*k - 0.0280561122244489*n >= 0)  &&  (1.041825950078705 - 0.013792069560003*j + 0.005097069185218499*k + 0.009144741773480248*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [54+:22314-]|-->> [33m(2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.09117657034323701 + 0.5455882851716185*j + 0.5452205009496677*k + 0.3636029287070953*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (1.00003225398347 + 0.06452677161767978*j + 0.06450361753299802*k - 0.06453587151646786*n >= 0)  &&  (1.144288577154309 + 0.08416833667334668*j + 0.01202404809619238*k - 0.0280561122244489*n >= 0)  &&  (1.041825950078705 - 0.013792069560003*j + 0.005097069185218499*k + 0.009144741773480248*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 6*j + 6*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 6*j + 6*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,3,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [54+:23917-]|-->> [33m(j + n >= 0)  &&  (0.9999663733095421 + 1.681334522896094e-05*j + 1.999730986476339*k + 1.681334522896094e-05*n >= 0)  &&  (2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.09117657034323701 + 0.5455882851716185*j + 0.5452205009496677*k + 0.3636029287070953*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (1.00003225398347 + 0.06452677161767978*j + 0.06450361753299802*k - 0.06453587151646786*n >= 0)  &&  (1.144288577154309 + 0.08416833667334668*j + 0.01202404809619238*k - 0.0280561122244489*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [54+:25197-]|-->> [33m(j + n >= 0)  &&  (0.9999663733095421 + 1.681334522896094e-05*j + 1.999730986476339*k + 1.681334522896094e-05*n >= 0)  &&  (2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.09117657034323701 + 0.5455882851716185*j + 0.5452205009496677*k + 0.3636029287070953*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (1.00003225398347 + 0.06452677161767978*j + 0.06450361753299802*k - 0.06453587151646786*n >= 0)  &&  (1.144288577154309 + 0.08416833667334668*j + 0.01202404809619238*k - 0.0280561122244489*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(j + n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(j + n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [54+:26677-]|-->> [33m( -1 + 2*j + 2*k >= 0)  &&  (j + n >= 0)  &&  (0.9999663733095421 + 1.681334522896094e-05*j + 1.999730986476339*k + 1.681334522896094e-05*n >= 0)  &&  (2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (1.00003225398347 + 0.06452677161767978*j + 0.06450361753299802*k - 0.06453587151646786*n >= 0)  &&  (1.144288577154309 + 0.08416833667334668*j + 0.01202404809619238*k - 0.0280561122244489*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [54+:28203-]|-->> [33m( -1 + 2*j + 2*k >= 0)  &&  (j + n >= 0)  &&  (0.9999663733095421 + 1.681334522896094e-05*j + 1.999730986476339*k + 1.681334522896094e-05*n >= 0)  &&  (2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (1.00003225398347 + 0.06452677161767978*j + 0.06450361753299802*k - 0.06453587151646786*n >= 0)  &&  (1.144288577154309 + 0.08416833667334668*j + 0.01202404809619238*k - 0.0280561122244489*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*j + 2*k >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m( -1 + 2*j + 2*k >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [54+:29082-]|-->> [33m(0.99994864843719 + 1.999567303239756*j + 1.999640539060336*k - 1.999589187497527*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (j + n >= 0)  &&  (0.9999663733095421 + 1.681334522896094e-05*j + 1.999730986476339*k + 1.681334522896094e-05*n >= 0)  &&  (2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [54+:30350-]|-->> [33m(0.99994864843719 + 1.999567303239756*j + 1.999640539060336*k - 1.999589187497527*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (j + n >= 0)  &&  (0.9999663733095421 + 1.681334522896094e-05*j + 1.999730986476339*k + 1.681334522896094e-05*n >= 0)  &&  (2.813096988784974 - 0.0431356823205742*j - 0.04319051884296078*k - 0.1582647021331475*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (2.788819875776398 - 0.06211180124223604*j - 0.1242236024844721*k - 0.07453416149068326*n >= 0)  &&  (2.089588377723971 + 0.01937046004842615*j - 0.0920096852300242*k - 0.02905569007263923*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (j + n >= 0)  &&  (1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (j + n >= 0)  &&  (1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*j + 2*k - 2*n >= 0)  &&  (1 - 2*j - 2*k + 2*n >= 0)  &&  (j + n >= 0)  &&  (1 + 2*k >= 0) [0m

=====================time=========================
