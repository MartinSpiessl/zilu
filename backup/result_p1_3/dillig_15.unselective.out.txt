[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_15
[  8%] Building CXX object CMakeFiles/dillig_15.dir/test/dillig_15.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_15.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_15.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_15.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_15.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_15.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_15.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_15.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_15.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_15.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_15.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_15.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_15
[100%] Built target dillig_15
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1486-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (0.9615384615384616 + 0.08974358974358974*k + 0.0641025641025641*j - 0.02564102564102564*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:2918-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (0.9615384615384616 + 0.08974358974358974*k + 0.0641025641025641*j - 0.02564102564102564*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.020996150705704 + 0.01189781873323224*k - 0.01773008281815001*j - 0.003266067887553949*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:4860-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (0.9615384615384616 + 0.08974358974358974*k + 0.0641025641025641*j - 0.02564102564102564*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.020996150705704 + 0.01189781873323224*k - 0.01773008281815001*j - 0.003266067887553949*n >= 0)  &&  (1.013342546043697 - 0.005479974267946916*k - 0.001858426056086345*j - 0.007862571775749921*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:6921-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (0.9615384615384616 + 0.08974358974358974*k + 0.0641025641025641*j - 0.02564102564102564*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.020996150705704 + 0.01189781873323224*k - 0.01773008281815001*j - 0.003266067887553949*n >= 0)  &&  (1.013342546043697 - 0.005479974267946916*k - 0.001858426056086345*j - 0.007862571775749921*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:9150-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (0.9615384615384616 + 0.08974358974358974*k + 0.0641025641025641*j - 0.02564102564102564*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.020996150705704 + 0.01189781873323224*k - 0.01773008281815001*j - 0.003266067887553949*n >= 0)  &&  (1.013342546043697 - 0.005479974267946916*k - 0.001858426056086345*j - 0.007862571775749921*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.02430491622169 - 0.005523844595838703*k - 0.007549254280979562*j - 0.01675566194071073*n >= 0)  &&  (1.04802164355766 - 0.0142035847142374*k + 0.002705444707473791*j - 0.03381805884342239*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:11055-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (0.9615384615384616 + 0.08974358974358974*k + 0.0641025641025641*j - 0.02564102564102564*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.020996150705704 + 0.01189781873323224*k - 0.01773008281815001*j - 0.003266067887553949*n >= 0)  &&  (1.013342546043697 - 0.005479974267946916*k - 0.001858426056086345*j - 0.007862571775749921*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.02430491622169 - 0.005523844595838703*k - 0.007549254280979562*j - 0.01675566194071073*n >= 0)  &&  (1.04802164355766 - 0.0142035847142374*k + 0.002705444707473791*j - 0.03381805884342239*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-5,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:13380-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (2.2 - 0.4*j - 0.8000000000000002*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.020996150705704 + 0.01189781873323224*k - 0.01773008281815001*j - 0.003266067887553949*n >= 0)  &&  (1.013342546043697 - 0.005479974267946916*k - 0.001858426056086345*j - 0.007862571775749921*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.02430491622169 - 0.005523844595838703*k - 0.007549254280979562*j - 0.01675566194071073*n >= 0)  &&  (1.04802164355766 - 0.0142035847142374*k + 0.002705444707473791*j - 0.03381805884342239*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:14775-]|-->> [33m(1.007814720090935 - 0.007530548451264565*k + 0.009235578289286731*j - 0.000284171639670361*n >= 0)  &&  (1.014220705346985 - 0.01308304891922639*k + 0.01990898748577929*j - 0.001137656427758817*n >= 0)  &&  (1.021566401816118 - 0.0170261066969353*k + 0.04426787741203178*j - 0.004540295119182747*n >= 0)  &&  (1.007936507936508 + 0.007936507936507936*k + 0.0873015873015873*j - 0.01587301587301587*n >= 0)  &&  (2.2 - 0.4*j - 0.8000000000000002*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.020996150705704 + 0.01189781873323224*k - 0.01773008281815001*j - 0.003266067887553949*n >= 0)  &&  (1.013342546043697 - 0.005479974267946916*k - 0.001858426056086345*j - 0.007862571775749921*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.02430491622169 - 0.005523844595838703*k - 0.007549254280979562*j - 0.01675566194071073*n >= 0)  &&  (1.04802164355766 - 0.0142035847142374*k + 0.002705444707473791*j - 0.03381805884342239*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*k + 2*j >= 0)  &&  (6 - j - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m( -1 + 2*k + 2*j >= 0)  &&  (6 - j - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (4,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (7,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [50+:16439-]|-->> [33m(1.058266242276727 - 0.007414341883542409*k + 0.009736004493540536*j + 0.0001497846845160083*n >= 0)  &&  (1.092099322799097 - 0.01203912716328066*k + 0.02136945071482317*j + 0.0006019563581640332*n >= 0)  &&  (1.073949579831933 - 0.01120448179271709*k + 0.04593837535014005*j + 0.002240896358543418*n >= 0)  &&  (0.9999772991865084 + 0.009244803540539753*k + 0.08494776883090403*j - 0.009222102727048079*n >= 0)  &&  (0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.128847157016171 + 0.01356285863328117*k - 0.01825769431403234*j - 0.002086593635889411*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0)  &&  (1.386879730866274 - 0.0159798149705635*k + 0.007569386038687972*j - 0.03700588730025231*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [50+:18349-]|-->> [33m(1.058266242276727 - 0.007414341883542409*k + 0.009736004493540536*j + 0.0001497846845160083*n >= 0)  &&  (1.092099322799097 - 0.01203912716328066*k + 0.02136945071482317*j + 0.0006019563581640332*n >= 0)  &&  (1.073949579831933 - 0.01120448179271709*k + 0.04593837535014005*j + 0.002240896358543418*n >= 0)  &&  (0.9999772991865084 + 0.009244803540539753*k + 0.08494776883090403*j - 0.009222102727048079*n >= 0)  &&  (0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.128847157016171 + 0.01356285863328117*k - 0.01825769431403234*j - 0.002086593635889411*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0)  &&  (1.386879730866274 - 0.0159798149705635*k + 0.007569386038687972*j - 0.03700588730025231*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*k + 2*j >= 0)  &&  (1 + 2*k + 2*j - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m( -1 + 2*k + 2*j >= 0)  &&  (1 + 2*k + 2*j - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,3,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [50+:20486-]|-->> [33m(1.058266242276727 - 0.007414341883542409*k + 0.009736004493540536*j + 0.0001497846845160083*n >= 0)  &&  (1.092099322799097 - 0.01203912716328066*k + 0.02136945071482317*j + 0.0006019563581640332*n >= 0)  &&  (1.073949579831933 - 0.01120448179271709*k + 0.04593837535014005*j + 0.002240896358543418*n >= 0)  &&  (0.9999772991865084 + 0.009244803540539753*k + 0.08494776883090403*j - 0.009222102727048079*n >= 0)  &&  (0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.128847157016171 + 0.01356285863328117*k - 0.01825769431403234*j - 0.002086593635889411*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0)  &&  (1.386879730866274 - 0.0159798149705635*k + 0.007569386038687972*j - 0.03700588730025231*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [50+:22415-]|-->> [33m(1.058266242276727 - 0.007414341883542409*k + 0.009736004493540536*j + 0.0001497846845160083*n >= 0)  &&  (1.092099322799097 - 0.01203912716328066*k + 0.02136945071482317*j + 0.0006019563581640332*n >= 0)  &&  (1.073949579831933 - 0.01120448179271709*k + 0.04593837535014005*j + 0.002240896358543418*n >= 0)  &&  (0.9999772991865084 + 0.009244803540539753*k + 0.08494776883090403*j - 0.009222102727048079*n >= 0)  &&  (0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  (0.9964252957362245 + 0.002869170527504057*k - 0.004515415912137532*j + 0.008090120175913077*n >= 0)  &&  (1.128847157016171 + 0.01356285863328117*k - 0.01825769431403234*j - 0.002086593635889411*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0)  &&  (1.386879730866274 - 0.0159798149705635*k + 0.007569386038687972*j - 0.03700588730025231*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0)  &&  (1 + 2*k + 2*j - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 + 2*k >= 0)  &&  (1 + 2*k + 2*j - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*k >= 0)  &&  (1 + 2*k + 2*j - 2*n >= 0) [0m

=====================time=========================
