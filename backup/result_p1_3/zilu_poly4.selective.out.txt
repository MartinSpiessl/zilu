[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> polynomial]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_poly4
[  8%] Building CXX object CMakeFiles/zilu_poly4.dir/test/zilu_poly4.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_poly4.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_poly4.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_poly4.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_poly4.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_poly4.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_poly4.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_poly4.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_poly4.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_poly4.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_poly4.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_poly4.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_poly4
[100%] Built target zilu_poly4
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 0	7	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt[0m
[34m[1mTest Counter Example: (0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[33m>>>> Polynomial Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [527+:12-]|-->> [33m(1 - 3.861269344448063e-05*i - 1.909861280186099e-05*j - 0.0007818771960154856*i*i - 1.63815546163769e-07*i*j + 0.0007815775538862035*j*j >= 0) [0m
[31m[2][0m[#r8,#s32] -->   [817+:25-]|-->> [33m(1.003130193926438 + 0.0003268513037027639*i + 1.877427567460175e-05*j - 0.007835402375126001*i*i + 6.456851827042667e-07*i*j + 0.007838017308616668*j*j >= 0) [0m
[31m[3][0m[#r12,#s48] -->   [890+:36-]|-->> [33m(1.00295281740344 + 0.0003253146490289553*i + 4.377528082009165e-05*j - 0.007834856597614065*i*i + 8.615374733626953e-07*i*j + 0.007837519345716016*j*j >= 0) [0m
[31m[4][0m[#r16,#s64] -->   [1003+:44-]|-->> [33m(1.0030967111731 + 0.0003264449380756228*i + 2.516428887466055e-05*j - 0.007834936966538088*i*i + 6.980333305051708e-07*i*j + 0.00783756551465443*j*j >= 0) [0m
[31m[5][0m[#r20,#s80] -->   [1184+:53-]|-->> [33m(1.363299450882273 - 0.3522758240670713*i - 0.01365355713849892*j - 0.5429082448283262*i*i - 0.01894265656691674*i*j + 0.5649259233148323*j*j >= 0) [0m
[31m[6][0m[#r24,#s96] -->   [1470+:62-]|-->> [33m(1.363400055375678 - 0.3522730562461315*i - 0.01365331672619963*j - 0.5429043552325443*i*i - 0.01894146153938792*i*j + 0.5649208145352758*j*j >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Polynomial): {  [32m(8 - 2*i - 3*i*i + 3*j*j >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.inv >>> [0m(8 - 2*i - 3*i*i + 3*j*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt[0m
[34m[1mTest Counter Example: (7,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[34m[1mTest Counter Example: (14,15) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[34m[1mTest Counter Example: (15,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[34m[1mTest Counter Example: (12,13) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
[0m[34m[1mTest Counter Example: (10,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly4.cnt --> [0m+
