[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_03
[  8%] Building CXX object CMakeFiles/dillig_03.dir/test/dillig_03.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_03.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_03.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_03.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_03.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_03.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_03.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_03.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_03.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_03.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_03.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_03.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_03
[100%] Built target dillig_03
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [3+:123-]|-->> [33m(0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [3+:184-]|-->> [33m(0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(7 + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(7 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (-7,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [3+:418-]|-->> [33m(0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [3+:470-]|-->> [33m(0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(7 + 2*w >= 0)  &&  (7 + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(7 + 2*w >= 0)  &&  (7 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (-7,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [3+:539-]|-->> [33m(0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [3+:611-]|-->> [33m(0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [3+:690-]|-->> [33m(0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(13 + 5*k + 2*w >= 0)  &&  (7 + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(13 + 5*k + 2*w >= 0)  &&  (7 + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [3+:792-]|-->> [33m(0.2307692307692307 + 0.3076923076923077*k + 0.4615384615384616*w >= 0)  &&  (0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [3+:886-]|-->> [33m(0.2307692307692307 + 0.3076923076923077*k + 0.4615384615384616*w >= 0)  &&  (0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [3+:995-]|-->> [33m(0.2307692307692307 + 0.3076923076923077*k + 0.4615384615384616*w >= 0)  &&  (0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.7560975609756098 + 0.02439024390243903*k + 0.2195121951219512*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 4*k + 6*w >= 0)  &&  (7 + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(3 + 4*k + 6*w >= 0)  &&  (7 + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [3+:1100-]|-->> [33m(0.00048828125*k + 0.99951171875*w >= 0)  &&  (0.2307692307692307 + 0.3076923076923077*k + 0.4615384615384616*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [3+:1136-]|-->> [33m(0.00048828125*k + 0.99951171875*w >= 0)  &&  (0.2307692307692307 + 0.3076923076923077*k + 0.4615384615384616*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(w >= 0)  &&  (13 + 5*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(w >= 0)  &&  (13 + 5*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [3+:1269-]|-->> [33m( -1 + k + w >= 0)  &&  (0.00048828125*k + 0.99951171875*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [3+:1317-]|-->> [33m( -1 + k + w >= 0)  &&  (0.00048828125*k + 0.99951171875*w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.6551724137931034 + 0.2413793103448276*k + 0.103448275862069*w >= 0)  &&  (0.8461538461538461 + 0.1282051282051282*k + 0.02564102564102564*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + k + w >= 0)  &&  (w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m( -1 + k + w >= 0)  &&  (w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-4,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [3+:1405-]|-->> [33m( -1 + 2*k >= 0)  &&  ( -1 + k + w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.00048828125*k + 0.99951171875*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [3+:1468-]|-->> [33m( -1 + 2*k >= 0)  &&  ( -1 + k + w >= 0)  &&  (1.026787741203178 + 0.003178206583427923*k - 0.02996594778660613*w >= 0)  &&  (0.00048828125*k + 0.99951171875*w >= 0)  &&  (1.058823529411765 - 0.04411764705882353*k + 0.07352941176470588*w >= 0)  &&  (1.089655172413793 - 0.03448275862068965*k + 0.01379310344827586*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*k >= 0)  &&  (w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m( -1 + 2*k >= 0)  &&  (w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -1 + 2*k >= 0)  &&  (w >= 0) [0m

=====================time=========================
