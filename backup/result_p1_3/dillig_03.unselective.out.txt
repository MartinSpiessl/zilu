[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_03
[  8%] Building CXX object CMakeFiles/dillig_03.dir/test/dillig_03.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_03.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_03.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_03.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_03.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_03.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_03.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_03.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_03.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_03.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_03.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_03.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_03
[100%] Built target dillig_03
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:95-]|-->> [33m(0.7846153846153847 + 0.04615384615384614*k + 0.1692307692307692*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0)  &&  (1.009084213110729 + 0.001841394549472134*k - 0.01092560766020133*w >= 0)  &&  (0.9935279735366029 + 0.01107435639292392*k - 0.004602329929526823*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:179-]|-->> [33m(0.7846153846153847 + 0.04615384615384614*k + 0.1692307692307692*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0)  &&  (1.009084213110729 + 0.001841394549472134*k - 0.01092560766020133*w >= 0)  &&  (0.9935279735366029 + 0.01107435639292392*k - 0.004602329929526823*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 + w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(5 + w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:258-]|-->> [33m(1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (0.7846153846153847 + 0.04615384615384614*k + 0.1692307692307692*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:318-]|-->> [33m(1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (0.7846153846153847 + 0.04615384615384614*k + 0.1692307692307692*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (4,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (5,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (7,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (8,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (9,-17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:456-]|-->> [33m(0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:553-]|-->> [33m(0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:698-]|-->> [33m(0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:780-]|-->> [33m(0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:879-]|-->> [33m(0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:971-]|-->> [33m(0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:1010-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:1109-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00006.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00007.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:1147-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:1278-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00006.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00007.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:1309-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:1372-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00006.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00007.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 9 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [5+:1442-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [5+:1555-]|-->> [33m(1 + 0.9999999999999999*k - 0.9999999999999999*w >= 0)  &&  (0.333372624831405 - 0.0001178744942154086*k + 0.6667452496628103*w >= 0)  &&  (1.013308309162259 + 0.01057839959051356*k - 0.02388670875277257*w >= 0)  &&  ( -0.2000000000000001 + 0.8*k + 0.4*w >= 0)  &&  (1.372413793103448 - 0.0896551724137931*k + 0.07586206896551724*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 + k - w >= 0)  &&  (1 + 2*w >= 0)  &&  ( -1 + 4*k + 2*w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> 