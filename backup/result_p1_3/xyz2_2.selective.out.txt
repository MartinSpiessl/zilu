[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target xyz2_2
[  8%] Building CXX object CMakeFiles/xyz2_2.dir/test/xyz2_2.cpp.o
[ 16%] Building CXX object CMakeFiles/xyz2_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/xyz2_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/xyz2_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/xyz2_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/xyz2_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/xyz2_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/xyz2_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/xyz2_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/xyz2_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/xyz2_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/xyz2_2.dir/src/instrumentation.cpp.o
Linking CXX executable xyz2_2
[100%] Built target xyz2_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:1244-]|-->> [33m(1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.00536245118420797*x + 0.004352134294429657*y - 0.005479026209951621*z >= 0)  &&  (1 - 0.02510460251046025*x + 0.02252977148374638*y + 0.01223044737689089*z >= 0)  &&  (1 - 0.000487032752952636*x + 0.0175331791062949*y - 0.01339340070619749*z >= 0)  &&  (1 - 0.003642054346279699*x - 0.008934414568217386*y - 0.004552567932849623*z >= 0)  &&  (1 - 0.00244926522043387*x - 0.0185444366689993*y >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:2396-]|-->> [33m(1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.00536245118420797*x + 0.004352134294429657*y - 0.005479026209951621*z >= 0)  &&  (1 - 0.02510460251046025*x + 0.02252977148374638*y + 0.01223044737689089*z >= 0)  &&  (1 - 0.000487032752952636*x + 0.0175331791062949*y - 0.01339340070619749*z >= 0)  &&  (1 - 0.003642054346279699*x - 0.008934414568217386*y - 0.004552567932849623*z >= 0)  &&  (1 - 0.00244926522043387*x - 0.0185444366689993*y >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1+:3464-]|-->> [33m(1 - 0.00111731843575419*x + 0.005586592178770949*y - 0.04692737430167598*z >= 0)  &&  (1 + 0.00536245118420797*x + 0.004352134294429657*y - 0.005479026209951621*z >= 0)  &&  (1 - 0.02510460251046025*x + 0.02252977148374638*y + 0.01223044737689089*z >= 0)  &&  (1 - 0.000487032752952636*x + 0.0175331791062949*y - 0.01339340070619749*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [1+:4835-]|-->> [33m(1 - 0.00111731843575419*x + 0.005586592178770949*y - 0.04692737430167598*z >= 0)  &&  (1 + 0.00536245118420797*x + 0.004352134294429657*y - 0.005479026209951621*z >= 0)  &&  (1 - 0.02510460251046025*x + 0.02252977148374638*y + 0.01223044737689089*z >= 0)  &&  (1 - 0.000487032752952636*x + 0.0175331791062949*y - 0.01339340070619749*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[34m[1mTest Counter Example: (0,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:6731-]|-->> [33m(1 - 0.003454231433506045*x + 0.07944732297063903*y - 0.02417962003454231*z >= 0)  &&  (1 - 0.04793028322440088*x + 0.05664488017429194*y + 0.05664488017429194*z >= 0)  &&  (1 - 0.02729044834307992*x + 0.003898635477582846*y + 0.0428849902534113*z >= 0)  &&  (1 - 0.8*y - 0.4*z >= 0)  &&  (1 - 0.00111731843575419*x + 0.005586592178770949*y - 0.04692737430167598*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:7615-]|-->> [33m(1 - 0.06390532544378698*x + 0.009467455621301775*y - 0.02366863905325444*z >= 0)  &&  (1 - 0.003454231433506045*x + 0.07944732297063903*y - 0.02417962003454231*z >= 0)  &&  (1 - 0.04793028322440088*x + 0.05664488017429194*y + 0.05664488017429194*z >= 0)  &&  (1 - 0.02729044834307992*x + 0.003898635477582846*y + 0.0428849902534113*z >= 0)  &&  (1 - 0.8*y - 0.4*z >= 0)  &&  (1 - 0.00111731843575419*x + 0.005586592178770949*y - 0.04692737430167598*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1+:8503-]|-->> [33m(1 - 0.06390532544378698*x + 0.009467455621301775*y - 0.02366863905325444*z >= 0)  &&  (1 - 0.003454231433506045*x + 0.07944732297063903*y - 0.02417962003454231*z >= 0)  &&  (1 - 0.04793028322440088*x + 0.05664488017429194*y + 0.05664488017429194*z >= 0)  &&  (1 - 0.02729044834307992*x + 0.003898635477582846*y + 0.0428849902534113*z >= 0)  &&  (1 - 0.8*y - 0.4*z >= 0)  &&  (1 - 0.00111731843575419*x + 0.005586592178770949*y - 0.04692737430167598*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 - 4*y - 2*z >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.inv >>> [0m(5 - 4*y - 2*z >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-6,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:10212-]|-->> [33m(1 - 2*z >= 0)  &&  (1 - 0.06390532544378698*x + 0.009467455621301775*y - 0.02366863905325444*z >= 0)  &&  (1 - 0.003454231433506045*x + 0.07944732297063903*y - 0.02417962003454231*z >= 0)  &&  (1 - 0.04793028322440088*x + 0.05664488017429194*y + 0.05664488017429194*z >= 0)  &&  (1 - 0.02729044834307992*x + 0.003898635477582846*y + 0.0428849902534113*z >= 0)  &&  (1 - 0.8*y - 0.4*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:11432-]|-->> [33m(1 - 2*z >= 0)  &&  (1 - 0.06390532544378698*x + 0.009467455621301775*y - 0.02366863905325444*z >= 0)  &&  (1 - 0.003454231433506045*x + 0.07944732297063903*y - 0.02417962003454231*z >= 0)  &&  (1 - 0.04793028322440088*x + 0.05664488017429194*y + 0.05664488017429194*z >= 0)  &&  (1 - 0.02729044834307992*x + 0.003898635477582846*y + 0.0428849902534113*z >= 0)  &&  (1 - 0.8*y - 0.4*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*z >= 0)  &&  (5 - 4*y - 2*z >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.inv >>> [0m(1 - 2*z >= 0)  &&  (5 - 4*y - 2*z >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[34m[1mTest Counter Example: (1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-3,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-4,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-5,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-6,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:12423-]|-->> [33m(1 - 2*x >= 0)  &&  (1 - 2*z >= 0)  &&  (1 - 0.003454231433506045*x + 0.07944732297063903*y - 0.02417962003454231*z >= 0)  &&  (1 - 0.04793028322440088*x + 0.05664488017429194*y + 0.05664488017429194*z >= 0)  &&  (1 - 0.02729044834307992*x + 0.003898635477582846*y + 0.0428849902534113*z >= 0)  &&  (1 - 0.8*y - 0.4*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:13519-]|-->> [33m(1 - 2*x >= 0)  &&  (1 - 2*z >= 0)  &&  (1 - 0.003454231433506045*x + 0.07944732297063903*y - 0.02417962003454231*z >= 0)  &&  (1 - 0.04793028322440088*x + 0.05664488017429194*y + 0.05664488017429194*z >= 0)  &&  (1 - 0.02729044834307992*x + 0.003898635477582846*y + 0.0428849902534113*z >= 0)  &&  (1 - 0.8*y - 0.4*z >= 0)  &&  (1 - 0.01106118216384376*x - 0.03525751814725199*y + 0.00414794331144141*z >= 0)  &&  (1 + 0.009074920858248329*x - 0.004924375659514597*y - 0.005838902567710165*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x >= 0)  &&  (1 - 2*z >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.inv >>> [0m(1 - 2*x >= 0)  &&  (1 - 2*z >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt[0m
[34m[1mTest Counter Example: (1,1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (2,2,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (3,3,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (4,4,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,5,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,6,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (7,7,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,8,-16) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [9+:14839-]|-->> [33m(1 - 1.999366319519038*x + 0.3998891059158316*y - 0.7997782118316632*z >= 0)  &&  (1 + 0.00536245118420797*x + 0.004352134294429657*y - 0.005479026209951621*z >= 0)  &&  (1 - 2*z >= 0)  &&  (1 - 0.03252032520325203*x + 0.0975609756097561*y + 0.01626016260162601*z >= 0)  &&  (1.195416164053076 - 0.003618817852834741*x - 0.01055488540410133*y + 0.005126658624849215*z >= 0)  &&  (1.12422854867609 - 0.001393589488353573*x - 0.01970933704957197*y - 0.002787178976707147*z >= 0)  &&  (1.690647482014388 - 0.04796163069544364*x + 0.0671462829736211*y + 0.05275779376498801*z >= 0)  &&  (1.938875305623472 - 0.03096984515077424*x + 0.008149959250203748*y + 0.04726976365118174*z >= 0)  &&  (1.530491415038484 - 0.01381488059996053*x - 0.004341819617130453*y + 0.02407736333135978*z >= 0)  &&  (1 + 6.79533993934152e-06*x - 0.7998627341332253*y - 0.399948355416461*z >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [9+:15586-]|-->> [33m(1 - 1.999366319519038*x + 0.3998891059158316*y - 0.7997782118316632*z >= 0)  &&  (1 + 0.00536245118420797*x + 0.004352134294429657*y - 0.005479026209951621*z >= 0)  &&  (1 - 2*z >= 0)  &&  (1 - 0.03252032520325203*x + 0.0975609756097561*y + 0.01626016260162601*z >= 0)  &&  (1.195416164053076 - 0.003618817852834741*x - 0.01055488540410133*y + 0.005126658624849215*z >= 0)  &&  (1.12422854867609 - 0.001393589488353573*x - 0.01970933704957197*y - 0.002787178976707147*z >= 0)  &&  (1.690647482014388 - 0.04796163069544364*x + 0.0671462829736211*y + 0.05275779376498801*z >= 0)  &&  (1.938875305623472 - 0.03096984515077424*x + 0.008149959250203748*y + 0.04726976365118174*z >= 0)  &&  (1.530491415038484 - 0.01381488059996053*x - 0.004341819617130453*y + 0.02407736333135978*z >= 0)  &&  (1 + 6.79533993934152e-06*x - 0.7998627341332253*y - 0.399948355416461*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 - 10*x + 2*y - 4*z >= 0)  &&  (1 - 2*z >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_2.inv >>> [0m(5 - 10*x + 2*y - 4*z >= 0)  &&  (1 - 2*z >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
