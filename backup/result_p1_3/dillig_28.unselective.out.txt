[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_28
[  8%] Building CXX object CMakeFiles/dillig_28.dir/test/dillig_28.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_28.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_28.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_28.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_28.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_28.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_28.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_28.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_28.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_28.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_28.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_28.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_28
[100%] Built target dillig_28
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1110-]|-->> [33m(1.003407726041172 - 0.007541688779643027*x + 0.004133962738470993*y + 0.0061450797463758*n >= 0)  &&  (1.022124450031427 - 0.005279698302954117*x - 0.01684475172847266*y + 0.01382778126964174*n >= 0)  &&  (1 + 0.01175030599755202*x - 0.01077111383108935*y + 0.02692778457772338*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:2798-]|-->> [33m(1.008812729498164 - 0.02545899632802938*x + 0.01664626682986536*y - 0.007343941248470012*n >= 0)  &&  (1.022124450031427 - 0.005279698302954117*x - 0.01684475172847266*y + 0.01382778126964174*n >= 0)  &&  (1 + 0.01175030599755202*x - 0.01077111383108935*y + 0.02692778457772338*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:4741-]|-->> [33m(1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1.022124450031427 - 0.005279698302954117*x - 0.01684475172847266*y + 0.01382778126964174*n >= 0)  &&  (1 + 0.01175030599755202*x - 0.01077111383108935*y + 0.02692778457772338*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1.008812729498164 - 0.02545899632802938*x + 0.01664626682986536*y - 0.007343941248470012*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:6166-]|-->> [33m(1 - 0.009687836383207749*x + 0.01722282023681378*y + 0.04198062432723358*n >= 0)  &&  (1.032736256948734 - 0.02408894379246449*x - 0.008647313156269302*y + 0.02408894379246448*n >= 0)  &&  (1 + 0.01789883268482491*x + 0.0311284046692607*y + 0.01634241245136187*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0)  &&  (1.008812729498164 - 0.02545899632802938*x + 0.01664626682986536*y - 0.007343941248470012*n >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:7912-]|-->> [33m(1 - 0.009687836383207749*x + 0.01722282023681378*y + 0.04198062432723358*n >= 0)  &&  (1.032736256948734 - 0.02408894379246449*x - 0.008647313156269302*y + 0.02408894379246448*n >= 0)  &&  (1 + 0.01789883268482491*x + 0.0311284046692607*y + 0.01634241245136187*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0)  &&  (1.008812729498164 - 0.02545899632802938*x + 0.01664626682986536*y - 0.007343941248470012*n >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [2+:9593-]|-->> [33m(1 - 0.009687836383207749*x + 0.01722282023681378*y + 0.04198062432723358*n >= 0)  &&  (1.032736256948734 - 0.02408894379246449*x - 0.008647313156269302*y + 0.02408894379246448*n >= 0)  &&  (1 + 0.01789883268482491*x + 0.0311284046692607*y + 0.01634241245136187*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0)  &&  (1.008812729498164 - 0.02545899632802938*x + 0.01664626682986536*y - 0.007343941248470012*n >= 0) 
[0m[31m[7Pure Random][0m[#r210,#s0] -->   [2+:11902-]|-->> [33m(1.192771084337349 + 0.02409638554216867*x - 0.216867469879518*y + 0.02409638554216867*n >= 0)  &&  (1.150170648464164 - 0.04095563139931741*x - 0.1092150170648464*y + 0.006825938566552901*n >= 0)  &&  (1 - 0.009687836383207749*x + 0.01722282023681378*y + 0.04198062432723358*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1.032736256948734 - 0.02408894379246449*x - 0.008647313156269302*y + 0.02408894379246448*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0)  &&  (1.008812729498164 - 0.02545899632802938*x + 0.01664626682986536*y - 0.007343941248470012*n >= 0)  &&  (1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1 + 0.01789883268482491*x + 0.0311284046692607*y + 0.01634241245136187*n >= 0) 
[0m[31m[8Pure Random][0m[#r240,#s0] -->   [2+:14165-]|-->> [33m(1.192771084337349 + 0.02409638554216867*x - 0.216867469879518*y + 0.02409638554216867*n >= 0)  &&  (1.150170648464164 - 0.04095563139931741*x - 0.1092150170648464*y + 0.006825938566552901*n >= 0)  &&  (1 - 0.009687836383207749*x + 0.01722282023681378*y + 0.04198062432723358*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1.032736256948734 - 0.02408894379246449*x - 0.008647313156269302*y + 0.02408894379246448*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0)  &&  (1.008812729498164 - 0.02545899632802938*x + 0.01664626682986536*y - 0.007343941248470012*n >= 0)  &&  (1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1 + 0.01789883268482491*x + 0.0311284046692607*y + 0.01634241245136187*n >= 0) 
[0m[31m[9Pure Random][0m[#r270,#s0] -->   [2+:16597-]|-->> [33m(1.119402985074627 - 0.208955223880597*x + 0.08955223880597016*y - 0.08955223880597016*n >= 0)  &&  (1.171122994652406 - 0.1390374331550802*x - 0.03208556149732621*y - 0.03208556149732621*n >= 0)  &&  (1 - 0.06451612903225806*x + 0.07444168734491315*y - 0.01488833746898263*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1.192771084337349 + 0.02409638554216867*x - 0.216867469879518*y + 0.02409638554216867*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0)  &&  (1.150170648464164 - 0.04095563139931741*x - 0.1092150170648464*y + 0.006825938566552901*n >= 0)  &&  (1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1 + 0.01789883268482491*x + 0.0311284046692607*y + 0.01634241245136187*n >= 0)  &&  (1 - 0.009687836383207749*x + 0.01722282023681378*y + 0.04198062432723358*n >= 0) 
[0m[31m[10Pure Random][0m[#r300,#s0] -->   [2+:19415-]|-->> [33m(1.119402985074627 - 0.208955223880597*x + 0.08955223880597016*y - 0.08955223880597016*n >= 0)  &&  (1.171122994652406 - 0.1390374331550802*x - 0.03208556149732621*y - 0.03208556149732621*n >= 0)  &&  (1 - 0.06451612903225806*x + 0.07444168734491315*y - 0.01488833746898263*n >= 0)  &&  (1 + 0.006649506649506649*x + 0.004933504933504934*y - 0.006220506220506221*n >= 0)  &&  (1.003934249528429 - 0.002533009970358394*x - 0.001401239558070601*y - 0.009970358393963891*n >= 0)  &&  (1.077821011673152 - 0.02334630350194553*x - 0.05447470817120623*y - 0.01945525291828794*n >= 0)  &&  (1.192771084337349 + 0.02409638554216867*x - 0.216867469879518*y + 0.02409638554216867*n >= 0)  &&  (1 + 0.002974609582492298*x + 0.02039732285137576*y - 0.0002124721130351641*n >= 0)  &&  (1.150170648464164 - 0.04095563139931741*x - 0.1092150170648464*y + 0.006825938566552901*n >= 0)  &&  (1 + 0.05806451612903226*x - 0.03225806451612903*y + 0.04516129032258064*n >= 0)  &&  (1 + 0.01789883268482491*x + 0.0311284046692607*y + 0.01634241245136187*n >= 0)  &&  (1 - 0.009687836383207749*x + 0.01722282023681378*y + 0.04198062432723358*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 10 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 - x >= 0)  &&  (6 - y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(5 - x >= 0)  &&  (6 - y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (6,6,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (7,7,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,6,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,6,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,8,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (9,9,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,6,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,6,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [42+:21179-]|-->> [33m(0.9999522172739272 - 0.1999522012065*x + 0.200111476960075*y - 0.0001752033289324634*n >= 0)  &&  (2.062233489375976 - 0.230291211644634*x + 0.07860836655326547*y + 0.05048535274105675*n >= 0)  &&  (2.347593582887701 - 0.1390374331550802*x - 0.03208556149732621*y + 0.03208556149732621*n >= 0)  &&  (1.01486806633445 + 0.006589875554829399*x + 0.004847098548593525*y - 0.006480951991939657*n >= 0)  &&  (1.10212513003418 - 0.002377767870411651*x - 0.001129439738445534*y - 0.01058106702333185*n >= 0)  &&  (2.111111111111111 - 0.01851851851851852*x - 0.09259259259259259*y - 0.01851851851851852*n >= 0)  &&  (1.906937782703027 + 0.1049633182558386*x - 0.2345741628972929*y + 0.04325996984501033*n >= 0)  &&  (2.166906970916571 - 0.02223023236388567*x - 0.1444364343027809*y + 0.05551550484723813*n >= 0)  &&  (1.068290462098794 + 0.002503983610289097*x + 0.021170043250626*y - 0.0009105394946505805*n >= 0)  &&  (1.134696017673326 - 0.01557533317010496*x + 0.01550084562033181*y + 0.04474969745822895*n >= 0)  &&  (1.151456310679612 + 0.05825242718446602*x - 0.05048543689320388*y + 0.04271844660194175*n >= 0)  &&  (1.215002388915432 + 0.01911132345914954*x + 0.03535594839942666*y + 0.01720019111323459*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [42+:23374-]|-->> [33m(0.9999522172739272 - 0.1999522012065*x + 0.200111476960075*y - 0.0001752033289324634*n >= 0)  &&  (2.062233489375976 - 0.230291211644634*x + 0.07860836655326547*y + 0.05048535274105675*n >= 0)  &&  (2.347593582887701 - 0.1390374331550802*x - 0.03208556149732621*y + 0.03208556149732621*n >= 0)  &&  (1.01486806633445 + 0.006589875554829399*x + 0.004847098548593525*y - 0.006480951991939657*n >= 0)  &&  (1.10212513003418 - 0.002377767870411651*x - 0.001129439738445534*y - 0.01058106702333185*n >= 0)  &&  (2.111111111111111 - 0.01851851851851852*x - 0.09259259259259259*y - 0.01851851851851852*n >= 0)  &&  (1.906937782703027 + 0.1049633182558386*x - 0.2345741628972929*y + 0.04325996984501033*n >= 0)  &&  (2.166906970916571 - 0.02223023236388567*x - 0.1444364343027809*y + 0.05551550484723813*n >= 0)  &&  (1.068290462098794 + 0.002503983610289097*x + 0.021170043250626*y - 0.0009105394946505805*n >= 0)  &&  (1.134696017673326 - 0.01557533317010496*x + 0.01550084562033181*y + 0.04474969745822895*n >= 0)  &&  (1.151456310679612 + 0.05825242718446602*x - 0.05048543689320388*y + 0.04271844660194175*n >= 0)  &&  (1.215002388915432 + 0.01911132345914954*x + 0.03535594839942666*y + 0.01720019111323459*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 - x + y >= 0)  &&  (8 - y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(5 - x + y >= 0)  &&  (8 - y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (9,9,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (10,10,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (9,9,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (9,9,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (11,11,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (12,12,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (9,9,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (9,9,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [62+:26383-]|-->> [33m(1.320895073141786 - 0.0148562533861938*x + 0.01485625338619378*y + 0.1069650243805953*n >= 0)  &&  (1.000157833078293 - 0.1999435001627939*x + 0.2000418607574827*y - 4.574956859124124e-05*n >= 0)  &&  (2.418738320205462 - 0.2363901364600003*x + 0.09090909090909094*y + 0.03633713626727243*n >= 0)  &&  (1.01486806633445 + 0.006589875554829398*x + 0.004847098548593524*y - 0.006480951991939656*n >= 0)  &&  (1.144682170542636 - 0.002294573643410852*x - 0.0009922480620155037*y - 0.01085271317829457*n >= 0)  &&  (2.546391752577319 - 0.006872852233676979*x - 0.1168384879725086*y - 0.006872852233676979*n >= 0)  &&  (1.342662750271785 + 0.1805749449943568*x - 0.2157782269890896*y + 0.008864070407223375*n >= 0)  &&  (2.80048767958306 - 0.01242940212729918*x - 0.1722360009068608*y + 0.04616635075854006*n >= 0)  &&  (1.068290462098794 + 0.002503983610289096*x + 0.021170043250626*y - 0.0009105394946505804*n >= 0)  &&  (1.215002388915432 + 0.01911132345914954*x + 0.03535594839942666*y + 0.01720019111323459*n >= 0)  &&  (1.151456310679612 + 0.05825242718446602*x - 0.05048543689320388*y + 0.04271844660194175*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [62+:27993-]|-->> [33m(1.320895073141786 - 0.0148562533861938*x + 0.01485625338619378*y + 0.1069650243805953*n >= 0)  &&  (1.000157833078293 - 0.1999435001627939*x + 0.2000418607574827*y - 4.574956859124124e-05*n >= 0)  &&  (2.418738320205462 - 0.2363901364600003*x + 0.09090909090909094*y + 0.03633713626727243*n >= 0)  &&  (1.01486806633445 + 0.006589875554829398*x + 0.004847098548593524*y - 0.006480951991939656*n >= 0)  &&  (1.144682170542636 - 0.002294573643410852*x - 0.0009922480620155037*y - 0.01085271317829457*n >= 0)  &&  (2.546391752577319 - 0.006872852233676979*x - 0.1168384879725086*y - 0.006872852233676979*n >= 0)  &&  (1.342662750271785 + 0.1805749449943568*x - 0.2157782269890896*y + 0.008864070407223375*n >= 0)  &&  (2.80048767958306 - 0.01242940212729918*x - 0.1722360009068608*y + 0.04616635075854006*n >= 0)  &&  (1.068290462098794 + 0.002503983610289096*x + 0.021170043250626*y - 0.0009105394946505804*n >= 0)  &&  (1.215002388915432 + 0.01911132345914954*x + 0.03535594839942666*y + 0.01720019111323459*n >= 0)  &&  (1.151456310679612 + 0.05825242718446602*x - 0.05048543689320388*y + 0.04271844660194175*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(30 + 4*x - 5*y >= 0)  &&  (5 - x + y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(30 + 4*x - 5*y >= 0)  &&  (5 - x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (31,31,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (32,32,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (31,31,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (31,31,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (33,33,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (34,34,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (31,31,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (31,31,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [158+:30427-]|-->> [33m(1.303506790744283 + 0.02248198449957654*x - 0.0224819844995765*y + 0.1011689302480944*n >= 0)  &&  (1.000081205181332 - 0.199944073496547*x + 0.1999548219910718*y + 1.631989925283961e-05*n >= 0)  &&  (7.159173118380266 - 0.2103951718845196*x + 0.01338196579552486*y + 0.017395996407921*n >= 0)  &&  (5.308199121219012 - 0.09697119868034604*x - 0.04085039463783377*y + 0.01218500166448713*n >= 0)  &&  (1.05020920502092 - 0.03765690376569038*x + 0.07949790794979081*y - 0.02510460251046025*n >= 0)  &&  (3.560493827160495 - 0.04938271604938274*x + 0.01728395061728395*y - 0.04691358024691361*n >= 0)  &&  (0.9999484126678828 + 0.1249715003155144*x - 0.1249837345179317*y - 4.961574955136827e-06*n >= 0)  &&  (1.215002388915432 + 0.01911132345914954*x + 0.03535594839942666*y + 0.01720019111323459*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [158+:31765-]|-->> [33m(1.303506790744283 + 0.02248198449957654*x - 0.0224819844995765*y + 0.1011689302480944*n >= 0)  &&  (1.000081205181332 - 0.199944073496547*x + 0.1999548219910718*y + 1.631989925283961e-05*n >= 0)  &&  (7.159173118380266 - 0.2103951718845196*x + 0.01338196579552486*y + 0.017395996407921*n >= 0)  &&  (5.308199121219012 - 0.09697119868034604*x - 0.04085039463783377*y + 0.01218500166448713*n >= 0)  &&  (1.05020920502092 - 0.03765690376569038*x + 0.07949790794979081*y - 0.02510460251046025*n >= 0)  &&  (3.560493827160495 - 0.04938271604938274*x + 0.01728395061728395*y - 0.04691358024691361*n >= 0)  &&  (0.9999484126678828 + 0.1249715003155144*x - 0.1249837345179317*y - 4.961574955136827e-06*n >= 0)  &&  (1.215002388915432 + 0.01911132345914954*x + 0.03535594839942666*y + 0.01720019111323459*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(8 + x - y >= 0)  &&  (5 - x + y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(8 + x - y >= 0)  &&  (5 - x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (-1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-8,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-9,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [158+:33687-]|-->> [33m(1.000084629808065 - 0.999506326119568*x + 1.999040862175162*y - 0.999506326119568*n >= 0)  &&  (1.00008438697574 + 1.999092124991709*x - 1.999088251358206*y + 2.425535841243942e-05*n >= 0)  &&  (1.303506790744283 + 0.02248198449957654*x - 0.0224819844995765*y + 0.1011689302480944*n >= 0)  &&  (1.000081205181332 - 0.199944073496547*x + 0.1999548219910718*y + 1.631989925283961e-05*n >= 0)  &&  (7.159173118380266 - 0.2103951718845196*x + 0.01338196579552486*y + 0.017395996407921*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [158+:35541-]|-->> [33m(1.000084629808065 - 0.999506326119568*x + 1.999040862175162*y - 0.999506326119568*n >= 0)  &&  (1.00008438697574 + 1.999092124991709*x - 1.999088251358206*y + 2.425535841243942e-05*n >= 0)  &&  (1.303506790744283 + 0.02248198449957654*x - 0.0224819844995765*y + 0.1011689302480944*n >= 0)  &&  (1.000081205181332 - 0.199944073496547*x + 0.1999548219910718*y + 1.631989925283961e-05*n >= 0)  &&  (7.159173118380266 - 0.2103951718845196*x + 0.01338196579552486*y + 0.017395996407921*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - x + 2*y - n >= 0)  &&  (1 + 2*x - 2*y >= 0)  &&  (5 - x + y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(1 - x + 2*y - n >= 0)  &&  (1 + 2*x - 2*y >= 0)  &&  (5 - x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (0,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-6,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-7,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-8,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [158+:37607-]|-->> [33m(1.00008438697574 - 1.999088251358206*x + 1.999092124991709*y + 2.425535841243942e-05*n >= 0)  &&  (1.000084629808065 - 0.999506326119568*x + 1.999040862175162*y - 0.999506326119568*n >= 0)  &&  (1.00008438697574 + 1.999092124991709*x - 1.999088251358206*y + 2.425535841243942e-05*n >= 0)  &&  (1.303506790744283 + 0.02248198449957654*x - 0.0224819844995765*y + 0.1011689302480944*n >= 0)  &&  (7.159173118380266 - 0.2103951718845196*x + 0.01338196579552486*y + 0.017395996407921*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [158+:39398-]|-->> [33m(1.00008438697574 - 1.999088251358206*x + 1.999092124991709*y + 2.425535841243942e-05*n >= 0)  &&  (1.000084629808065 - 0.999506326119568*x + 1.999040862175162*y - 0.999506326119568*n >= 0)  &&  (1.00008438697574 + 1.999092124991709*x - 1.999088251358206*y + 2.425535841243942e-05*n >= 0)  &&  (1.303506790744283 + 0.02248198449957654*x - 0.0224819844995765*y + 0.1011689302480944*n >= 0)  &&  (7.159173118380266 - 0.2103951718845196*x + 0.01338196579552486*y + 0.017395996407921*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*x - 2*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*x - 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [158+:41355-]|-->> [33m(1.000085659197186 + 0.9995574274811201*x + 0.9995574274811201*y - 1.999086301896507*n >= 0)  &&  (1.00008438697574 - 1.999088251358206*x + 1.999092124991709*y + 2.425535841243942e-05*n >= 0)  &&  (1.000084629808065 - 0.999506326119568*x + 1.999040862175162*y - 0.999506326119568*n >= 0)  &&  (1.00008438697574 + 1.999092124991709*x - 1.999088251358206*y + 2.425535841243942e-05*n >= 0)  &&  (1.303506790744283 + 0.02248198449957654*x - 0.0224819844995765*y + 0.1011689302480944*n >= 0)  &&  (7.159173118380266 - 0.2103951718845196*x + 0.01338196579552486*y + 0.017395996407921*n >= 0) 
