[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target half
[  8%] Building CXX object CMakeFiles/half.dir/test/half.cpp.o
[ 16%] Building CXX object CMakeFiles/half.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/half.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/half.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/half.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/half.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/half.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/half.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/half.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/half.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/half.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/half.dir/src/instrumentation.cpp.o
Linking CXX executable half
[100%] Built target half
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:817-]|-->> [33m(1 - 0.006057525310289321*i + 0.001948574575337824*k - 0.006650569746261703*n >= 0)  &&  (1 - 0.003097893432465923*i + 0.01065675340768278*k - 0.0008674101610904586*n >= 0)  &&  (1 + 0.005173471292567801*i + 0.002826742046454572*k - 0.008480226139363715*n >= 0)  &&  (1 + 0.007633093990555663*i + 0.01384306876253315*k - 0.002975612911572546*n >= 0)  &&  (1 - 0.01540522438044206*i + 0.02009377093101139*k - 0.00535833891493637*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:1963-]|-->> [33m(1 - 0.006057525310289321*i + 0.001948574575337824*k - 0.006650569746261703*n >= 0)  &&  (1 - 0.003097893432465923*i + 0.01065675340768278*k - 0.0008674101610904586*n >= 0)  &&  (1 + 0.008593936500358081*i + 0.01289090475053712*k - 0.02673669133444736*n >= 0)  &&  (1 + 0.007633093990555663*i + 0.01384306876253315*k - 0.002975612911572546*n >= 0)  &&  (1 - 0.01540522438044206*i + 0.02009377093101139*k - 0.00535833891493637*n >= 0)  &&  (1 + 0.005745816042683205*i - 0.007478681198413061*k - 0.009667563500387616*n >= 0)  &&  (1 - 0.006175499066494327*i - 0.004164871463449663*k - 0.01522332328019532*n >= 0)  &&  (1 + 0.01704800358905339*i - 0.0004486316733961418*k - 0.01256168685509197*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:2836-]|-->> [33m(1 - 0.006057525310289321*i + 0.001948574575337824*k - 0.006650569746261703*n >= 0)  &&  (1 - 0.003097893432465923*i + 0.01065675340768278*k - 0.0008674101610904586*n >= 0)  &&  (1 + 0.008593936500358081*i + 0.01289090475053712*k - 0.02673669133444736*n >= 0)  &&  (1 + 0.007633093990555663*i + 0.01384306876253315*k - 0.002975612911572546*n >= 0)  &&  (1 - 0.01540522438044206*i + 0.02009377093101139*k - 0.00535833891493637*n >= 0)  &&  (1 + 0.005745816042683205*i - 0.007478681198413061*k - 0.009667563500387616*n >= 0)  &&  (1 - 0.006175499066494327*i - 0.004164871463449663*k - 0.01522332328019532*n >= 0)  &&  (1 + 0.01704800358905339*i - 0.0004486316733961418*k - 0.01256168685509197*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (2,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:3685-]|-->> [33m(1 + 2*k >= 0)  &&  (1 - 0.003097893432465923*i + 0.01065675340768278*k - 0.0008674101610904586*n >= 0)  &&  (1 - 0.5*i - 0.5*n >= 0)  &&  (1 + 0.007633093990555663*i + 0.01384306876253315*k - 0.002975612911572546*n >= 0)  &&  (1 - 0.01540522438044206*i + 0.02009377093101139*k - 0.00535833891493637*n >= 0)  &&  (1 + 0.005745816042683205*i - 0.007478681198413061*k - 0.009667563500387616*n >= 0)  &&  (1 + 0.008593936500358081*i + 0.01289090475053712*k - 0.02673669133444736*n >= 0)  &&  (1 + 0.01704800358905339*i - 0.0004486316733961418*k - 0.01256168685509197*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:4713-]|-->> [33m(1 + 2*k >= 0)  &&  (1 - 0.003097893432465923*i + 0.01065675340768278*k - 0.0008674101610904586*n >= 0)  &&  (1 - 0.5*i - 0.5*n >= 0)  &&  (1 + 0.007633093990555663*i + 0.01384306876253315*k - 0.002975612911572546*n >= 0)  &&  (1 - 0.01540522438044206*i + 0.02009377093101139*k - 0.00535833891493637*n >= 0)  &&  (1 + 0.005745816042683205*i - 0.007478681198413061*k - 0.009667563500387616*n >= 0)  &&  (1 + 0.008593936500358081*i + 0.01289090475053712*k - 0.02673669133444736*n >= 0)  &&  (1 + 0.01704800358905339*i - 0.0004486316733961418*k - 0.01256168685509197*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0)  &&  (2 - i - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + 2*k >= 0)  &&  (2 - i - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,3,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,4,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,5,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,6,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,7,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,8,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,9,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,10,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:5855-]|-->> [33m(1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.002735807996021 - 0.002860162904930672*i + 0.01075669962071753*k - 0.0006839519990051606*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1 + 0.007633093990555663*i + 0.01384306876253315*k - 0.002975612911572546*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.146225846623549 + 0.00731129233117744*i - 0.006909572972321537*k - 0.007713011690033343*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0)  &&  (1.089213300892133 + 0.0178426601784266*i + 0.0004055150040551498*k - 0.009326845093268452*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:6706-]|-->> [33m(1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.002735807996021 - 0.002860162904930672*i + 0.01075669962071753*k - 0.0006839519990051606*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1 + 0.007633093990555663*i + 0.01384306876253315*k - 0.002975612911572546*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.146225846623549 + 0.00731129233117744*i - 0.006909572972321537*k - 0.007713011690033343*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0)  &&  (1.089213300892133 + 0.0178426601784266*i + 0.0004055150040551498*k - 0.009326845093268452*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 2*i + 7*k - 5*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(3 + 2*i + 7*k - 5*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (-9,1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-11,-3,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,-6,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-25,-9,-22) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-32,-12,-29) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-39,-15,-36) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-46,-18,-43) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-53,-21,-50) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:7588-]|-->> [33m(1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:8626-]|-->> [33m(1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 + i >= 0)  &&  (3 + 2*i + 7*k - 5*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(5 + i >= 0)  &&  (3 + 2*i + 7*k - 5*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (-1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,6,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,3,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:9252-]|-->> [33m(1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:9737-]|-->> [33m(1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i >= 0)  &&  (3 + 2*i + 7*k - 5*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + 2*i >= 0)  &&  (3 + 2*i + 7*k - 5*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (2,4,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,2,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,2,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,3,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,3,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:10530-]|-->> [33m(1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:11343-]|-->> [33m(1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i + 4*k - 4*n >= 0)  &&  (5 + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + 2*i + 4*k - 4*n >= 0)  &&  (5 + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (10,-6,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (8,-7,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-8,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:12403-]|-->> [33m(1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:13798-]|-->> [33m(1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.061385774673773 - 0.01323286160632237*i + 0.02352508730012865*k - 0.002573056423451571*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i + 4*k - 4*n >= 0)  &&  (1 + 2*i >= 0)  &&  (3 + 2*i + 7*k - 5*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + 2*i + 4*k - 4*n >= 0)  &&  (1 + 2*i >= 0)  &&  (3 + 2*i + 7*k - 5*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (2,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:14680-]|-->> [33m(1 - 0.5926603215957664*i + 0.8146793568084676*k + 0.5183491960105844*n >= 0)  &&  (1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:15592-]|-->> [33m(1 - 0.5926603215957664*i + 0.8146793568084676*k + 0.5183491960105844*n >= 0)  &&  (1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(8 - 5*i + 6*k + 4*n >= 0)  &&  (1 + 2*i + 4*k - 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(8 - 5*i + 6*k + 4*n >= 0)  &&  (1 + 2*i + 4*k - 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 9 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (-14,-5,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-39,-6,-38) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-50,-15,-40) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-99,-16,-98) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-13,-4,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-126,-38,-102) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-237,-39,-236) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-294,-86,-240) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:17610-]|-->> [33m(1 - 0.5926603215957664*i + 0.8146793568084676*k + 0.5183491960105844*n >= 0)  &&  (1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:18731-]|-->> [33m(1 - 0.5926603215957664*i + 0.8146793568084676*k + 0.5183491960105844*n >= 0)  &&  (1 + 1.999015429982045*i + 3.998030859964093*k - 3.998027656316989*n >= 0)  &&  (1 + 1.999557283758774*i + 2.21358120613182e-05*k + 2.21358120613182e-05*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1.420909708078751 - 0.03598099117447386*i + 0.002715546503733876*k - 0.007467752885268159*n >= 0)  &&  (1.400112707805016 + 0.01803324880247957*i - 0.01916032685263454*k - 0.020850943927867*n >= 0)  &&  (1.251256281407035 - 0.0005583472920156337*i - 0.007258514796203238*k - 0.01786711334450028*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(8 - 5*i + 6*k + 4*n >= 0)  &&  (1 + 2*i + 4*k - 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(8 - 5*i + 6*k + 4*n >= 0)  &&  (1 + 2*i + 4*k - 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
