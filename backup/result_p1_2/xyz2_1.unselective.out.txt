[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target xyz2_1
[  8%] Building CXX object CMakeFiles/xyz2_1.dir/test/xyz2_1.cpp.o
[ 16%] Building CXX object CMakeFiles/xyz2_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/xyz2_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/xyz2_1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/xyz2_1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/xyz2_1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/xyz2_1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/xyz2_1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/xyz2_1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/xyz2_1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/xyz2_1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/xyz2_1.dir/src/instrumentation.cpp.o
Linking CXX executable xyz2_1
[100%] Built target xyz2_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [3+:257-]|-->> [33m(1.274343776460626 - 0.00846740050804403*x - 0.0270956816257409*y + 0.05080440304826418*z >= 0)  &&  (1 + 0.024026512013256*x + 0.02734051367025683*y + 0.01822700911350456*z >= 0)  &&  (1.017263928851687 - 0.01007062516348417*x + 0.005100706251634841*y + 0.001831022756997122*z >= 0)  &&  (1 - 0.004843160443768655*x + 0.01374105986371572*y - 0.003604212423269697*z >= 0)  &&  (1.003528950463992 - 0.003855705136583453*x - 0.005881584106652725*y - 0.003986407005620181*z >= 0)  &&  (1 + 0.003799071338117349*x + 0.02363866610384128*y - 0.01646264246517518*z >= 0)  &&  (1 + 0.06526806526806526*x - 0.0372960372960373*y - 0.06060606060606061*z >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [3+:475-]|-->> [33m(1.274343776460626 - 0.00846740050804403*x - 0.0270956816257409*y + 0.05080440304826418*z >= 0)  &&  (1 - 0.01047642803691694*x - 0.00149663257670242*y - 0.01172362185083562*z >= 0)  &&  (1.017263928851687 - 0.01007062516348417*x + 0.005100706251634841*y + 0.001831022756997122*z >= 0)  &&  (1 - 0.004843160443768655*x + 0.01374105986371572*y - 0.003604212423269697*z >= 0)  &&  (1 + 0.024026512013256*x + 0.02734051367025683*y + 0.01822700911350456*z >= 0)  &&  (1 + 0.003799071338117349*x + 0.02363866610384128*y - 0.01646264246517518*z >= 0)  &&  (1 + 0.06526806526806526*x - 0.0372960372960373*y - 0.06060606060606061*z >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [3+:722-]|-->> [33m(1.274343776460626 - 0.00846740050804403*x - 0.0270956816257409*y + 0.05080440304826418*z >= 0)  &&  (1 - 0.01047642803691694*x - 0.00149663257670242*y - 0.01172362185083562*z >= 0)  &&  (1.017263928851687 - 0.01007062516348417*x + 0.005100706251634841*y + 0.001831022756997122*z >= 0)  &&  (1 - 0.004843160443768655*x + 0.01374105986371572*y - 0.003604212423269697*z >= 0)  &&  (1 + 0.024026512013256*x + 0.02734051367025683*y + 0.01822700911350456*z >= 0)  &&  (1 + 0.003799071338117349*x + 0.02363866610384128*y - 0.01646264246517518*z >= 0)  &&  (1 + 0.06526806526806526*x - 0.0372960372960373*y - 0.06060606060606061*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt[0m
[34m[1mTest Counter Example: (0,1,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [3+:986-]|-->> [33m(1.274343776460626 - 0.00846740050804403*x - 0.0270956816257409*y + 0.05080440304826418*z >= 0)  &&  (1.024691358024691 - 0.08641975308641975*x - 0.09876543209876543*y - 0.08641975308641975*z >= 0)  &&  (1.017263928851687 - 0.01007062516348417*x + 0.005100706251634841*y + 0.001831022756997122*z >= 0)  &&  (1 - 0.004843160443768655*x + 0.01374105986371572*y - 0.003604212423269697*z >= 0)  &&  (1 - 0.02857142857142857*x - 0.03428571428571429*y - 0.09714285714285714*z >= 0)  &&  (1 + 0.003799071338117349*x + 0.02363866610384128*y - 0.01646264246517518*z >= 0)  &&  (1 + 0.024026512013256*x + 0.02734051367025683*y + 0.01822700911350456*z >= 0)  &&  (1 + 0.06526806526806526*x - 0.0372960372960373*y - 0.06060606060606061*z >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [3+:1246-]|-->> [33m(1.274343776460626 - 0.00846740050804403*x - 0.0270956816257409*y + 0.05080440304826418*z >= 0)  &&  (1.024691358024691 - 0.08641975308641975*x - 0.09876543209876543*y - 0.08641975308641975*z >= 0)  &&  (1.017263928851687 - 0.01007062516348417*x + 0.005100706251634841*y + 0.001831022756997122*z >= 0)  &&  (1 - 0.004843160443768655*x + 0.01374105986371572*y - 0.003604212423269697*z >= 0)  &&  (1 - 0.02857142857142857*x - 0.03428571428571429*y - 0.09714285714285714*z >= 0)  &&  (1 + 0.003799071338117349*x + 0.02363866610384128*y - 0.01646264246517518*z >= 0)  &&  (1 + 0.024026512013256*x + 0.02734051367025683*y + 0.01822700911350456*z >= 0)  &&  (1 + 0.06526806526806526*x - 0.0372960372960373*y - 0.06060606060606061*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt[0m
[34m[1mTest Counter Example: (0,1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [3+:1472-]|-->> [33m(1.274343776460626 - 0.00846740050804403*x - 0.0270956816257409*y + 0.05080440304826418*z >= 0)  &&  (1 + 1.999612285113977*x - 1.999515356392471*y - 9.692872150601772e-05*z >= 0)  &&  (1.017263928851687 - 0.01007062516348417*x + 0.005100706251634841*y + 0.001831022756997122*z >= 0)  &&  (1 - 0.004843160443768655*x + 0.01374105986371572*y - 0.003604212423269697*z >= 0)  &&  (1 + x - z >= 0)  &&  (1 + 0.003799071338117349*x + 0.02363866610384128*y - 0.01646264246517518*z >= 0)  &&  (1 - 0.1818486928212164*x - 1.272605228715135*y - 0.7270591502514856*z >= 0)  &&  (1 - y - z >= 0)  &&  (1 + 0.024026512013256*x + 0.02734051367025683*y + 0.01822700911350456*z >= 0)  &&  (1 + 0.2*x - 0.6000000000000001*z >= 0)  &&  (1 - 0.1818181818181819*x - 0.2727272727272728*y - 0.2727272727272728*z >= 0)  &&  (1.024691358024691 - 0.08641975308641975*x - 0.09876543209876543*y - 0.08641975308641975*z >= 0)  &&  (1 - 0.04*y - 0.28*z >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [3+:1714-]|-->> [33m(1.274343776460626 - 0.00846740050804403*x - 0.0270956816257409*y + 0.05080440304826418*z >= 0)  &&  (1 + 1.999612285113977*x - 1.999515356392471*y - 9.692872150601772e-05*z >= 0)  &&  (1.017263928851687 - 0.01007062516348417*x + 0.005100706251634841*y + 0.001831022756997122*z >= 0)  &&  (1 - 0.004843160443768655*x + 0.01374105986371572*y - 0.003604212423269697*z >= 0)  &&  (1 + x - z >= 0)  &&  (1 + 0.003799071338117349*x + 0.02363866610384128*y - 0.01646264246517518*z >= 0)  &&  (1 - 0.1818486928212164*x - 1.272605228715135*y - 0.7270591502514856*z >= 0)  &&  (1 - y - z >= 0)  &&  (1 + 0.024026512013256*x + 0.02734051367025683*y + 0.01822700911350456*z >= 0)  &&  (1 + 0.2*x - 0.6000000000000001*z >= 0)  &&  (1 - 0.1818181818181819*x - 0.2727272727272728*y - 0.2727272727272728*z >= 0)  &&  (1.024691358024691 - 0.08641975308641975*x - 0.09876543209876543*y - 0.08641975308641975*z >= 0)  &&  (1 - 0.04*y - 0.28*z >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 - x - 7*y - 4*z >= 0)  &&  (1 + 2*x - 2*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/xyz2_1.inv >>> [0m(5 - x - 7*y - 4*z >= 0)  &&  (1 + 2*x - 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
