[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_15
[  8%] Building CXX object CMakeFiles/dillig_15.dir/test/dillig_15.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_15.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_15.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_15.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_15.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_15.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_15.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_15.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_15.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_15.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_15.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_15.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_15
[100%] Built target dillig_15
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1711-]|-->> [33m(1.015285091018505 + 0.0001805325710846999*k - 0.008966451030540093*j - 0.006318639987964496*n >= 0)  &&  (1.007984256395839 + 0.00539780714084903*k - 0.01304470059038516*j + 0.005060444194545965*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136272*j + 0.01148105625717566*n >= 0)  &&  (1.004287187279535 + 0.002279264123297335*k + 0.007760351657893308*j - 0.006566451402832799*n >= 0)  &&  (1.013124553310376 - 0.006453988261538128*k + 0.0006930457193597989*j - 0.006670565048838064*n >= 0)  &&  (1.01131931166348 + 0.005047801147227533*k + 0.004741873804971319*j - 0.01606118546845124*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:2515-]|-->> [33m(1.015285091018505 + 0.0001805325710846999*k - 0.008966451030540093*j - 0.006318639987964496*n >= 0)  &&  (1.007984256395839 + 0.00539780714084903*k - 0.01304470059038516*j + 0.005060444194545965*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136272*j + 0.01148105625717566*n >= 0)  &&  (1.004287187279535 + 0.002279264123297335*k + 0.007760351657893308*j - 0.006566451402832799*n >= 0)  &&  (1.013124553310376 - 0.006453988261538128*k + 0.0006930457193597989*j - 0.006670565048838064*n >= 0)  &&  (1.01131931166348 + 0.005047801147227533*k + 0.004741873804971319*j - 0.01606118546845124*n >= 0)  &&  (0.9891906142894806 + 0.01370946480358555*k + 0.01819140522014237*j - 0.002900079093066174*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:4285-]|-->> [33m(1.015285091018505 + 0.0001805325710846999*k - 0.008966451030540093*j - 0.006318639987964496*n >= 0)  &&  (1.007984256395839 + 0.00539780714084903*k - 0.01304470059038516*j + 0.005060444194545965*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136272*j + 0.01148105625717566*n >= 0)  &&  (1.004287187279535 + 0.002279264123297335*k + 0.007760351657893308*j - 0.006566451402832799*n >= 0)  &&  (1.013124553310376 - 0.006453988261538128*k + 0.0006930457193597989*j - 0.006670565048838064*n >= 0)  &&  (1.01131931166348 + 0.005047801147227533*k + 0.004741873804971319*j - 0.01606118546845124*n >= 0)  &&  (0.9891906142894806 + 0.01370946480358555*k + 0.01819140522014237*j - 0.002900079093066174*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:5889-]|-->> [33m(1.015285091018505 + 0.0001805325710846999*k - 0.008966451030540093*j - 0.006318639987964496*n >= 0)  &&  (1.007984256395839 + 0.00539780714084903*k - 0.01304470059038516*j + 0.005060444194545965*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136272*j + 0.01148105625717566*n >= 0)  &&  (1.100603621730382 - 0.03219315895372233*k + 0.0482897384305835*j - 0.06841046277665995*n >= 0)  &&  (1.013124553310376 - 0.006453988261538128*k + 0.0006930457193597989*j - 0.006670565048838064*n >= 0)  &&  (1.047863247863248 - 0.02849002849002849*k + 0.03304843304843305*j - 0.01937321937321938*n >= 0)  &&  (0.9891906142894806 + 0.01370946480358555*k + 0.01819140522014237*j - 0.002900079093066174*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.021192052980132 - 0.01618837380426784*k + 0.01736571008094187*j - 0.005003679175864605*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:8218-]|-->> [33m(1.015285091018505 + 0.0001805325710846999*k - 0.008966451030540093*j - 0.006318639987964496*n >= 0)  &&  (1.007984256395839 + 0.00539780714084903*k - 0.01304470059038516*j + 0.005060444194545965*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136272*j + 0.01148105625717566*n >= 0)  &&  (1.100603621730382 - 0.03219315895372233*k + 0.0482897384305835*j - 0.06841046277665995*n >= 0)  &&  (1.013124553310376 - 0.006453988261538128*k + 0.0006930457193597989*j - 0.006670565048838064*n >= 0)  &&  (1.047863247863248 - 0.02849002849002849*k + 0.03304843304843305*j - 0.01937321937321938*n >= 0)  &&  (0.9891906142894806 + 0.01370946480358555*k + 0.01819140522014237*j - 0.002900079093066174*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.021192052980132 - 0.01618837380426784*k + 0.01736571008094187*j - 0.005003679175864605*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-5,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:10229-]|-->> [33m(2.2 - 0.4*j - 0.8000000000000002*n >= 0)  &&  (1.007984256395839 + 0.00539780714084903*k - 0.01304470059038516*j + 0.005060444194545965*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136272*j + 0.01148105625717566*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0)  &&  (1.100603621730382 - 0.03219315895372233*k + 0.0482897384305835*j - 0.06841046277665995*n >= 0)  &&  (1.047863247863248 - 0.02849002849002849*k + 0.03304843304843305*j - 0.01937321937321938*n >= 0)  &&  (1.021192052980132 - 0.01618837380426784*k + 0.01736571008094187*j - 0.005003679175864605*n >= 0)  &&  (1 + 2*k >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:10727-]|-->> [33m(2.2 - 0.4*j - 0.8000000000000002*n >= 0)  &&  (1.007984256395839 + 0.00539780714084903*k - 0.01304470059038516*j + 0.005060444194545965*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136272*j + 0.01148105625717566*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0)  &&  (1.100603621730382 - 0.03219315895372233*k + 0.0482897384305835*j - 0.06841046277665995*n >= 0)  &&  (1.047863247863248 - 0.02849002849002849*k + 0.03304843304843305*j - 0.01937321937321938*n >= 0)  &&  (1.021192052980132 - 0.01618837380426784*k + 0.01736571008094187*j - 0.005003679175864605*n >= 0)  &&  (1 + 2*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(6 - j - 2*n >= 0)  &&  (1 + 2*k >= 0)  &&  ( -1 + 2*k + 2*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(6 - j - 2*n >= 0)  &&  (1 + 2*k >= 0)  &&  ( -1 + 2*k + 2*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (4,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (7,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [51+:12193-]|-->> [33m(1.111676468644684 + 0.0002643230027093108*k - 0.009449547346857859*j - 0.006541994317055442*n >= 0)  &&  (1.042568120687639 + 0.005730323938720618*k - 0.01286399251549526*j + 0.005964214711729622*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136271*j + 0.01148105625717566*n >= 0)  &&  (0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  (1.102636801814573 - 0.006710140818448164*k + 0.0007560722048955677*j - 0.006993667895284002*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (1.406593406593407 + 0.05494505494505495*k + 0.06593406593406594*j - 0.1208791208791209*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0)  &&  (1.156112428039282 - 0.01625465628174737*k + 0.01997968167964781*j - 0.00372502539790044*n >= 0)  &&  (1.319838056680162 - 0.02699055330634278*k + 0.0418353576248313*j - 0.01484480431848852*n >= 0)  &&  (1.582089552238806 - 0.02487562189054725*k + 0.07960199004975123*j - 0.05472636815920397*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [51+:13892-]|-->> [33m(1.111676468644684 + 0.0002643230027093108*k - 0.009449547346857859*j - 0.006541994317055442*n >= 0)  &&  (1.042568120687639 + 0.005730323938720618*k - 0.01286399251549526*j + 0.005964214711729622*n >= 0)  &&  (0.9845447319614943 + 0.003974211781330036*k + 0.005387264859136271*j + 0.01148105625717566*n >= 0)  &&  (0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  (1.102636801814573 - 0.006710140818448164*k + 0.0007560722048955677*j - 0.006993667895284002*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (1.406593406593407 + 0.05494505494505495*k + 0.06593406593406594*j - 0.1208791208791209*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0)  &&  (1.156112428039282 - 0.01625465628174737*k + 0.01997968167964781*j - 0.00372502539790044*n >= 0)  &&  (1.319838056680162 - 0.02699055330634278*k + 0.0418353576248313*j - 0.01484480431848852*n >= 0)  &&  (1.582089552238806 - 0.02487562189054725*k + 0.07960199004975123*j - 0.05472636815920397*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0)  &&  (1 + 2*k + 2*j - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 + 2*k >= 0)  &&  (1 + 2*k + 2*j - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
