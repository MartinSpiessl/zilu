[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target half
[  8%] Building CXX object CMakeFiles/half.dir/test/half.cpp.o
[ 16%] Building CXX object CMakeFiles/half.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/half.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/half.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/half.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/half.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/half.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/half.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/half.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/half.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/half.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/half.dir/src/instrumentation.cpp.o
Linking CXX executable half
[100%] Built target half
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:806-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 0.002037264971775391*i + 0.003692542761342897*k - 0.008191502907346887*n >= 0)  &&  (1 + 0.01230891403613262*i + 0.006352987889616835*k - 0.002580901330156839*n >= 0)  &&  (1 + 0.005057858839757836*i - 0.005594298413671546*k - 0.00444478504099931*n >= 0)  &&  (1 + 0.0003961180431768667*i - 0.008120419885125768*k - 0.01148742325212913*n >= 0)  &&  (1 - 0.02096020393711939*i + 0.01019685596940943*k - 0.004815181985554454*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:1434-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 0.01399533488837054*i - 0.01066311229590137*k - 0.0319893368877041*n >= 0)  &&  (1 + 0.01230891403613262*i + 0.006352987889616835*k - 0.002580901330156839*n >= 0)  &&  (1 + 0.005057858839757836*i - 0.005594298413671546*k - 0.00444478504099931*n >= 0)  &&  (1 + 0.0003961180431768667*i - 0.008120419885125768*k - 0.01148742325212913*n >= 0)  &&  (1 - 0.02096020393711939*i + 0.01019685596940943*k - 0.004815181985554454*n >= 0)  &&  (1 + 0.02292768959435626*i + 0.00599647266313933*k - 0.01199294532627866*n >= 0)  &&  (1 + 0.008191556395715185*i + 0.02709514807813485*k - 0.02142407057340895*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:2407-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 0.01399533488837054*i - 0.01066311229590137*k - 0.0319893368877041*n >= 0)  &&  (1 + 0.01230891403613262*i + 0.006352987889616835*k - 0.002580901330156839*n >= 0)  &&  (1 + 0.005057858839757836*i - 0.005594298413671546*k - 0.00444478504099931*n >= 0)  &&  (1 + 0.0003961180431768667*i - 0.008120419885125768*k - 0.01148742325212913*n >= 0)  &&  (1 - 0.02096020393711939*i + 0.01019685596940943*k - 0.004815181985554454*n >= 0)  &&  (1 + 0.02292768959435626*i + 0.00599647266313933*k - 0.01199294532627866*n >= 0)  &&  (1 + 0.008191556395715185*i + 0.02709514807813485*k - 0.02142407057340895*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (2,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:3199-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 + 0.01230891403613262*i + 0.006352987889616835*k - 0.002580901330156839*n >= 0)  &&  (1 + 0.005057858839757836*i - 0.005594298413671546*k - 0.00444478504099931*n >= 0)  &&  (1 + 0.0003961180431768667*i - 0.008120419885125768*k - 0.01148742325212913*n >= 0)  &&  (1 - 0.02096020393711939*i + 0.01019685596940943*k - 0.004815181985554454*n >= 0)  &&  (1 + 0.02292768959435626*i + 0.00599647266313933*k - 0.01199294532627866*n >= 0)  &&  (1 - 0.5*i - 0.5*n >= 0)  &&  (1 + 0.01399533488837054*i - 0.01066311229590137*k - 0.0319893368877041*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:3975-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 + 0.01230891403613262*i + 0.006352987889616835*k - 0.002580901330156839*n >= 0)  &&  (1 + 0.005057858839757836*i - 0.005594298413671546*k - 0.00444478504099931*n >= 0)  &&  (1 + 0.0003961180431768667*i - 0.008120419885125768*k - 0.01148742325212913*n >= 0)  &&  (1 - 0.02096020393711939*i + 0.01019685596940943*k - 0.004815181985554454*n >= 0)  &&  (1 + 0.02292768959435626*i + 0.00599647266313933*k - 0.01199294532627866*n >= 0)  &&  (1 - 0.5*i - 0.5*n >= 0)  &&  (1 + 0.01399533488837054*i - 0.01066311229590137*k - 0.0319893368877041*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 - i - n >= 0)  &&  (1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(2 - i - n >= 0)  &&  (1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,3,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,4,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,5,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,6,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,7,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,8,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,9,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,10,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:4753-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.471118508698438 + 0.002455887471172872*i + 0.004935566177970526*k - 0.05204741704781435*n >= 0)  &&  (1.102638052421749 + 0.005598439223004496*i - 0.005768088896428875*k - 0.004495716345746035*n >= 0)  &&  (1.210817349231035 + 0.001612810321986061*i - 0.008870456770923334*k - 0.01221127815218017*n >= 0)  &&  (1.191666666666667 - 0.02222222222222222*i + 0.01388888888888889*k - 0.002777777777777777*n >= 0)  &&  (1 + 0.02352726913929087*i + 0.009230310051302783*k - 0.009229547273371596*n >= 0)  &&  (1.387965162311956 + 0.02454473475851148*i - 0.00870942201108472*k - 0.03008709422011085*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:5209-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.471118508698438 + 0.002455887471172872*i + 0.004935566177970526*k - 0.05204741704781435*n >= 0)  &&  (1.102638052421749 + 0.005598439223004496*i - 0.005768088896428875*k - 0.004495716345746035*n >= 0)  &&  (1.210817349231035 + 0.001612810321986061*i - 0.008870456770923334*k - 0.01221127815218017*n >= 0)  &&  (1.191666666666667 - 0.02222222222222222*i + 0.01388888888888889*k - 0.002777777777777777*n >= 0)  &&  (1 + 0.02352726913929087*i + 0.009230310051302783*k - 0.009229547273371596*n >= 0)  &&  (1.387965162311956 + 0.02454473475851148*i - 0.00870942201108472*k - 0.03008709422011085*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 2*i + 7*k - 5*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(3 + 2*i + 7*k - 5*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (-9,1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-11,-3,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,-6,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-25,-9,-22) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-32,-12,-29) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-39,-15,-36) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-46,-18,-43) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-53,-21,-50) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [37+:6096-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.102638052421749 + 0.005598439223004496*i - 0.005768088896428875*k - 0.004495716345746035*n >= 0)  &&  (1.210817349231035 + 0.001612810321986061*i - 0.008870456770923334*k - 0.01221127815218017*n >= 0)  &&  (1.191666666666667 - 0.02222222222222222*i + 0.01388888888888889*k - 0.002777777777777777*n >= 0)  &&  (1.471118508698438 + 0.002455887471172872*i + 0.004935566177970526*k - 0.05204741704781435*n >= 0)  &&  (1.387965162311956 + 0.02454473475851148*i - 0.00870942201108472*k - 0.03008709422011085*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [37+:7220-]|-->> [33m(1 - 0.005042016806722689*i + 0.01781512605042017*k + 0.01815126050420168*n >= 0)  &&  (1 + 0.2093023255813953*i - 0.02325581395348837*k + 0.04651162790697674*n >= 0)  &&  (1 + 0.6663871289493652*i + 2.33277425789873*k - 1.666387128949364*n >= 0)  &&  (1.102638052421749 + 0.005598439223004496*i - 0.005768088896428875*k - 0.004495716345746035*n >= 0)  &&  (1.210817349231035 + 0.001612810321986061*i - 0.008870456770923334*k - 0.01221127815218017*n >= 0)  &&  (1.191666666666667 - 0.02222222222222222*i + 0.01388888888888889*k - 0.002777777777777777*n >= 0)  &&  (1.471118508698438 + 0.002455887471172872*i + 0.004935566177970526*k - 0.05204741704781435*n >= 0)  &&  (1.387965162311956 + 0.02454473475851148*i - 0.00870942201108472*k - 0.03008709422011085*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 2*i + 7*k - 5*n >= 0)  &&  (5 + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(3 + 2*i + 7*k - 5*n >= 0)  &&  (5 + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 