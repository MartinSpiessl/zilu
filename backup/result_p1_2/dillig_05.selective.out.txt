[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_05
[  8%] Building CXX object CMakeFiles/dillig_05.dir/test/dillig_05.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_05.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_05.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_05.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_05.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_05.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_05.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_05.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_05.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_05.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_05.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_05.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_05
[100%] Built target dillig_05
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt[0m
[34m[1mTest Counter Example: (0,0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r8,#s32] -->   [1+:178-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 - 0.0004234696278172493*i - 0.006022679151178657*j - 0.007528348938973321*x - 0.0009880957982402485*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0) 
[0m[31m[2][0m[#r16,#s64] -->   [1+:448-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0) 
[0m[31m[3][0m[#r24,#s96] -->   [1+:653-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0) 
[0m[31m[4][0m[#r32,#s128] -->   [1+:825-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 - 0.01560926485397784*i - 0.0256797583081571*j - 0.009566968781470292*x - 0.003524672708962739*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0) 
[0m[31m[5][0m[#r40,#s160] -->   [1+:1000-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 - 0.01560926485397784*i - 0.0256797583081571*j - 0.009566968781470292*x - 0.003524672708962739*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt[0m
[34m[1mTest Counter Example: (1,0,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,-1,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,-3,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,-6,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-6,-7,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r8,#s32] -->   [1+:1192-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 + 0.00823045267489712*j - 0.09053497942386832*x - 0.09053497942386832*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0)  &&  (1 - 0.01560926485397784*i - 0.0256797583081571*j - 0.009566968781470292*x - 0.003524672708962739*y >= 0) 
[0m[31m[2][0m[#r16,#s64] -->   [1+:1306-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 + 0.00823045267489712*j - 0.09053497942386832*x - 0.09053497942386832*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0)  &&  (1 - 0.01560926485397784*i - 0.0256797583081571*j - 0.009566968781470292*x - 0.003524672708962739*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt[0m
[34m[1mTest Counter Example: (1,0,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,-3,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,-6,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-6,-7,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r8,#s32] -->   [1+:1455-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 + 0.00823045267489712*j - 0.09053497942386832*x - 0.09053497942386832*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0)  &&  (1 - 0.01560926485397784*i - 0.0256797583081571*j - 0.009566968781470292*x - 0.003524672708962739*y >= 0) 
[0m[31m[2][0m[#r16,#s64] -->   [1+:1574-]|-->> [33m(1 + 0.0006055559760805389*i + 0.007821764691040295*j - 0.005550929780738274*x + 0.002926853884389272*y >= 0)  &&  (1 - 0.01054203637002548*i + 0.0004685349497789101*j + 0.0001171337374447275*x + 0.002401241617616914*y >= 0)  &&  (1 - 0.01062227506936187*i + 0.005390408244153785*j - 0.007451446690447879*x + 0.01093935790725327*y >= 0)  &&  (1 + 0.002656695857522385*i + 0.005018203286431172*j + 0.004624618714946374*x + 0.006690937715241562*y >= 0)  &&  (1 + 0.00823045267489712*j - 0.09053497942386832*x - 0.09053497942386832*y >= 0)  &&  (1 - 0.006361481851066484*i - 0.01359610826992641*j - 0.004490457777223401*x + 0.001995759012099289*y >= 0)  &&  (1 - 0.008044856167723062*i + 0.003656752803510483*j - 0.01023890784982935*x - 0.007801072647489029*y >= 0)  &&  (1 + 0.009214543436025534*i + 0.005106855398279212*j - 0.003663613655287261*x + 0.009880655009714127*y >= 0)  &&  (1 + 0.01794310722100656*i - 0.01663019693654267*j - 0.01663019693654267*x - 0.000437636761487965*y >= 0)  &&  (1 - 2.823502837620352e-05*i + 0.005054070079340429*j + 0.004687014710449784*x - 0.002992913007877573*y >= 0)  &&  (1 - 0.01560926485397784*i - 0.0256797583081571*j - 0.009566968781470292*x - 0.003524672708962739*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_05.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 