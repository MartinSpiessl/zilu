[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_03
[  8%] Building CXX object CMakeFiles/dillig_03.dir/test/dillig_03.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_03.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_03.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_03.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_03.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_03.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_03.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_03.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_03.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_03.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_03.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_03.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_03
[100%] Built target dillig_03
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [7+:33-]|-->> [33m(1.05638179800222 - 0.008731039585645578*k + 0.004735479097299297*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [7+:161-]|-->> [33m(1.05638179800222 - 0.008731039585645578*k + 0.004735479097299297*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [7+:206-]|-->> [33m(1.05638179800222 - 0.008731039585645578*k + 0.004735479097299297*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-4,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-6,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-7,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [7+:248-]|-->> [33m(1.05 + 0.05*k - 0.1*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [7+:282-]|-->> [33m(1.05 + 0.05*k - 0.1*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [7+:351-]|-->> [33m(1.05 + 0.05*k - 0.1*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m[31m[4][0m[#r16,#s64] -->   [7+:494-]|-->> [33m(1.05 + 0.05*k - 0.1*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-4,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-7,26) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [7+:623-]|-->> [33m(1.05 + 0.05*k - 0.1*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [7+:700-]|-->> [33m(1.05 + 0.05*k - 0.1*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (0.9456943366951125 + 0.02094647013188518*k + 0.03335919317300233*w >= 0)  &&  (0.9546742209631728 + 0.07082152974504248*k - 0.0254957507082153*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt[0m
[34m[1mTest Counter Example: (0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-7,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [7+:767-]|-->> [33m(0.6470588235294117 + 0.4705882352941176*k - 0.1176470588235294*w >= 0)  &&  (1.05 + 0.05*k - 0.1*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (1.023872679045093 - 0.01061007957559682*k + 0.05039787798408488*w >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [7+:821-]|-->> [33m(0.8947368421052632 + 0.1052631578947369*w >= 0)  &&  (0.6470588235294117 + 0.4705882352941176*k - 0.1176470588235294*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (1.05 + 0.05*k - 0.1*w >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [7+:896-]|-->> [33m(0.8947368421052632 + 0.1052631578947369*w >= 0)  &&  (0.6470588235294117 + 0.4705882352941176*k - 0.1176470588235294*w >= 0)  &&  (1.141123595505618 - 0.02292134831460674*k + 0.01932584269662922*w >= 0)  &&  (1.05 + 0.05*k - 0.1*w >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(8 + w >= 0)  &&  (5 + 4*k - w >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_03.inv >>> [0m(8 + w >= 0)  &&  (5 + 4*k - w >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
