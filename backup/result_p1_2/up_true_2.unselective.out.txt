[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2867-]|-->> [33m(0.9990753080040252 - 0.005765726563137425*j + 0.005548151975849221*k + 0.006690418559112296*n >= 0)  &&  (0.992473657802308 + 0.009867870881418297*j + 0.01521993644422144*k - 0.002341528683726376*n >= 0)  &&  (1 + 0.0144006776789496*j + 0.001482422702244812*k - 0.001482422702244812*n >= 0)  &&  (1.030656360539762 + 0.007336564915498492*j - 0.01572121053321105*k - 0.0149351500065505*n >= 0)  &&  (1.038819462908801 - 0.008508375432065939*j - 0.008508375432065939*k - 0.03031108747673491*n >= 0)  &&  (0.9953959989038093 - 0.004275143875034255*j - 0.007454097012880241*k + 0.01205809810907098*n >= 0)  &&  (1.0434546442151 - 0.02498642042368278*j - 0.03910917979359044*k - 0.004345464421510048*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:4751-]|-->> [33m(0.9990753080040252 - 0.005765726563137425*j + 0.005548151975849221*k + 0.006690418559112296*n >= 0)  &&  (0.992473657802308 + 0.009867870881418297*j + 0.01521993644422144*k - 0.002341528683726376*n >= 0)  &&  (1 + 0.0144006776789496*j + 0.001482422702244812*k - 0.001482422702244812*n >= 0)  &&  (1.030656360539762 + 0.007336564915498492*j - 0.01572121053321105*k - 0.0149351500065505*n >= 0)  &&  (1.038819462908801 - 0.008508375432065939*j - 0.008508375432065939*k - 0.03031108747673491*n >= 0)  &&  (0.9953959989038093 - 0.004275143875034255*j - 0.007454097012880241*k + 0.01205809810907098*n >= 0)  &&  (1.0434546442151 - 0.02498642042368278*j - 0.03910917979359044*k - 0.004345464421510048*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,1,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:6938-]|-->> [33m(0.9990753080040252 - 0.005765726563137425*j + 0.005548151975849221*k + 0.006690418559112296*n >= 0)  &&  (0.0910493827160494 + 0.5455246913580246*j + 0.5453317901234568*k + 0.3636188271604938*n >= 0)  &&  (3 - 2*j - 2*k >= 0)  &&  (1.030656360539762 + 0.007336564915498492*j - 0.01572121053321105*k - 0.0149351500065505*n >= 0)  &&  (1.038819462908801 - 0.008508375432065939*j - 0.008508375432065939*k - 0.03031108747673491*n >= 0)  &&  (0.992473657802308 + 0.009867870881418297*j + 0.01521993644422144*k - 0.002341528683726376*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:8547-]|-->> [33m(0.9990753080040252 - 0.005765726563137425*j + 0.005548151975849221*k + 0.006690418559112296*n >= 0)  &&  (0.0910493827160494 + 0.5455246913580246*j + 0.5453317901234568*k + 0.3636188271604938*n >= 0)  &&  (3 - 2*j - 2*k >= 0)  &&  (1.030656360539762 + 0.007336564915498492*j - 0.01572121053321105*k - 0.0149351500065505*n >= 0)  &&  (1.038819462908801 - 0.008508375432065939*j - 0.008508375432065939*k - 0.03031108747673491*n >= 0)  &&  (0.992473657802308 + 0.009867870881418297*j + 0.01521993644422144*k - 0.002341528683726376*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 - 2*j - 2*k >= 0)  &&  (1 + 6*j + 6*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(3 - 2*j - 2*k >= 0)  &&  (1 + 6*j + 6*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,3,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,4,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,5,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,6,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,7,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,8,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,9,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [54+:11001-]|-->> [33m(0.9990753080040252 - 0.005765726563137425*j + 0.005548151975849221*k + 0.006690418559112296*n >= 0)  &&  (0.09117657034323701 + 0.5455882851716185*j + 0.5452205009496677*k + 0.3636029287070953*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0)  &&  (1.308711156393275 + 0.009509254542367122*j - 0.01766004415011037*k - 0.01664119544914246*n >= 0)  &&  (1.425563354266716 - 0.006649427410417436*j - 0.01108237901736239*k - 0.03620243812338382*n >= 0)  &&  (0.9926813040585496 + 0.009647371922821025*j + 0.01530272787757818*k - 0.002328675981370592*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [54+:12612-]|-->> [33m(0.9990753080040252 - 0.005765726563137425*j + 0.005548151975849221*k + 0.006690418559112296*n >= 0)  &&  (1.000107551065522 + 0.333239643286364*j + 0.3332023597560694*k - 0.3333099108215909*n >= 0)  &&  (1.000018699691455 + 0.4444174337790086*j + 0.2221993670437766*k - 0.222218066735232*n >= 0)  &&  (1 + 0.3333333333333333*j >= 0)  &&  (1.425563354266716 - 0.006649427410417436*j - 0.01108237901736239*k - 0.03620243812338382*n >= 0)  &&  (1.616438356164384 + 0.1506849315068493*j - 0.06849315068493152*k >= 0)  &&  (0.09117657034323701 + 0.5455882851716185*j + 0.5452205009496677*k + 0.3636029287070953*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [54+:14439-]|-->> [33m(0.9990753080040252 - 0.005765726563137425*j + 0.005548151975849221*k + 0.006690418559112296*n >= 0)  &&  (1.000107551065522 + 0.333239643286364*j + 0.3332023597560694*k - 0.3333099108215909*n >= 0)  &&  (1.000018699691455 + 0.4444174337790086*j + 0.2221993670437766*k - 0.222218066735232*n >= 0)  &&  (1 + 0.3333333333333333*j >= 0)  &&  (1.425563354266716 - 0.006649427410417436*j - 0.01108237901736239*k - 0.03620243812338382*n >= 0)  &&  (1.616438356164384 + 0.1506849315068493*j - 0.06849315068493152*k >= 0)  &&  (0.09117657034323701 + 0.5455882851716185*j + 0.5452205009496677*k + 0.3636029287070953*n >= 0)  &&  (0.9999882458378675 - 1.999441669260533*j - 1.999519052167601*k + 1.999530806329734*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*j - 2*k + 2*n >= 0)  &&  (3 + j + k - n >= 0)  &&  (1 + 6*j + 6*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 - 2*j - 2*k + 2*n >= 0)  &&  (3 + j + k - n >= 0)  &&  (1 + 6*j + 6*k + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 