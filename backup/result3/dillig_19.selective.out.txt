[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_19
[  8%] Building CXX object CMakeFiles/dillig_19.dir/test/dillig_19.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_19.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_19.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_19.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_19.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_19.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_19.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_19.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_19.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_19.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_19.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_19.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_19
[100%] Built target dillig_19
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:262-]|-->> [33m(1.016945353476487 - 0.00744161025687004*x - 0.01102792845295199*m + 0.001524185233334828*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (1.005113394252166 + 0.005255432981392926*x - 0.007764783864400359*m - 0.002604043369158657*n >= 0)  &&  (0.9943426849060978 + 0.007604915372130767*x - 0.008903315557616509*m + 0.006955715279387897*n >= 0)  &&  (0.998690983708054 - 0.006403566184925085*x + 0.003785533601033061*m + 0.003927048875838036*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:772-]|-->> [33m(1.016945353476487 - 0.00744161025687004*x - 0.01102792845295199*m + 0.001524185233334828*n >= 0)  &&  (0.965672990063234 + 0.04516711833785005*x + 0.01987353206865402*m + 0.03432700993676603*n >= 0)  &&  (1.005113394252166 + 0.005255432981392926*x - 0.007764783864400359*m - 0.002604043369158657*n >= 0)  &&  (0.9943426849060978 + 0.007604915372130767*x - 0.008903315557616509*m + 0.006955715279387897*n >= 0)  &&  (0.998690983708054 - 0.006403566184925085*x + 0.003785533601033061*m + 0.003927048875838036*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:1279-]|-->> [33m(1.016945353476487 - 0.00744161025687004*x - 0.01102792845295199*m + 0.001524185233334828*n >= 0)  &&  (0.965672990063234 + 0.04516711833785005*x + 0.01987353206865402*m + 0.03432700993676603*n >= 0)  &&  (1.005113394252166 + 0.005255432981392926*x - 0.007764783864400359*m - 0.002604043369158657*n >= 0)  &&  (0.9943426849060978 + 0.007604915372130767*x - 0.008903315557616509*m + 0.006955715279387897*n >= 0)  &&  (0.998690983708054 - 0.006403566184925085*x + 0.003785533601033061*m + 0.003927048875838036*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:2095-]|-->> [33m(1.016945353476487 - 0.00744161025687004*x - 0.01102792845295199*m + 0.001524185233334828*n >= 0)  &&  (1.011571185479297 - 0.01474758933635848*x + 0.0001134429948950652*m + 0.003062960862166761*n >= 0)  &&  (1.005113394252166 + 0.005255432981392926*x - 0.007764783864400359*m - 0.002604043369158657*n >= 0)  &&  (0.9943426849060978 + 0.007604915372130767*x - 0.008903315557616509*m + 0.006955715279387897*n >= 0)  &&  (0.998690983708054 - 0.006403566184925085*x + 0.003785533601033061*m + 0.003927048875838036*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0)  &&  (0.965672990063234 + 0.04516711833785005*x + 0.01987353206865402*m + 0.03432700993676603*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:3091-]|-->> [33m(1.057285180572852 + 0.0024906600249066*x - 0.0485678704856787*m - 0.0112079701120797*n >= 0)  &&  (1.005099150141643 + 0.02436260623229462*x - 0.0226628895184136*m - 0.00509915014164306*n >= 0)  &&  (1.005113394252166 + 0.005255432981392926*x - 0.007764783864400359*m - 0.002604043369158657*n >= 0)  &&  (1.011571185479297 - 0.01474758933635848*x + 0.0001134429948950652*m + 0.003062960862166761*n >= 0)  &&  (0.998690983708054 - 0.006403566184925085*x + 0.003785533601033061*m + 0.003927048875838036*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0)  &&  (0.965672990063234 + 0.04516711833785005*x + 0.01987353206865402*m + 0.03432700993676603*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:4397-]|-->> [33m(1.057285180572852 + 0.0024906600249066*x - 0.0485678704856787*m - 0.0112079701120797*n >= 0)  &&  (1.005099150141643 + 0.02436260623229462*x - 0.0226628895184136*m - 0.00509915014164306*n >= 0)  &&  (1.005113394252166 + 0.005255432981392926*x - 0.007764783864400359*m - 0.002604043369158657*n >= 0)  &&  (1.011571185479297 - 0.01474758933635848*x + 0.0001134429948950652*m + 0.003062960862166761*n >= 0)  &&  (0.998690983708054 - 0.006403566184925085*x + 0.003785533601033061*m + 0.003927048875838036*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0)  &&  (0.965672990063234 + 0.04516711833785005*x + 0.01987353206865402*m + 0.03432700993676603*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(283 - 13*m - 3*n >= 0)  &&  (340 + 16*x + 7*m + 12*n >= 0)  &&  (69 - x >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.inv >>> [0m(283 - 13*m - 3*n >= 0)  &&  (340 + 16*x + 7*m + 12*n >= 0)  &&  (69 - x >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[34m[1mTest Counter Example: (0,3,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,3,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,6,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,95) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,7,68) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,4,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,4,78) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,7,67) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [633+:5029-]|-->> [33m(0.9999985239394018 - 0.02367771924905693*x - 0.00182090884666648*m + 0.02550010415632158*n >= 0)  &&  (1.000005260573746 + 0.03838588266321629*x - 0.05004277926939059*m + 0.01165163603242816*n >= 0)  &&  (0.9975595519454635 + 0.02562544865292054*x - 0.02300993879991569*m + 0.002440448054536509*n >= 0)  &&  (3.421263426178773 - 0.01838703804842527*x - 0.004187147278354269*m - 0.002912798106681231*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0)  &&  (0.965672990063234 + 0.04516711833785005*x + 0.01987353206865402*m + 0.03432700993676604*n >= 0)  &&  (1.63147605083089 + 0.01270772238514174*x - 0.01427174975562073*m - 0.005083088954056698*n >= 0)  &&  (4.4623447830995 - 0.004515400741815834*x - 0.02354458958232543*m - 0.008385744234800839*n >= 0)  &&  (1.000005992949271 - 0.01355802356513472*x + 0.004940303465224493*m + 0.008611727150639299*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [633+:5223-]|-->> [33m(0.9999985239394018 - 0.02367771924905693*x - 0.00182090884666648*m + 0.02550010415632158*n >= 0)  &&  (1.000005260573746 + 0.03838588266321629*x - 0.05004277926939059*m + 0.01165163603242816*n >= 0)  &&  (0.9975595519454635 + 0.02562544865292054*x - 0.02300993879991569*m + 0.002440448054536509*n >= 0)  &&  (3.421263426178773 - 0.01838703804842527*x - 0.004187147278354269*m - 0.002912798106681231*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0)  &&  (0.965672990063234 + 0.04516711833785005*x + 0.01987353206865402*m + 0.03432700993676604*n >= 0)  &&  (1.63147605083089 + 0.01270772238514174*x - 0.01427174975562073*m - 0.005083088954056698*n >= 0)  &&  (4.4623447830995 - 0.004515400741815834*x - 0.02354458958232543*m - 0.008385744234800839*n >= 0)  &&  (1.000005992949271 - 0.01355802356513472*x + 0.004940303465224493*m + 0.008611727150639299*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(507 - 12*x + 13*n >= 0)  &&  (601 + 23*x - 30*m + 7*n >= 0)  &&  (340 + 16*x + 7*m + 12*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.inv >>> [0m(507 - 12*x + 13*n >= 0)  &&  (601 + 23*x - 30*m + 7*n >= 0)  &&  (340 + 16*x + 7*m + 12*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[34m[1mTest Counter Example: (0,34,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,27,28) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,27,29) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,35,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,36,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,28,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,29,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,35,55) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [960+:5563-]|-->> [33m(1 + 0.001865375763064316*x - 0.06662490873965403*m + 0.06475953297658979*n >= 0)  &&  (0.9564304389990436 + 0.04327136837495881*x - 0.04357833137230928*m + 0.04356956100095642*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (3.421263426178773 - 0.01838703804842527*x - 0.004187147278354269*m - 0.002912798106681231*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0)  &&  (0.965672990063234 + 0.04516711833785004*x + 0.01987353206865402*m + 0.03432700993676603*n >= 0)  &&  (1.489131713575264 + 0.009001533449790463*x - 0.02027866628781901*m + 0.006128377958288922*n >= 0)  &&  (3.976092333058532 - 0.0007066305499941125*x - 0.01625250264986456*m - 0.01436815451654693*n >= 0)  &&  (1 - 0.01355697134672462*x + 0.004942645803493351*m + 0.008614325543231268*n >= 0)  &&  (0.9866943842142186 + 0.03691235347023224*x - 0.01330561578578139*m + 0.01330561578578139*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [960+:6480-]|-->> [33m(1 + 0.001865375763064316*x - 0.06662490873965403*m + 0.06475953297658979*n >= 0)  &&  (0.9564304389990436 + 0.04327136837495881*x - 0.04357833137230928*m + 0.04356956100095642*n >= 0)  &&  (0.9747138219716385 + 0.003758756193405092*x + 0.005467281735861951*m + 0.02528617802836152*n >= 0)  &&  (3.421263426178773 - 0.01838703804842527*x - 0.004187147278354269*m - 0.002912798106681231*n >= 0)  &&  (0.9975270076792919 + 0.01587921384875699*x + 0.001431732396199401*m + 0.002472992320708057*n >= 0)  &&  (0.990411304567247 + 0.02977542265960131*x + 0.005551349987383295*m + 0.009588695432752965*n >= 0)  &&  (0.965672990063234 + 0.04516711833785004*x + 0.01987353206865402*m + 0.03432700993676603*n >= 0)  &&  (1.489131713575264 + 0.009001533449790463*x - 0.02027866628781901*m + 0.006128377958288922*n >= 0)  &&  (3.976092333058532 - 0.0007066305499941125*x - 0.01625250264986456*m - 0.01436815451654693*n >= 0)  &&  (1 - 0.01355697134672462*x + 0.004942645803493351*m + 0.008614325543231268*n >= 0)  &&  (0.9866943842142186 + 0.03691235347023224*x - 0.01330561578578139*m + 0.01330561578578139*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(401 - 27*m + 26*n >= 0)  &&  (340 + 16*x + 7*m + 12*n >= 0)  &&  (77 + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.inv >>> [0m(401 - 27*m + 26*n >= 0)  &&  (340 + 16*x + 7*m + 12*n >= 0)  &&  (77 + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[34m[1mTest Counter Example: (0,428,429) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,429,430) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,430,431) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,431,432) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,432,433) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,433,434) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,434,435) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,442,443) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [4435+:7424-]|-->> [33m(0.9563318777292577 - 0.01048034934497817*x + 0.03842794759825328*m + 0.04366812227074236*n >= 0)  &&  (0.9999984682906984 + 0.0005467107933225801*x - 0.2411976772357285*m + 0.2406524981517073*n >= 0)  &&  (0.9642660606921112 + 0.03618512909756769*x - 0.236610163293193*m + 0.2361589735035139*n >= 0)  &&  (0.9999977861747632 - 0.02439597285387544*x + 0.01062752607971548*m + 0.01377066059939671*n >= 0)  &&  (0.9942126104173012 + 0.02375875723423698*x + 0.003350593968930856*m + 0.005787389582698752*n >= 0)  &&  (0.9777387229056825 + 0.04100761570005858*x + 0.01288810779144698*m + 0.02226127709431752*n >= 0)  &&  (1.000000132060932 + 7.924227477748569e-05*x - 0.03510432772642919*m + 0.03502495339072023*n >= 0)  &&  (0.9984109569164794 + 0.02646951627787966*x - 0.001587298869825039*m + 0.001589043083520522*n >= 0)  &&  (0.9936156206383487 + 0.05248495194644256*x - 0.006382230571267244*m + 0.006384379361651232*n >= 0)  &&  (0.9726933923055691 + 0.1031540745164979*x - 0.02730437293195032*m + 0.02730660769443094*n >= 0)  &&  (0.8994722985238126 + 0.1563746674840273*x - 0.1005254424318478*m + 0.1005277014761874*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [4435+:12720-]|-->> [33m(39.14995313964187 + 0.00187441424554817*x - 0.04686035613870432*m - 0.03936269915651158*n >= 0)  &&  (3.7944895692137 + 7.164411222537834e-06*x - 0.003173834171584683*m - 0.003141433104680069*n >= 0)  &&  (0.9563318777292577 - 0.01048034934497817*x + 0.03842794759825328*m + 0.04366812227074236*n >= 0)  &&  (0.9999977861747632 - 0.02439597285387544*x + 0.01062752607971548*m + 0.01377066059939671*n >= 0)  &&  (0.9942126104173012 + 0.02375875723423698*x + 0.003350593968930856*m + 0.005787389582698752*n >= 0)  &&  (0.9777387229056825 + 0.04100761570005858*x + 0.01288810779144698*m + 0.02226127709431752*n >= 0)  &&  (0.9999984682906984 + 0.0005467107933225801*x - 0.2411976772357285*m + 0.2406524981517073*n >= 0)  &&  (0.9984109569164794 + 0.02646951627787966*x - 0.001587298869825039*m + 0.001589043083520522*n >= 0)  &&  (0.9936156206383487 + 0.05248495194644256*x - 0.006382230571267244*m + 0.006384379361651232*n >= 0)  &&  (0.9726933923055691 + 0.1031540745164979*x - 0.02730437293195032*m + 0.02730660769443094*n >= 0)  &&  (0.8994722985238126 + 0.1563746674840273*x - 0.1005254424318478*m + 0.1005277014761874*n >= 0)  &&  (0.9642660606921112 + 0.03618512909756769*x - 0.236610163293193*m + 0.2361589735035139*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [4435+:14938-]|-->> [33m(39.14995313964187 + 0.00187441424554817*x - 0.04686035613870432*m - 0.03936269915651158*n >= 0)  &&  (3.7944895692137 + 7.164411222537834e-06*x - 0.003173834171584683*m - 0.003141433104680069*n >= 0)  &&  (0.9563318777292577 - 0.01048034934497817*x + 0.03842794759825328*m + 0.04366812227074236*n >= 0)  &&  (0.9999977861747632 - 0.02439597285387544*x + 0.01062752607971548*m + 0.01377066059939671*n >= 0)  &&  (0.9942126104173012 + 0.02375875723423698*x + 0.003350593968930856*m + 0.005787389582698752*n >= 0)  &&  (0.9777387229056825 + 0.04100761570005858*x + 0.01288810779144698*m + 0.02226127709431752*n >= 0)  &&  (0.9999984682906984 + 0.0005467107933225801*x - 0.2411976772357285*m + 0.2406524981517073*n >= 0)  &&  (0.9984109569164794 + 0.02646951627787966*x - 0.001587298869825039*m + 0.001589043083520522*n >= 0)  &&  (0.9936156206383487 + 0.05248495194644256*x - 0.006382230571267244*m + 0.006384379361651232*n >= 0)  &&  (0.9726933923055691 + 0.1031540745164979*x - 0.02730437293195032*m + 0.02730660769443094*n >= 0)  &&  (0.8994722985238126 + 0.1563746674840273*x - 0.1005254424318478*m + 0.1005277014761874*n >= 0)  &&  (0.9642660606921112 + 0.03618512909756769*x - 0.236610163293193*m + 0.2361589735035139*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(835 + 35*x + 11*m + 19*n >= 0)  &&  (25 - 6*m + 6*n >= 0)  &&  (547 - 6*x + 22*m + 25*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.inv >>> [0m(835 + 35*x + 11*m + 19*n >= 0)  &&  (25 - 6*m + 6*n >= 0)  &&  (547 - 6*x + 22*m + 25*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00006.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00007.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [4435+:15527-]|-->> [33m(0.9999977380760932 + 0.001485911451205801*x - 0.657433020663257*m + 0.6559493711359607*n >= 0)  &&  (0.6579539823189258 + 0.3425110856072847*x - 0.549064666214953*m + 0.5485995982887433*n >= 0)  &&  (0.7648155775449956 + 0.3527749516455874*x - 0.235182179739112*m + 0.2351844224550041*n >= 0)  &&  (0.9999977861747632 - 0.02439597285387544*x + 0.01062752607971548*m + 0.01377066059939671*n >= 0)  &&  (0.9942126104173012 + 0.02375875723423698*x + 0.003350593968930856*m + 0.005787389582698752*n >= 0)  &&  (0.9777387229056825 + 0.04100761570005858*x + 0.01288810779144698*m + 0.02226127709431752*n >= 0)  &&  ( -0.3330107578261352 + 0.6669892421738648*x - 0.6660215156522704*m + 1.333010757826135*n >= 0)  &&  (0.9984109569164794 + 0.02646951627787966*x - 0.001587298869825039*m + 0.001589043083520522*n >= 0)  &&  (0.9936156206383487 + 0.05248495194644256*x - 0.006382230571267244*m + 0.006384379361651232*n >= 0)  &&  (0.9726933923055691 + 0.1031540745164979*x - 0.02730437293195032*m + 0.02730660769443094*n >= 0)  &&  (39.14995313964187 + 0.00187441424554817*x - 0.04686035613870432*m - 0.03936269915651158*n >= 0)  &&  (3.7944895692137 + 7.164411222537834e-06*x - 0.003173834171584683*m - 0.003141433104680069*n >= 0)  &&  (0.9563318777292577 - 0.01048034934497817*x + 0.03842794759825328*m + 0.04366812227074236*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [4435+:16296-]|-->> [33m(0.9999977380760932 + 0.001485911451205801*x - 0.657433020663257*m + 0.6559493711359607*n >= 0)  &&  (0.6579539823189258 + 0.3425110856072847*x - 0.549064666214953*m + 0.5485995982887433*n >= 0)  &&  (0.7648155775449956 + 0.3527749516455874*x - 0.235182179739112*m + 0.2351844224550041*n >= 0)  &&  (0.9999977861747632 - 0.02439597285387544*x + 0.01062752607971548*m + 0.01377066059939671*n >= 0)  &&  (0.9942126104173012 + 0.02375875723423698*x + 0.003350593968930856*m + 0.005787389582698752*n >= 0)  &&  (0.9777387229056825 + 0.04100761570005858*x + 0.01288810779144698*m + 0.02226127709431752*n >= 0)  &&  ( -0.3330107578261352 + 0.6669892421738648*x - 0.6660215156522704*m + 1.333010757826135*n >= 0)  &&  (0.9984109569164794 + 0.02646951627787966*x - 0.001587298869825039*m + 0.001589043083520522*n >= 0)  &&  (0.9936156206383487 + 0.05248495194644256*x - 0.006382230571267244*m + 0.006384379361651232*n >= 0)  &&  (0.9726933923055691 + 0.1031540745164979*x - 0.02730437293195032*m + 0.02730660769443094*n >= 0)  &&  (39.14995313964187 + 0.00187441424554817*x - 0.04686035613870432*m - 0.03936269915651158*n >= 0)  &&  (3.7944895692137 + 7.164411222537834e-06*x - 0.003173834171584683*m - 0.003141433104680069*n >= 0)  &&  (0.9563318777292577 - 0.01048034934497817*x + 0.03842794759825328*m + 0.04366812227074236*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(20 - 13*m + 13*n >= 0)  &&  ( -1 + 2*x - 2*m + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.inv >>> [0m(20 - 13*m + 13*n >= 0)  &&  ( -1 + 2*x - 2*m + 4*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt[0m
[34m[1mTest Counter Example: (2,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (7,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[34m[1mTest Counter Example: (8,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [4435+:16985-]|-->> [33m(0.9999983217739601 + 0.004512990608871448*x - 1.999256531910255*m + 1.994745219527424*n >= 0)  &&  (1 - 0.9999999999999999*x - 1.110223024625157e-16*m + 0.9999999999999997*n >= 0)  &&  (0.6579539823189258 + 0.3425110856072847*x - 0.549064666214953*m + 0.5485995982887433*n >= 0)  &&  (0.9999977861747632 - 0.02439597285387544*x + 0.01062752607971548*m + 0.01377066059939671*n >= 0)  &&  (0.9942126104173012 + 0.02375875723423698*x + 0.003350593968930856*m + 0.005787389582698752*n >= 0)  &&  (0.9777387229056825 + 0.04100761570005858*x + 0.01288810779144698*m + 0.02226127709431752*n >= 0)  &&  (0.7648155775449956 + 0.3527749516455874*x - 0.235182179739112*m + 0.2351844224550041*n >= 0)  &&  (0.9984109569164794 + 0.02646951627787966*x - 0.001587298869825039*m + 0.001589043083520522*n >= 0)  &&  (0.9936156206383487 + 0.05248495194644256*x - 0.006382230571267244*m + 0.006384379361651232*n >= 0)  &&  (0.9726933923055691 + 0.1031540745164979*x - 0.02730437293195032*m + 0.02730660769443094*n >= 0)  &&  ( -0.3330107578261352 + 0.6669892421738648*x - 0.6660215156522704*m + 1.333010757826135*n >= 0)  &&  (39.14995313964187 + 0.00187441424554817*x - 0.04686035613870432*m - 0.03936269915651158*n >= 0)  &&  (3.7944895692137 + 7.164411222537834e-06*x - 0.003173834171584683*m - 0.003141433104680069*n >= 0)  &&  (0.9563318777292577 - 0.01048034934497817*x + 0.03842794759825328*m + 0.04366812227074236*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [4435+:17636-]|-->> [33m(0.9999983217739601 + 0.004512990608871448*x - 1.999256531910255*m + 1.994745219527424*n >= 0)  &&  (1 - 0.9999999999999999*x - 1.110223024625157e-16*m + 0.9999999999999997*n >= 0)  &&  (0.6579539823189258 + 0.3425110856072847*x - 0.549064666214953*m + 0.5485995982887433*n >= 0)  &&  (0.9999977861747632 - 0.02439597285387544*x + 0.01062752607971548*m + 0.01377066059939671*n >= 0)  &&  (0.9942126104173012 + 0.02375875723423698*x + 0.003350593968930856*m + 0.005787389582698752*n >= 0)  &&  (0.9777387229056825 + 0.04100761570005858*x + 0.01288810779144698*m + 0.02226127709431752*n >= 0)  &&  (0.7648155775449956 + 0.3527749516455874*x - 0.235182179739112*m + 0.2351844224550041*n >= 0)  &&  (0.9984109569164794 + 0.02646951627787966*x - 0.001587298869825039*m + 0.001589043083520522*n >= 0)  &&  (0.9936156206383487 + 0.05248495194644256*x - 0.006382230571267244*m + 0.006384379361651232*n >= 0)  &&  (0.9726933923055691 + 0.1031540745164979*x - 0.02730437293195032*m + 0.02730660769443094*n >= 0)  &&  ( -0.3330107578261352 + 0.6669892421738648*x - 0.6660215156522704*m + 1.333010757826135*n >= 0)  &&  (39.14995313964187 + 0.00187441424554817*x - 0.04686035613870432*m - 0.03936269915651158*n >= 0)  &&  (3.7944895692137 + 7.164411222537834e-06*x - 0.003173834171584683*m - 0.003141433104680069*n >= 0)  &&  (0.9563318777292577 - 0.01048034934497817*x + 0.03842794759825328*m + 0.04366812227074236*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*m + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_19.inv >>> [0m(1 - 2*m + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*m + 2*n >= 0) [0m

=====================time=========================
