[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear--> polynomial--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 21
[  8%] Building CXX object CMakeFiles/21.dir/test/21.cpp.o
[ 16%] Building CXX object CMakeFiles/21.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/21.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/21.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/21.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/21.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/21.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/21.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/21.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/21.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/21.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/21.dir/src/instrumentation.cpp.o
Linking CXX executable 21
[100%] Built target 21
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [2+:4-]|-->> [33m(0.9968553459119497 + 0.003144654088050314*n + 0.0110062893081761*k >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [2+:8-]|-->> [33m(0.993992757042509 + 0.006007242957490972*n + 0.02230771307015107*k >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [2+:10-]|-->> [33m(0.993992757042509 + 0.006007242957490972*n + 0.02230771307015107*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(45 + k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/21.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/21.inv >>> [0m(45 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[34m[1mTest Counter Example: (1,-46) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (2,-47) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-48) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-49) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-50) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-51) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-52) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-53) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [19+:15-]|-->> [33m(11.5333333333334 + 0.06666666666666715*n + 0.2000000000000015*k >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [19+:17-]|-->> [33m(11.5333333333334 + 0.06666666666666715*n + 0.2000000000000015*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(58 + k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/21.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/21.inv >>> [0m(58 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt[0m
[34m[1mTest Counter Example: (1,-59) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (2,-60) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-61) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-62) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-63) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-64) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-65) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[34m[1mTest Counter Example: (1,-66) @/home/lijiaying/Research/GitHub/ZILU/tmp/21.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [36+:18-]|-->> [33m(0.3333333771952312 + 0.6666666228004903*n >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [43+:23-]|-->> [33m( -0.9999983845287375 + 1.999567581602975*n + 1.077007490413173e-07*k >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [43+:31-]|-->> [33m( -0.9999983809696573 + 1.999566614338857*n + 1.079416405980194e-07*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -1 + 2*n >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/21.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/21.inv >>> [0m( -1 + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -1 + 2*n >= 0) [0m

=====================time=========================
