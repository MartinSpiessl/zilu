[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 23
[  8%] Building CXX object CMakeFiles/23.dir/test/23.cpp.o
[ 16%] Building CXX object CMakeFiles/23.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/23.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/23.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/23.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/23.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/23.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/23.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/23.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/23.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/23.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/23.dir/src/instrumentation.cpp.o
Linking CXX executable 23
[100%] Built target 23
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:919-]|-->> [33m(1 - 0.002736245480308805*n - 0.00185673800449526*sum + 0.01358350434867585*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 + 0.007811652381469024*n + 0.006835195833785396*sum + 0.0008679613757187805*i >= 0)  &&  (1 + 0.01209040324242633*n + 0.003709555540289895*sum + 0.0107164937830597*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:1738-]|-->> [33m(1 - 0.002736245480308805*n - 0.00185673800449526*sum + 0.01358350434867585*i >= 0)  &&  (1 + 0.007055503292568203*n - 0.01222953904045155*sum + 0.01646284101599247*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 + 0.007811652381469024*n + 0.006835195833785396*sum + 0.0008679613757187805*i >= 0)  &&  (1 + 0.01209040324242633*n + 0.003709555540289895*sum + 0.0107164937830597*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:2448-]|-->> [33m(1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 + 0.007811652381469024*n + 0.006835195833785396*sum + 0.0008679613757187805*i >= 0)  &&  (1 + 0.01209040324242633*n + 0.003709555540289895*sum + 0.0107164937830597*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0)  &&  (1 + 0.007055503292568203*n - 0.01222953904045155*sum + 0.01646284101599247*i >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [1+:3244-]|-->> [33m(1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.01209040324242633*n + 0.003709555540289895*sum + 0.0107164937830597*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0)  &&  (1 + 0.007055503292568203*n - 0.01222953904045155*sum + 0.01646284101599247*i >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [1+:5032-]|-->> [33m(1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.01209040324242633*n + 0.003709555540289895*sum + 0.0107164937830597*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0)  &&  (1 + 0.007055503292568203*n - 0.01222953904045155*sum + 0.01646284101599247*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(307 + 6*n - 5*i >= 0)  &&  (47 + 3*i >= 0)  &&  (306 + 5*sum - 4*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(307 + 6*n - 5*i >= 0)  &&  (47 + 3*i >= 0)  &&  (306 + 5*sum - 4*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (1,-61,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-62,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-14,-72,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-13,-72,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-14,-73,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-73,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-73,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-72,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:6534-]|-->> [33m(1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.01209040324242633*n + 0.003709555540289895*sum + 0.0107164937830597*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0)  &&  (1 + 0.007055503292568203*n - 0.01222953904045155*sum + 0.01646284101599247*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:7395-]|-->> [33m(1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.01209040324242633*n + 0.003709555540289895*sum + 0.0107164937830597*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0)  &&  (1 + 0.007055503292568203*n - 0.01222953904045155*sum + 0.01646284101599247*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(307 + 6*n - 5*i >= 0)  &&  (47 + 3*i >= 0)  &&  (306 + 5*sum - 4*i >= 0)  &&  (437 + 9*sum + 5*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(307 + 6*n - 5*i >= 0)  &&  (47 + 3*i >= 0)  &&  (306 + 5*sum - 4*i >= 0)  &&  (437 + 9*sum + 5*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00005.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-10,-42,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-11,-41,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-43,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,-42,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-12,-41,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-13,-40,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-14,-40,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-10,-41,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:7937-]|-->> [33m(1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:8460-]|-->> [33m(1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.006319590731266928*n + 0.02076436954559133*sum + 0.01143544989467349*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(483 + 22*n + 9*sum >= 0)  &&  (306 + 5*sum - 4*i >= 0)  &&  (47 + 3*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(483 + 22*n + 9*sum >= 0)  &&  (306 + 5*sum - 4*i >= 0)  &&  (47 + 3*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (11,-66,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-27,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,-31,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-34,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,-67,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-10,-29,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-11,-26,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,-68,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:9825-]|-->> [33m(1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:11839-]|-->> [33m(1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 - 0.00276166804750069*n + 0.005633802816901408*sum - 0.005854736260701463*i >= 0)  &&  (1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0)  &&  (1 + 0.00199159105996902*n + 0.01637530427085639*sum - 0.01305598583757469*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(450 + 7*n + 27*sum + 11*i >= 0)  &&  (47 + 3*i >= 0)  &&  (307 + 6*n - 5*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(450 + 7*n + 27*sum + 11*i >= 0)  &&  (47 + 3*i >= 0)  &&  (307 + 6*n - 5*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-16,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (39,-21,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (48,-23,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (6,-17,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (35,-24,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (40,-25,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (47,-26,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (56,-27,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:13373-]|-->> [33m(1 - 0.08823529411764705*n + 0.1176470588235294*sum - 0.08823529411764705*i >= 0)  &&  (1 + 0.1245136186770428*sum + 0.007782101167315175*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:14768-]|-->> [33m(1 - 0.08823529411764705*n + 0.1176470588235294*sum - 0.08823529411764705*i >= 0)  &&  (1 + 0.1245136186770428*sum + 0.007782101167315175*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257766*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 - 0.008188331627430911*n + 0.06345957011258956*i >= 0)  &&  (1 - 0.003875968992248062*n - 0.0310077519379845*sum + 0.0310077519379845*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(34 - 3*n + 4*sum - 3*i >= 0)  &&  (47 + 3*i >= 0)  &&  (483 + 22*n + 9*sum >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(34 - 3*n + 4*sum - 3*i >= 0)  &&  (47 + 3*i >= 0)  &&  (483 + 22*n + 9*sum >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (12,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (13,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (14,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (15,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (16,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (17,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (18,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (19,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:16141-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:16748-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-19,-11,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-8,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,-19,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-19,-19,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-19,-18,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-19,-12,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-17,-19,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,-19,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:17980-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:18342-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0)  &&  (8 + sum >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0)  &&  (8 + sum >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-19,-6,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,-7,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-19,-8,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-19,-5,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-17,-6,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,-6,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,-6,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-19,-4,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:19829-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:21048-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0)  &&  (450 + 7*n + 27*sum + 11*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0)  &&  (450 + 7*n + 27*sum + 11*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 9 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-7,-11,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-12,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (39,-19,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (41,-19,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (40,-13,-18) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (20,-14,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (16,-15,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (42,-16,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:21913-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:23480-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.01557285873192436*n + 0.06006674082313682*sum + 0.02447163515016685*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0)  &&  (450 + 7*n + 27*sum + 11*i >= 0)  &&  (8 + sum >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(61 + 3*i >= 0)  &&  (95 + 16*sum - 11*i >= 0)  &&  (450 + 7*n + 27*sum + 11*i >= 0)  &&  (8 + sum >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 10 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-15,-6,-16) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-10,-7,-17) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-8,-18) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-17,-4,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-16,-5,-18) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-11,-6,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-18,0,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,-6,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:24373-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:26144-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(61 + 3*i >= 0)  &&  (258 + 15*n + 6*sum + 16*i >= 0)  &&  (8 + sum >= 0)  &&  (95 + 16*sum - 11*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(61 + 3*i >= 0)  &&  (258 + 15*n + 6*sum + 16*i >= 0)  &&  (8 + sum >= 0)  &&  (95 + 16*sum - 11*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 11 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (8,-8,-18) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (7,-7,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (8,-8,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-8,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-14,32,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-11,29,-16) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,28,-17) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,25,-18) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:27161-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:28483-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(8 + sum >= 0)  &&  (385 + 19*n - 5*sum + 26*i >= 0)  &&  (95 + 16*sum - 11*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(8 + sum >= 0)  &&  (385 + 19*n - 5*sum + 26*i >= 0)  &&  (95 + 16*sum - 11*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 12 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-7,-16) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-8,-17) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,0,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,-5,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (7,-6,-21) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (8,-7,-22) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (32,-1,-38) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (31,-8,-39) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:29400-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 4.96807188451881e-05*n + 0.105229165823948*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:30495-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 4.96807188451881e-05*n + 0.105229165823948*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(8 + sum >= 0)  &&  (19 + 2*i >= 0)  &&  (95 + 16*sum - 11*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(8 + sum >= 0)  &&  (19 + 2*i >= 0)  &&  (95 + 16*sum - 11*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 13 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-2,-8,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-7,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-8,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-8,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-7,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-8,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-8,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-6,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:31600-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.08108108108108107*n + 0.1891891891891892*sum + 0.1081081081081081*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 4.96807188451881e-05*n + 0.105229165823948*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:32439-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 0.08108108108108107*n + 0.1891891891891892*sum + 0.1081081081081081*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 4.96807188451881e-05*n + 0.105229165823948*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(95 + 16*sum - 11*i >= 0)  &&  (37 + 3*n + 7*sum + 4*i >= 0)  &&  (19 + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(95 + 16*sum - 11*i >= 0)  &&  (37 + 3*n + 7*sum + 4*i >= 0)  &&  (19 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 14 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (28,-12,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (4,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (17,-9,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (21,-10,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (24,-11,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (14,-6,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (12,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (29,-12,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [133+:33839-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 7.091901623540453e-06*n + 0.1951115728268924*sum + 0.2438894660336155*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.08108108108108107*n + 0.1891891891891892*sum + 0.1081081081081081*i >= 0)  &&  (1 + 4.96807188451881e-05*n + 0.105229165823948*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [133+:33941-]|-->> [33m(1.01731605719932 - 0.0009113714315431374*n - 0.001566706305885187*sum + 0.01411532544823232*i >= 0)  &&  (1 + 7.091901623540453e-06*n + 0.1951115728268924*sum + 0.2438894660336155*i >= 0)  &&  (1.04743110142225 - 0.002174663969251684*n + 0.005964665679912187*sum - 0.006112486006467699*i >= 0)  &&  (1 + 0.08108108108108107*n + 0.1891891891891892*sum + 0.1081081081081081*i >= 0)  &&  (1 + 4.96807188451881e-05*n + 0.105229165823948*i >= 0)  &&  (1 + 0.04949734191647007*n - 0.01298684507879956*sum + 0.06740604981986968*i >= 0)  &&  (1 + 0.05802707930367505*n + 0.02321083172147002*sum + 0.06189555125725339*i >= 0)  &&  (1 + 0.003361626584519192*n - 0.005862231644569657*sum + 0.04944177222224224*i >= 0)  &&  (1 + 0.01951536835257765*n + 0.002276792974467393*sum - 0.01626280696048138*i >= 0)  &&  (1 + 0.04596273291925466*n + 0.01863354037267081*sum + 0.004968944099378882*i >= 0)  &&  (1 + 0.009722375198639166*n + 0.1701173104676953*sum - 0.1161454530133206*i >= 0)  &&  (1 + 2.680926837882682e-05*n + 0.1244819065463535*sum + 0.007780119159147091*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(95 + 16*sum - 11*i >= 0)  &&  (41 + 8*sum + 10*i >= 0)  &&  (19 + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(95 + 16*sum - 11*i >= 0)  &&  (41 + 8*sum + 10*i >= 0)  &&  (19 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 15 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-7,6,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,5,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,4,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,7,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,8,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,5,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,7,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
