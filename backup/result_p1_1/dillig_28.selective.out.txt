[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_28
[  8%] Building CXX object CMakeFiles/dillig_28.dir/test/dillig_28.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_28.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_28.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_28.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_28.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_28.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_28.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_28.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_28.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_28.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_28.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_28.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_28
[100%] Built target dillig_28
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1534-]|-->> [33m(1.009268795056643 + 0.005664263645726056*x - 0.01493305870236869*y - 0.001544799176107106*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0)  &&  (1.008336529855517 - 0.009615138729062779*x + 0.001278608873545582*y - 0.002864083876742105*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1.026590373611578 - 0.007404914170313026*x - 0.01918545944126557*y + 0.01581958936385056*n >= 0)  &&  (1.002123142250531 + 0.01132342533616419*x - 0.01344656758669498*y + 0.0332625619249823*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:3421-]|-->> [33m(1.009268795056643 + 0.005664263645726056*x - 0.01493305870236869*y - 0.001544799176107106*n >= 0)  &&  (1 - 0.0001218769043266301*x - 0.0006093845216331504*y - 0.01560024375380865*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1.026590373611578 - 0.007404914170313026*x - 0.01918545944126557*y + 0.01581958936385056*n >= 0)  &&  (1.002123142250531 + 0.01132342533616419*x - 0.01344656758669498*y + 0.0332625619249823*n >= 0)  &&  (1.008336529855517 - 0.009615138729062779*x + 0.001278608873545582*y - 0.002864083876742105*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:5250-]|-->> [33m(1.009268795056643 + 0.005664263645726056*x - 0.01493305870236869*y - 0.001544799176107106*n >= 0)  &&  (1 + 0.05379442843419788*x - 0.001921229586935639*y - 0.03073967339097022*n >= 0)  &&  (1.020385262764167 - 0.01926313820834112*x - 0.001122124555825696*y + 0.001309145315129979*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1.026590373611578 - 0.007404914170313026*x - 0.01918545944126557*y + 0.01581958936385056*n >= 0)  &&  (1.002123142250531 + 0.01132342533616419*x - 0.01344656758669498*y + 0.0332625619249823*n >= 0)  &&  (1 - 0.0001218769043266301*x - 0.0006093845216331504*y - 0.01560024375380865*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:7705-]|-->> [33m(1.009268795056643 + 0.005664263645726056*x - 0.01493305870236869*y - 0.001544799176107106*n >= 0)  &&  (1 + 0.03545051698670606*x - 0.0206794682422452*y + 0.06499261447562778*n >= 0)  &&  (1.054148471615721 - 0.01048034934497817*x - 0.04366812227074236*y + 0.03842794759825328*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1 + 0.05379442843419788*x - 0.001921229586935639*y - 0.03073967339097022*n >= 0)  &&  (1.020385262764167 - 0.01926313820834112*x - 0.001122124555825696*y + 0.001309145315129979*n >= 0)  &&  (1 - 0.0001218769043266301*x - 0.0006093845216331504*y - 0.01560024375380865*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:10655-]|-->> [33m(1.009268795056643 + 0.005664263645726056*x - 0.01493305870236869*y - 0.001544799176107106*n >= 0)  &&  (1.023361453601557 - 0.03309539260220636*x + 0.009733939000648929*y + 0.01038286826735886*n >= 0)  &&  (1 + 0.03545051698670606*x - 0.0206794682422452*y + 0.06499261447562778*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1.054148471615721 - 0.01048034934497817*x - 0.04366812227074236*y + 0.03842794759825328*n >= 0)  &&  (1 + 0.05379442843419788*x - 0.001921229586935639*y - 0.03073967339097022*n >= 0)  &&  (1.020385262764167 - 0.01926313820834112*x - 0.001122124555825696*y + 0.001309145315129979*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0)  &&  (1 - 0.0001218769043266301*x - 0.0006093845216331504*y - 0.01560024375380865*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:13372-]|-->> [33m(1.009268795056643 + 0.005664263645726056*x - 0.01493305870236869*y - 0.001544799176107106*n >= 0)  &&  (1.023361453601557 - 0.03309539260220636*x + 0.009733939000648929*y + 0.01038286826735886*n >= 0)  &&  (1 + 0.03545051698670606*x - 0.0206794682422452*y + 0.06499261447562778*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1.054148471615721 - 0.01048034934497817*x - 0.04366812227074236*y + 0.03842794759825328*n >= 0)  &&  (1 + 0.05379442843419788*x - 0.001921229586935639*y - 0.03073967339097022*n >= 0)  &&  (1.020385262764167 - 0.01926313820834112*x - 0.001122124555825696*y + 0.001309145315129979*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0)  &&  (1 - 0.0001218769043266301*x - 0.0006093845216331504*y - 0.01560024375380865*n >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [2+:14531-]|-->> [33m(1.055718475073314 - 0.02248289345063539*x - 0.0332355816226784*y - 0.01857282502443793*n >= 0)  &&  (1.014354066985646 - 0.01000434971726838*x - 0.004349717268377555*y - 0.0274032187907786*n >= 0)  &&  (1.023361453601557 - 0.03309539260220636*x + 0.009733939000648929*y + 0.01038286826735886*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1 + 0.03545051698670606*x - 0.0206794682422452*y + 0.06499261447562778*n >= 0)  &&  (1.054148471615721 - 0.01048034934497817*x - 0.04366812227074236*y + 0.03842794759825328*n >= 0)  &&  (1 + 0.05379442843419788*x - 0.001921229586935639*y - 0.03073967339097022*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0) 
[0m[31m[8][0m[#r48,#s192] -->   [2+:16637-]|-->> [33m(1.055718475073314 - 0.02248289345063539*x - 0.0332355816226784*y - 0.01857282502443793*n >= 0)  &&  (1.014354066985646 - 0.01000434971726838*x - 0.004349717268377555*y - 0.0274032187907786*n >= 0)  &&  (1.023361453601557 - 0.03309539260220636*x + 0.009733939000648929*y + 0.01038286826735886*n >= 0)  &&  (1 + 0.007936507936507938*x + 0.0126984126984127*y - 0.006349206349206349*n >= 0)  &&  (1 + 0.03545051698670606*x - 0.0206794682422452*y + 0.06499261447562778*n >= 0)  &&  (1.054148471615721 - 0.01048034934497817*x - 0.04366812227074236*y + 0.03842794759825328*n >= 0)  &&  (1 + 0.05379442843419788*x - 0.001921229586935639*y - 0.03073967339097022*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 8 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (1,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-7,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:18273-]|-->> [33m(1 + 0.1403508771929824*x + 0.1754385964912281*y + 0.1403508771929824*n >= 0)  &&  (1 + 2*x - 2*y >= 0)  &&  (2 - y - n >= 0)  &&  (1.014354066985646 - 0.01000434971726838*x - 0.004349717268377555*y - 0.0274032187907786*n >= 0)  &&  (1.023361453601557 - 0.03309539260220636*x + 0.009733939000648929*y + 0.01038286826735886*n >= 0)  &&  (1 + 0.03545051698670606*x - 0.0206794682422452*y + 0.06499261447562778*n >= 0)  &&  (1.054148471615721 - 0.01048034934497817*x - 0.04366812227074236*y + 0.03842794759825328*n >= 0)  &&  (1 - 0.009307604994324632*x + 0.01816118047673099*y + 0.006129398410896708*n >= 0)  &&  (1 + 0.05379442843419788*x - 0.001921229586935639*y - 0.03073967339097022*n >= 0) 
