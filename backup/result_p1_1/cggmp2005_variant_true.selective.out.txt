[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target cggmp2005_variant_true
[  8%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/test/cggmp2005_variant_true.cpp.o
[ 16%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/instrumentation.cpp.o
Linking CXX executable cggmp2005_variant_true
[100%] Built target cggmp2005_variant_true
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	2	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1564-]|-->> [33m(1.010048253302731 - 0.005204850631630311*low + 0.004662678690835487*mid - 0.004843402671100428*high >= 0)  &&  (1.010701884214721 - 0.01053110946661354*low - 0.001707747481072465*mid - 0.0001707747481072465*high >= 0)  &&  (0.987258991994588 + 0.001465779682038561*low + 0.009809448641334987*mid + 0.01127522832337355*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (1.022064176513412 + 0.003304026432211457*low - 0.002688021504172033*mid - 0.009688077504620035*high >= 0)  &&  (1.050632911392405 - 0.00269323996768112*low - 0.03124158362510099*mid - 0.009695663883652032*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.000186046511628 - 0.01302325581395349*low - 0.00613953488372093*mid + 0.01283720930232558*high >= 0)  &&  (1.023576768257619 + 0.01475944029135519*low - 0.01130918152194748*mid - 0.006133793367835921*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:3260-]|-->> [33m(1.010048253302731 - 0.005204850631630311*low + 0.004662678690835487*mid - 0.004843402671100428*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (0.987258991994588 + 0.001465779682038561*low + 0.009809448641334987*mid + 0.01127522832337355*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (1.022064176513412 + 0.003304026432211457*low - 0.002688021504172033*mid - 0.009688077504620035*high >= 0)  &&  (1.050632911392405 - 0.00269323996768112*low - 0.03124158362510099*mid - 0.009695663883652032*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.000186046511628 - 0.01302325581395349*low - 0.00613953488372093*mid + 0.01283720930232558*high >= 0)  &&  (1.023576768257619 + 0.01475944029135519*low - 0.01130918152194748*mid - 0.006133793367835921*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:5135-]|-->> [33m(1.010048253302731 - 0.005204850631630311*low + 0.004662678690835487*mid - 0.004843402671100428*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (0.987258991994588 + 0.001465779682038561*low + 0.009809448641334987*mid + 0.01127522832337355*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (1.022064176513412 + 0.003304026432211457*low - 0.002688021504172033*mid - 0.009688077504620035*high >= 0)  &&  (1.050632911392405 - 0.00269323996768112*low - 0.03124158362510099*mid - 0.009695663883652032*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.000186046511628 - 0.01302325581395349*low - 0.00613953488372093*mid + 0.01283720930232558*high >= 0)  &&  (1.023576768257619 + 0.01475944029135519*low - 0.01130918152194748*mid - 0.006133793367835921*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-7,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:6710-]|-->> [33m(1.010048253302731 - 0.005204850631630311*low + 0.004662678690835487*mid - 0.004843402671100428*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (1.022064176513412 + 0.003304026432211457*low - 0.002688021504172033*mid - 0.009688077504620035*high >= 0)  &&  (1.050632911392405 - 0.00269323996768112*low - 0.03124158362510099*mid - 0.009695663883652032*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0)  &&  (1.023576768257619 + 0.01475944029135519*low - 0.01130918152194748*mid - 0.006133793367835921*high >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:9316-]|-->> [33m(1.045270364677938 - 0.008383400866284755*low - 0.001117786782171301*mid - 0.02207628894788319*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (1.050632911392405 - 0.00269323996768112*low - 0.03124158362510099*mid - 0.009695663883652032*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:10725-]|-->> [33m(1.069052898321191 + 0.01520430788723472*low - 0.00570161545771302*mid - 0.031675641431739*high >= 0)  &&  (1.045270364677938 - 0.008383400866284755*low - 0.001117786782171301*mid - 0.02207628894788319*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (1.050632911392405 - 0.00269323996768112*low - 0.03124158362510099*mid - 0.009695663883652032*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:12180-]|-->> [33m(1.114285714285714 - 0.02142857142857143*low - 0.04285714285714286*mid - 0.03571428571428571*high >= 0)  &&  (1.069052898321191 + 0.01520430788723472*low - 0.00570161545771302*mid - 0.031675641431739*high >= 0)  &&  (1.045270364677938 - 0.008383400866284755*low - 0.001117786782171301*mid - 0.02207628894788319*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:13467-]|-->> [33m(1.133738601823708 - 0.0486322188449848*low - 0.0972644376899696*mid - 0.0182370820668693*high >= 0)  &&  (1.114285714285714 - 0.02142857142857143*low - 0.04285714285714286*mid - 0.03571428571428571*high >= 0)  &&  (1.069052898321191 + 0.01520430788723472*low - 0.00570161545771302*mid - 0.031675641431739*high >= 0)  &&  (1.045270364677938 - 0.008383400866284755*low - 0.001117786782171301*mid - 0.02207628894788319*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:15022-]|-->> [33m(1.133738601823708 - 0.0486322188449848*low - 0.0972644376899696*mid - 0.0182370820668693*high >= 0)  &&  (1.114285714285714 - 0.02142857142857143*low - 0.04285714285714286*mid - 0.03571428571428571*high >= 0)  &&  (1.069052898321191 + 0.01520430788723472*low - 0.00570161545771302*mid - 0.031675641431739*high >= 0)  &&  (1.045270364677938 - 0.008383400866284755*low - 0.001117786782171301*mid - 0.02207628894788319*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (1.022449975597853 - 0.03025866276232309*low - 0.03123474865788189*mid + 0.007808687164470474*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*high >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m( -1 + 2*high >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (13,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (13,2,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (14,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,3,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:16151-]|-->> [33m( -2 + low - mid + 2*high >= 0)  &&  (1.16551724137931 - 0.1655172413793103*low - 0.01379310344827586*mid >= 0)  &&  (1.133738601823708 - 0.0486322188449848*low - 0.0972644376899696*mid - 0.0182370820668693*high >= 0)  &&  (1.114285714285714 - 0.02142857142857143*low - 0.04285714285714286*mid - 0.03571428571428571*high >= 0)  &&  (1.069052898321191 + 0.01520430788723472*low - 0.00570161545771302*mid - 0.031675641431739*high >= 0)  &&  (1.045270364677938 - 0.008383400866284755*low - 0.001117786782171301*mid - 0.02207628894788319*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:16985-]|-->> [33m(1.145185185185185 - 0.02074074074074074*low + 0.002962962962962962*mid - 0.07407407407407407*high >= 0)  &&  ( -2 + low - mid + 2*high >= 0)  &&  (1.16551724137931 - 0.1655172413793103*low - 0.01379310344827586*mid >= 0)  &&  (1.133738601823708 - 0.0486322188449848*low - 0.0972644376899696*mid - 0.0182370820668693*high >= 0)  &&  (1.069052898321191 + 0.01520430788723472*low - 0.00570161545771302*mid - 0.031675641431739*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:18025-]|-->> [33m(1.145185185185185 - 0.02074074074074074*low + 0.002962962962962962*mid - 0.07407407407407407*high >= 0)  &&  ( -2 + low - mid + 2*high >= 0)  &&  (1.16551724137931 - 0.1655172413793103*low - 0.01379310344827586*mid >= 0)  &&  (1.133738601823708 - 0.0486322188449848*low - 0.0972644376899696*mid - 0.0182370820668693*high >= 0)  &&  (1.069052898321191 + 0.01520430788723472*low - 0.00570161545771302*mid - 0.031675641431739*high >= 0)  &&  ( -1 + 2*high >= 0)  &&  (1.002356217200385 + 0.02056335011245582*mid - 0.002356217200385563*high >= 0)  &&  (0.9385474860335195 + 0.04655493482309125*low - 0.01303538175046555*mid + 0.037243947858473*high >= 0)  &&  (1.019607843137255 + 0.03267973856209151*low - 0.0196078431372549*mid >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*high >= 0)  &&  ( -2 + low - mid + 2*high >= 0)  &&  (7 - low >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m( -1 + 2*high >= 0)  &&  ( -2 + low - mid + 2*high >= 0)  &&  (7 - low >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 