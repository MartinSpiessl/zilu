[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_15
[  8%] Building CXX object CMakeFiles/dillig_15.dir/test/dillig_15.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_15.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_15.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_15.dir/src/state.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_15.dir/src/polynomial.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_15.dir/src/iif.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_15.dir/src/config.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_15.dir/src/classifier.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_15.dir/src/poly_learner.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_15.dir/src/conjunctive_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_15.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_15
[100%] Built target dillig_15
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1569-]|-->> [33m(0.9756592292089249 + 0.0486815415821501*k + 0.0385395537525355*j - 0.01419878296146045*n >= 0)  &&  (1.013116986270283 - 0.005355724497900827*k + 0.001361624872347668*j - 0.007761261772381708*n >= 0)  &&  (1.013116986270283 + 0.001361624872347668*k - 0.005355724497900828*j - 0.007761261772381709*n >= 0)  &&  (1.004363867179752 + 0.00563335581386123*k - 0.006545800769627484*j + 0.002181933589875828*n >= 0)  &&  (1.028940164254986 + 0.01251466562377786*k - 0.00430191630817364*j - 0.02463824794681267*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:2847-]|-->> [33m(1.025067750677507 - 0.01355013550135501*k + 0.004742547425474255*j - 0.01151761517615176*n >= 0)  &&  (0.9756592292089249 + 0.0486815415821501*k + 0.0385395537525355*j - 0.01419878296146045*n >= 0)  &&  (1.013116986270283 + 0.001361624872347668*k - 0.005355724497900828*j - 0.007761261772381709*n >= 0)  &&  (1.004363867179752 + 0.00563335581386123*k - 0.006545800769627484*j + 0.002181933589875828*n >= 0)  &&  (1.028940164254986 + 0.01251466562377786*k - 0.00430191630817364*j - 0.02463824794681267*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:4460-]|-->> [33m(1.025067750677507 - 0.01355013550135501*k + 0.004742547425474255*j - 0.01151761517615176*n >= 0)  &&  (0.9756592292089249 + 0.0486815415821501*k + 0.0385395537525355*j - 0.01419878296146045*n >= 0)  &&  (1.013116986270283 + 0.001361624872347668*k - 0.005355724497900828*j - 0.007761261772381709*n >= 0)  &&  (1.004363867179752 + 0.00563335581386123*k - 0.006545800769627484*j + 0.002181933589875828*n >= 0)  &&  (1.028940164254986 + 0.01251466562377786*k - 0.00430191630817364*j - 0.02463824794681267*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:7384-]|-->> [33m(1 + 2*k >= 0)  &&  (1.025067750677507 - 0.01355013550135501*k + 0.004742547425474255*j - 0.01151761517615176*n >= 0)  &&  (1.013116986270283 + 0.001361624872347668*k - 0.005355724497900828*j - 0.007761261772381709*n >= 0)  &&  (1.004363867179752 + 0.00563335581386123*k - 0.006545800769627484*j + 0.002181933589875828*n >= 0)  &&  (1.028940164254986 + 0.01251466562377786*k - 0.00430191630817364*j - 0.02463824794681267*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0)  &&  (0.9756592292089249 + 0.0486815415821501*k + 0.0385395537525355*j - 0.01419878296146045*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:8361-]|-->> [33m(1 + 2*k >= 0)  &&  (1.025067750677507 - 0.01355013550135501*k + 0.004742547425474255*j - 0.01151761517615176*n >= 0)  &&  (1.013116986270283 + 0.001361624872347668*k - 0.005355724497900828*j - 0.007761261772381709*n >= 0)  &&  (1.004363867179752 + 0.00563335581386123*k - 0.006545800769627484*j + 0.002181933589875828*n >= 0)  &&  (1.028940164254986 + 0.01251466562377786*k - 0.00430191630817364*j - 0.02463824794681267*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0)  &&  (0.9756592292089249 + 0.0486815415821501*k + 0.0385395537525355*j - 0.01419878296146045*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-5,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:10527-]|-->> [33m(2.2 - 0.4*j - 0.8000000000000002*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0)  &&  (1 + 2*k >= 0)  &&  (1.025067750677507 - 0.01355013550135501*k + 0.004742547425474255*j - 0.01151761517615176*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:12714-]|-->> [33m(2.2 - 0.4*j - 0.8000000000000002*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0)  &&  (1 + 2*k >= 0)  &&  (1.025067750677507 - 0.01355013550135501*k + 0.004742547425474255*j - 0.01151761517615176*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(6 - j - 2*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(6 - j - 2*n >= 0)  &&  ( -1 + 2*k + 2*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (4,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (5,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (7,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (6,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [51+:14608-]|-->> [33m(0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (1.095451080050826 + 0.001321473951715375*k - 0.005438373570520965*j - 0.008386277001270648*n >= 0)  &&  (1.0243092131918 + 0.005753180455392594*k - 0.006482456851146586*j + 0.002430921319179969*n >= 0)  &&  (1.183818473527389 + 0.01512720605088242*k - 0.002292000916800367*j - 0.02612881045152418*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0)  &&  (1.305376344086022 - 0.01433691756272401*k - 0.002867383512544803*j - 0.02724014336917563*n >= 0)  &&  (1.187287470572849 - 0.01395064957712093*k + 0.006103409189990409*j - 0.01081175342226872*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [51+:16201-]|-->> [33m(0.9998327102092759 + 1.999457908023816*k + 1.999467963674819*j - 1.999290618233092*n >= 0)  &&  ( -1 + 2*k + 2*j + 4.440892098500626e-16*n >= 0)  &&  (1.095451080050826 + 0.001321473951715375*k - 0.005438373570520965*j - 0.008386277001270648*n >= 0)  &&  (1.0243092131918 + 0.005753180455392594*k - 0.006482456851146586*j + 0.002430921319179969*n >= 0)  &&  (1.183818473527389 + 0.01512720605088242*k - 0.002292000916800367*j - 0.02612881045152418*n >= 0)  &&  (0.9943207428107815 + 9.014693951140358e-05*k - 0.006220138826286847*j + 0.01189939601550527*n >= 0)  &&  (1.305376344086022 - 0.01433691756272401*k - 0.002867383512544803*j - 0.02724014336917563*n >= 0)  &&  (1.187287470572849 - 0.01395064957712093*k + 0.006103409189990409*j - 0.01081175342226872*n >= 0)  &&  (0.9999810993017646 + 1.999943297905294*k + 9.450349117701151e-06*j + 9.450349117701151e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k + 2*j - 2*n >= 0)  &&  (1 + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 + 2*k + 2*j - 2*n >= 0)  &&  (1 + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
