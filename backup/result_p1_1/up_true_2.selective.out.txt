[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1732-]|-->> [33m(1.008223286412228 - 0.00875538141537271*j + 0.004450249117206018*k + 0.0005320950031441978*n >= 0)  &&  (0.9979841419164091 + 0.004614075169108095*j - 0.004748465708014156*k + 0.006764323791605071*n >= 0)  &&  (1.021485714285714 - 0.0002285714285714286*j + 0.002285714285714286*k - 0.02125714285714286*n >= 0)  &&  (0.9891549574510192 + 0.009974272709281615*j + 0.005541262616267564*k + 0.00530377993271324*n >= 0)  &&  (1.013587911444301 - 0.01038616219593144*j - 0.006169224161493108*k - 0.003201749248369841*n >= 0)  &&  (0.9982019144322809 + 0.004548098788936485*j + 0.01353852662753186*k - 0.00275001322121741*n >= 0)  &&  (0.9976086770860022 - 0.003245366811854129*j - 0.01161499701084636*k + 0.01400631992484414*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:3640-]|-->> [33m(1.5 - 0.5*k >= 0)  &&  (1.2 + 0.09999999999999999*j - 0.2*k >= 0)  &&  (1.08 + 0.06*j - 0.08*k >= 0)  &&  (0.9891549574510192 + 0.009974272709281615*j + 0.005541262616267564*k + 0.00530377993271324*n >= 0)  &&  (1.044943820224719 + 0.02808988764044944*k - 0.0449438202247191*n >= 0)  &&  (0.9982019144322809 + 0.004548098788936485*j + 0.01353852662753186*k - 0.00275001322121741*n >= 0)  &&  (0.9976086770860022 - 0.003245366811854129*j - 0.01161499701084636*k + 0.01400631992484414*n >= 0)  &&  (1.016720854621459 - 0.02384270010837591*j - 0.0003096454559529339*k + 0.007121845486917479*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:5063-]|-->> [33m(1.030674846625767 - 0.02249488752556238*j + 0.05930470347648262*k - 0.0081799591002045*n >= 0)  &&  (0.985793562708102 + 0.02619311875693674*j + 0.01420643729189789*k >= 0)  &&  (1.5 - 0.5*k >= 0)  &&  (1.2 + 0.09999999999999999*j - 0.2*k >= 0)  &&  (1.08 + 0.06*j - 0.08*k >= 0)  &&  (1.044943820224719 + 0.02808988764044944*k - 0.0449438202247191*n >= 0)  &&  (0.9976086770860022 - 0.003245366811854129*j - 0.01161499701084636*k + 0.01400631992484414*n >= 0)  &&  (1.016720854621459 - 0.02384270010837591*j - 0.0003096454559529339*k + 0.007121845486917479*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [2+:7076-]|-->> [33m(0.9446366782006921 + 0.05536332179930796*j + 0.1038062283737024*k >= 0)  &&  (1.01980198019802 + 0.0891089108910891*j + 0.0198019801980198*k - 0.0396039603960396*n >= 0)  &&  (1.030674846625767 - 0.02249488752556238*j + 0.05930470347648262*k - 0.0081799591002045*n >= 0)  &&  (1.5 - 0.5*k >= 0)  &&  (1.2 + 0.09999999999999999*j - 0.2*k >= 0)  &&  (1.044943820224719 + 0.02808988764044944*k - 0.0449438202247191*n >= 0)  &&  (0.9976086770860022 - 0.003245366811854129*j - 0.01161499701084636*k + 0.01400631992484414*n >= 0)  &&  (1.016720854621459 - 0.02384270010837591*j - 0.0003096454559529339*k + 0.007121845486917479*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [2+:8922-]|-->> [33m(1.076635514018692 - 0.05794392523364486*j - 0.005607476635514019*k - 0.01869158878504673*n >= 0)  &&  (0.9446366782006921 + 0.05536332179930796*j + 0.1038062283737024*k >= 0)  &&  (1.01980198019802 + 0.0891089108910891*j + 0.0198019801980198*k - 0.0396039603960396*n >= 0)  &&  (1.030674846625767 - 0.02249488752556238*j + 0.05930470347648262*k - 0.0081799591002045*n >= 0)  &&  (1.5 - 0.5*k >= 0)  &&  (1.2 + 0.09999999999999999*j - 0.2*k >= 0)  &&  (0.9976086770860022 - 0.003245366811854129*j - 0.01161499701084636*k + 0.01400631992484414*n >= 0)  &&  (1.016720854621459 - 0.02384270010837591*j - 0.0003096454559529339*k + 0.007121845486917479*n >= 0)  &&  (1.044943820224719 + 0.02808988764044944*k - 0.0449438202247191*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [2+:11158-]|-->> [33m(1.076635514018692 - 0.05794392523364486*j - 0.005607476635514019*k - 0.01869158878504673*n >= 0)  &&  (0.9446366782006921 + 0.05536332179930796*j + 0.1038062283737024*k >= 0)  &&  (1.01980198019802 + 0.0891089108910891*j + 0.0198019801980198*k - 0.0396039603960396*n >= 0)  &&  (1.030674846625767 - 0.02249488752556238*j + 0.05930470347648262*k - 0.0081799591002045*n >= 0)  &&  (1.5 - 0.5*k >= 0)  &&  (1.2 + 0.09999999999999999*j - 0.2*k >= 0)  &&  (0.9976086770860022 - 0.003245366811854129*j - 0.01161499701084636*k + 0.01400631992484414*n >= 0)  &&  (1.016720854621459 - 0.02384270010837591*j - 0.0003096454559529339*k + 0.007121845486917479*n >= 0)  &&  (1.044943820224719 + 0.02808988764044944*k - 0.0449438202247191*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 - k >= 0)  &&  (9 + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(3 - k >= 0)  &&  (9 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,4,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,5,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,6,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,7,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,8,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,9,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,10,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [70+:13060-]|-->> [33m(0.9999760963151917 + 0.09102915784748966*j + 0.03481721807820904*k - 0.0347933143934007*n >= 0)  &&  (1 - 0.00808617120085512*j + 0.06699970423565672*k + 0.008086171200855124*n >= 0)  &&  (1.23026874115983 + 0.002545968882602546*j + 0.002828854314002829*k - 0.02347949080622348*n >= 0)  &&  (0.9999613436488339 - 0.3635766220027434*j - 0.545345604828532*k + 0.5453842611796982*n >= 0)  &&  (0.9999483776884851 + 0.1817853312563087*j - 0.2726521857287056*k + 0.2727038080402204*n >= 0)  &&  (1.000062702868283 + 0.139513010627343*j - 0.1162921936235943*k + 0.1162294907553108*n >= 0)  &&  (1.194557823129252 + 0.03945578231292517*j - 0.03129251700680272*k + 0.01360544217687075*n >= 0)  &&  (1.134074206847105 - 0.02401864133357232*j - 0.000358487184083169*k + 0.01183007707474458*n >= 0)  &&  (1.268292682926829 + 0.02032520325203252*j + 0.04065040650406505*k - 0.04471544715447155*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [70+:13963-]|-->> [33m(0.9999760963151917 + 0.09102915784748966*j + 0.03481721807820904*k - 0.0347933143934007*n >= 0)  &&  (1 - 0.00808617120085512*j + 0.06699970423565672*k + 0.008086171200855124*n >= 0)  &&  (1.23026874115983 + 0.002545968882602546*j + 0.002828854314002829*k - 0.02347949080622348*n >= 0)  &&  (0.9999613436488339 - 0.3635766220027434*j - 0.545345604828532*k + 0.5453842611796982*n >= 0)  &&  (0.9999483776884851 + 0.1817853312563087*j - 0.2726521857287056*k + 0.2727038080402204*n >= 0)  &&  (1.000062702868283 + 0.139513010627343*j - 0.1162921936235943*k + 0.1162294907553108*n >= 0)  &&  (1.194557823129252 + 0.03945578231292517*j - 0.03129251700680272*k + 0.01360544217687075*n >= 0)  &&  (1.134074206847105 - 0.02401864133357232*j - 0.000358487184083169*k + 0.01183007707474458*n >= 0)  &&  (1.268292682926829 + 0.02032520325203252*j + 0.04065040650406505*k - 0.04471544715447155*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(6 - 2*j - 3*k + 3*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(6 - 2*j - 3*k + 3*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (-1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-5,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [70+:16236-]|-->> [33m(0.09115961199294542 + 0.5455798059964727*j + 0.5452353395061728*k + 0.3636050485008818*n >= 0)  &&  (0.9999760963151917 + 0.09102915784748966*j + 0.03481721807820904*k - 0.0347933143934007*n >= 0)  &&  (1.23026874115983 + 0.002545968882602546*j + 0.002828854314002829*k - 0.02347949080622348*n >= 0)  &&  (1 - 0.00808617120085512*j + 0.06699970423565672*k + 0.008086171200855124*n >= 0)  &&  (0.9999613436488339 - 0.3635766220027434*j - 0.545345604828532*k + 0.5453842611796982*n >= 0)  &&  (0.9999483776884851 + 0.1817853312563087*j - 0.2726521857287056*k + 0.2727038080402204*n >= 0)  &&  (1.000062702868283 + 0.139513010627343*j - 0.1162921936235943*k + 0.1162294907553108*n >= 0)  &&  (1.134074206847105 - 0.02401864133357232*j - 0.000358487184083169*k + 0.01183007707474458*n >= 0)  &&  (1.268292682926829 + 0.02032520325203252*j + 0.04065040650406505*k - 0.04471544715447155*n >= 0)  &&  (1.194557823129252 + 0.03945578231292517*j - 0.03129251700680272*k + 0.01360544217687075*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [70+:17185-]|-->> [33m(1.606837606837607 - 0.005439005439005439*j - 0.02641802641802642*k - 0.02874902874902875*n >= 0)  &&  (0.09115961199294542 + 0.5455798059964727*j + 0.5452353395061728*k + 0.3636050485008818*n >= 0)  &&  (0.9999760963151917 + 0.09102915784748966*j + 0.03481721807820904*k - 0.0347933143934007*n >= 0)  &&  (1 - 0.00808617120085512*j + 0.06699970423565672*k + 0.008086171200855124*n >= 0)  &&  (0.9999613436488339 - 0.3635766220027434*j - 0.545345604828532*k + 0.5453842611796982*n >= 0)  &&  (0.9999483776884851 + 0.1817853312563087*j - 0.2726521857287056*k + 0.2727038080402204*n >= 0)  &&  (1.000062702868283 + 0.139513010627343*j - 0.1162921936235943*k + 0.1162294907553108*n >= 0)  &&  (1.134074206847105 - 0.02401864133357232*j - 0.000358487184083169*k + 0.01183007707474458*n >= 0)  &&  (1.268292682926829 + 0.02032520325203252*j + 0.04065040650406505*k - 0.04471544715447155*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [70+:19478-]|-->> [33m(1.429779122050712 + 0.05327840356000557*j + 0.05327840356000557*k - 0.09234923283734298*n >= 0)  &&  (1.606837606837607 - 0.005439005439005439*j - 0.02641802641802642*k - 0.02874902874902875*n >= 0)  &&  (0.09115961199294542 + 0.5455798059964727*j + 0.5452353395061728*k + 0.3636050485008818*n >= 0)  &&  (0.9999760963151917 + 0.09102915784748966*j + 0.03481721807820904*k - 0.0347933143934007*n >= 0)  &&  (1 - 0.00808617120085512*j + 0.06699970423565672*k + 0.008086171200855124*n >= 0)  &&  (0.9999613436488339 - 0.3635766220027434*j - 0.545345604828532*k + 0.5453842611796982*n >= 0)  &&  (0.9999483776884851 + 0.1817853312563087*j - 0.2726521857287056*k + 0.2727038080402204*n >= 0)  &&  (1.134074206847105 - 0.02401864133357232*j - 0.000358487184083169*k + 0.01183007707474458*n >= 0)  &&  (1.268292682926829 + 0.02032520325203252*j + 0.04065040650406505*k - 0.04471544715447155*n >= 0)  &&  (1.000062702868283 + 0.139513010627343*j - 0.1162921936235943*k + 0.1162294907553108*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [70+:21451-]|-->> [33m(1.429779122050712 + 0.05327840356000557*j + 0.05327840356000557*k - 0.09234923283734298*n >= 0)  &&  (1.606837606837607 - 0.005439005439005439*j - 0.02641802641802642*k - 0.02874902874902875*n >= 0)  &&  (0.09115961199294542 + 0.5455798059964727*j + 0.5452353395061728*k + 0.3636050485008818*n >= 0)  &&  (0.9999760963151917 + 0.09102915784748966*j + 0.03481721807820904*k - 0.0347933143934007*n >= 0)  &&  (1 - 0.00808617120085512*j + 0.06699970423565672*k + 0.008086171200855124*n >= 0)  &&  (0.9999613436488339 - 0.3635766220027434*j - 0.545345604828532*k + 0.5453842611796982*n >= 0)  &&  (0.9999483776884851 + 0.1817853312563087*j - 0.2726521857287056*k + 0.2727038080402204*n >= 0)  &&  (1.134074206847105 - 0.02401864133357232*j - 0.000358487184083169*k + 0.01183007707474458*n >= 0)  &&  (1.268292682926829 + 0.02032520325203252*j + 0.04065040650406505*k - 0.04471544715447155*n >= 0)  &&  (1.000062702868283 + 0.139513010627343*j - 0.1162921936235943*k + 0.1162294907553108*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [70+:22508-]|-->> [33m(1.429779122050712 + 0.05327840356000557*j + 0.05327840356000557*k - 0.09234923283734298*n >= 0)  &&  (1.606837606837607 - 0.005439005439005439*j - 0.02641802641802642*k - 0.02874902874902875*n >= 0)  &&  (0.09115961199294542 + 0.5455798059964727*j + 0.5452353395061728*k + 0.3636050485008818*n >= 0)  &&  (0.9999760963151917 + 0.09102915784748966*j + 0.03481721807820904*k - 0.0347933143934007*n >= 0)  &&  (1 - 0.00808617120085512*j + 0.06699970423565672*k + 0.008086171200855124*n >= 0)  &&  (0.9999613436488339 - 0.3635766220027434*j - 0.545345604828532*k + 0.5453842611796982*n >= 0)  &&  (0.9999483776884851 + 0.1817853312563087*j - 0.2726521857287056*k + 0.2727038080402204*n >= 0)  &&  (1.134074206847105 - 0.02401864133357232*j - 0.000358487184083169*k + 0.01183007707474458*n >= 0)  &&  (1.268292682926829 + 0.02032520325203252*j + 0.04065040650406505*k - 0.04471544715447155*n >= 0)  &&  (1.000062702868283 + 0.139513010627343*j - 0.1162921936235943*k + 0.1162294907553108*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(6 - 2*j - 3*k + 3*n >= 0)  &&  (1 + 6*j + 6*k + 4*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
