[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target bound
[  8%] Building CXX object CMakeFiles/bound.dir/test/bound.cpp.o
[ 16%] Building CXX object CMakeFiles/bound.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/bound.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/bound.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/bound.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/bound.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/bound.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/bound.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/bound.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/bound.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/bound.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/bound.dir/src/instrumentation.cpp.o
Linking CXX executable bound
[100%] Built target bound
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 8	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r2,#s8] -->  [151+:4-]|-->> [33m(1 + 0.25*i >= 0) [0m
[31m[2][0m[#r4,#s16] -->  [151+:8-]|-->> [33m(1 + 0.6666666666666666*i >= 0) [0m
[31m[3][0m[#r6,#s24] -->  [151+:9-]|-->> [33m(1 + i >= 0) [0m
[31m[4][0m[#r8,#s32] -->  [151+:12-]|-->> [33m(1 + 2*i >= 0) [0m
[31m[5][0m[#r10,#s40] -->  [151+:13-]|-->> [33m(1 + 2*i >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(1 + 2*i >= 0) [33m  }[0m
		#r_samples=10		#s_samples=40	 TOTAL:[1m[32m50[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/bound.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/bound.inv >>> [0m(1 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*i >= 0) [0m

=====================time=========================
