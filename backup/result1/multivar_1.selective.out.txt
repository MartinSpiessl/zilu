[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target multivar_1
[  8%] Building CXX object CMakeFiles/multivar_1.dir/test/multivar_1.cpp.o
[ 16%] Building CXX object CMakeFiles/multivar_1.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/multivar_1.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/multivar_1.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/multivar_1.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/multivar_1.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/multivar_1.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/multivar_1.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/multivar_1.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/multivar_1.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/multivar_1.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/multivar_1.dir/src/instrumentation.cpp.o
Linking CXX executable multivar_1
[100%] Built target multivar_1
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [7+:189-]|-->> [33m(1.448398576512455 - 0.05693950177935942*x - 0.01779359430604982*y >= 0)  &&  (1.020853351869646 - 0.007891562570277842*x + 0.004416003925336823*y >= 0)  &&  (1 + 0.004137931034482759*x + 0.009655172413793102*y >= 0)  &&  (1.008290155440414 + 0.01001727115716753*x - 0.01139896373056995*y >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [7+:342-]|-->> [33m(1 - 0.01210745365115399*x + 0.01891789632992812*y >= 0)  &&  (1.49060773480663 - 0.01767955801104973*x - 0.06408839779005526*y >= 0)  &&  (1 + 0.004137931034482759*x + 0.009655172413793102*y >= 0)  &&  (1 + 0.03509041254548924*x - 0.03508401608328562*y >= 0)  &&  (1.448398576512455 - 0.05693950177935942*x - 0.01779359430604982*y >= 0) 
[0m[31m[3][0m[#r12,#s48] -->   [7+:502-]|-->> [33m(1.958466453674121 - 0.08306709265175719*x - 0.07667731629392971*y >= 0)  &&  (1 - 0.01210745365115399*x + 0.01891789632992812*y >= 0)  &&  (1 + 0.004137931034482759*x + 0.009655172413793102*y >= 0)  &&  (1.49060773480663 - 0.01767955801104973*x - 0.06408839779005526*y >= 0)  &&  (1.448398576512455 - 0.05693950177935942*x - 0.01779359430604982*y >= 0)  &&  (1 + 0.03509041254548924*x - 0.03508401608328562*y >= 0) 
[0m[31m[4][0m[#r16,#s64] -->   [7+:668-]|-->> [33m(1 + 0.004244996967859309*x + 0.03456640388114009*y >= 0)  &&  (1 + 0.08571428571428572*x - 0.02857142857142857*y >= 0)  &&  (1.958466453674121 - 0.08306709265175719*x - 0.07667731629392971*y >= 0)  &&  (1 - 0.01210745365115399*x + 0.01891789632992812*y >= 0)  &&  (1.448398576512455 - 0.05693950177935942*x - 0.01779359430604982*y >= 0)  &&  (1.49060773480663 - 0.01767955801104973*x - 0.06408839779005526*y >= 0) 
[0m[31m[5][0m[#r20,#s80] -->   [7+:795-]|-->> [33m(1 - 0.003466204506065858*x + 0.0831889081455806*y >= 0)  &&  (1 + 0.08571428571428572*x - 0.02857142857142857*y >= 0)  &&  (1.958466453674121 - 0.08306709265175719*x - 0.07667731629392971*y >= 0)  &&  (1.49060773480663 - 0.01767955801104973*x - 0.06408839779005526*y >= 0)  &&  (1.448398576512455 - 0.05693950177935942*x - 0.01779359430604982*y >= 0) 
[0m[31m[6][0m[#r24,#s96] -->   [7+:958-]|-->> [33m(1 - 0.3332053333333334*x + 0.3332906666666667*y >= 0)  &&  (1 + 0.04*x + 0.28*y >= 0)  &&  (1 + 0.06666666666666667*x + 0.1333333333333333*y >= 0)  &&  (1 + 0.08571428571428572*x - 0.02857142857142857*y >= 0)  &&  (1.958466453674121 - 0.08306709265175719*x - 0.07667731629392971*y >= 0)  &&  (1.49060773480663 - 0.01767955801104973*x - 0.06408839779005526*y >= 0) 
[0m[31m[7][0m[#r28,#s112] -->   [7+:1089-]|-->> [33m(1 + 0.176*x - 0.032*y >= 0)  &&  (5 - 0.6666666666666667*x >= 0)  &&  (1 - 0.3332053333333334*x + 0.3332906666666667*y >= 0)  &&  (1 + 0.04*x + 0.28*y >= 0)  &&  (1.958466453674121 - 0.08306709265175719*x - 0.07667731629392971*y >= 0)  &&  (1.49060773480663 - 0.01767955801104973*x - 0.06408839779005526*y >= 0) 
[0m[31m[8][0m[#r32,#s128] -->   [7+:1235-]|-->> [33m(1 + 0.176*x - 0.032*y >= 0)  &&  (5 - 0.6666666666666667*x >= 0)  &&  (1 - 0.3332053333333334*x + 0.3332906666666667*y >= 0)  &&  (1 + 0.04*x + 0.28*y >= 0)  &&  (1.958466453674121 - 0.08306709265175719*x - 0.07667731629392971*y >= 0)  &&  (1.49060773480663 - 0.01767955801104973*x - 0.06408839779005526*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 8 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(6 + x >= 0)  &&  (7 - x >= 0)  &&  (3 - x + y >= 0) [33m }[0m
		#r_samples=32		#s_samples=128	 TOTAL:[1m[32m160[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.inv >>> [0m(6 + x >= 0)  &&  (7 - x >= 0)  &&  (3 - x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [40+:1235-]|-->> [33m(1.652897499359904 - 0.01263121959545959*x - 0.01348468037893659*y >= 0)  &&  (1.000636383296296 - 1.999185429381328*x + 1.999159974049476*y >= 0)  &&  (1.209702449227448 + 0.004115781661156467*x + 0.01086296471223264*y >= 0)  &&  (0.9999999999999982 + 0.09528271036921546*x - 0.0952827103692154*y >= 0)  &&  (1.800000000000001 - 0.1040000000000001*x + 0.07200000000000006*y >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [40+:1343-]|-->> [33m(1.652897499359904 - 0.01263121959545959*x - 0.01348468037893659*y >= 0)  &&  (1.000636383296296 - 1.999185429381328*x + 1.999159974049476*y >= 0)  &&  (1.209702449227448 + 0.004115781661156467*x + 0.01086296471223264*y >= 0)  &&  (0.9999999999999982 + 0.09528271036921546*x - 0.0952827103692154*y >= 0)  &&  (1.800000000000001 - 0.1040000000000001*x + 0.07200000000000006*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x + 2*y >= 0) [33m }[0m
		#r_samples=8		#s_samples=32	 TOTAL:[1m[32m40[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.inv >>> [0m(1 - 2*x + 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [40+:1562-]|-->> [33m(0.9993591632729277 + 1.99935916327312*x - 1.999333529804041*y >= 0)  &&  (1.000636383296296 - 1.999185429381328*x + 1.999159974049476*y >= 0)  &&  (1.209702449227448 + 0.004115781661156467*x + 0.01086296471223264*y >= 0)  &&  (1.800000000000001 - 0.1040000000000001*x + 0.07200000000000006*y >= 0) 
[0m[31m[2][0m[#r8,#s32] -->   [83+:1633-]|-->> [33m(1.000367087409359 + 1.999367090680119*x - 1.999370255226732*y >= 0)  &&  (1.000367080581782 - 1.999310141679857*x + 1.999306977192035*y >= 0)  &&  (0.9996375424801727 - 0.1665968831786753*x + 0.166600007812467*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*x - 2*y >= 0)  &&  (1 - 2*x + 2*y >= 0) [33m }[0m
		#r_samples=8		#s_samples=32	 TOTAL:[1m[32m40[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/multivar_1.inv >>> [0m(1 + 2*x - 2*y >= 0)  &&  (1 - 2*x + 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*x - 2*y >= 0)  &&  (1 - 2*x + 2*y >= 0) [0m

=====================time=========================
