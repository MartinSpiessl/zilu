[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target half
[  8%] Building CXX object CMakeFiles/half.dir/test/half.cpp.o
[ 16%] Building CXX object CMakeFiles/half.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/half.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/half.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/half.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/half.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/half.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/half.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/half.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/half.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/half.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/half.dir/src/instrumentation.cpp.o
Linking CXX executable half
[100%] Built target half
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:573-]|-->> [33m(1 + 0.01034987062661717*i - 0.00213747328158398*k - 0.0008999887501406232*n >= 0)  &&  (1 + 0.02019352124526715*i + 0.001262095077829197*k - 0.003365586874211191*n >= 0)  &&  (1 + 0.02736318407960199*i + 0.01990049751243781*k - 0.009950248756218905*n >= 0)  &&  (1 - 0.006709801102324467*i + 0.02923556194584232*k - 0.007668344116942248*n >= 0)  &&  (1 - 0.009362080158540335*i - 0.002938463115454266*k - 0.006355280691563878*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:1528-]|-->> [33m(1 + 0.01034987062661717*i - 0.00213747328158398*k - 0.0008999887501406232*n >= 0)  &&  (1 + 0.02019352124526715*i + 0.001262095077829197*k - 0.003365586874211191*n >= 0)  &&  (1 + 0.02736318407960199*i + 0.01990049751243781*k - 0.009950248756218905*n >= 0)  &&  (1 - 0.006709801102324467*i + 0.02923556194584232*k - 0.007668344116942248*n >= 0)  &&  (1 - 0.009362080158540335*i - 0.002938463115454266*k - 0.006355280691563878*n >= 0)  &&  (1 - 0.001292521003466306*i - 0.009165148933670172*k - 0.0122201985782269*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:2826-]|-->> [33m(1 + 0.01034987062661717*i - 0.00213747328158398*k - 0.0008999887501406232*n >= 0)  &&  (1 + 0.02019352124526715*i + 0.001262095077829197*k - 0.003365586874211191*n >= 0)  &&  (1 + 0.02736318407960199*i + 0.01990049751243781*k - 0.009950248756218905*n >= 0)  &&  (1 - 0.006709801102324467*i + 0.02923556194584232*k - 0.007668344116942248*n >= 0)  &&  (1 - 0.009362080158540335*i - 0.002938463115454266*k - 0.006355280691563878*n >= 0)  &&  (1 - 0.001292521003466306*i - 0.009165148933670172*k - 0.0122201985782269*n >= 0)  &&  (1 - 0.007173872003020577*i - 0.002265433264111761*k - 0.02643005474797055*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [1+:3646-]|-->> [33m(1 + 0.01034987062661717*i - 0.00213747328158398*k - 0.0008999887501406232*n >= 0)  &&  (1 + 0.02019352124526715*i + 0.001262095077829197*k - 0.003365586874211191*n >= 0)  &&  (1 + 0.02736318407960199*i + 0.01990049751243781*k - 0.009950248756218905*n >= 0)  &&  (1 - 0.006709801102324467*i + 0.02923556194584232*k - 0.007668344116942248*n >= 0)  &&  (1 - 0.009362080158540335*i - 0.002938463115454266*k - 0.006355280691563878*n >= 0)  &&  (1 - 0.001292521003466306*i - 0.009165148933670172*k - 0.0122201985782269*n >= 0)  &&  (1 - 0.007173872003020577*i - 0.002265433264111761*k - 0.02643005474797055*n >= 0)  &&  (1 + 0.03568773234200744*i - 0.01412639405204461*k - 0.003717472118959108*n >= 0)  &&  (1 + 0.07384615384615384*i - 0.02153846153846154*k - 0.01538461538461539*n >= 0)  &&  (1 + 0.1411764705882353*i - 0.01176470588235294*k - 0.05882352941176471*n >= 0)  &&  (1 + 0.16*i + 0.12*k - 0.2*n >= 0)  &&  (1 - 0.096*i + 0.128*k - 0.08*n >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [1+:4375-]|-->> [33m(1 + 0.01034987062661717*i - 0.00213747328158398*k - 0.0008999887501406232*n >= 0)  &&  (1 + 0.02019352124526715*i + 0.001262095077829197*k - 0.003365586874211191*n >= 0)  &&  (1 + 0.02736318407960199*i + 0.01990049751243781*k - 0.009950248756218905*n >= 0)  &&  (1 - 0.006709801102324467*i + 0.02923556194584232*k - 0.007668344116942248*n >= 0)  &&  (1 - 0.009362080158540335*i - 0.002938463115454266*k - 0.006355280691563878*n >= 0)  &&  (1 - 0.001292521003466306*i - 0.009165148933670172*k - 0.0122201985782269*n >= 0)  &&  (1 - 0.007173872003020577*i - 0.002265433264111761*k - 0.02643005474797055*n >= 0)  &&  (1 + 0.03568773234200744*i - 0.01412639405204461*k - 0.003717472118959108*n >= 0)  &&  (1 + 0.07384615384615384*i - 0.02153846153846154*k - 0.01538461538461539*n >= 0)  &&  (1 + 0.1411764705882353*i - 0.01176470588235294*k - 0.05882352941176471*n >= 0)  &&  (1 + 0.16*i + 0.12*k - 0.2*n >= 0)  &&  (1 - 0.096*i + 0.128*k - 0.08*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(62 - 6*i + 8*k - 5*n >= 0)  &&  (25 + 4*i + 3*k - 5*n >= 0)  &&  (779 + 28*i - 11*k >= 0)  &&  (34 + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(62 - 6*i + 8*k - 5*n >= 0)  &&  (25 + 4*i + 3*k - 5*n >= 0)  &&  (779 + 28*i - 11*k >= 0)  &&  (34 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,13,13) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,14,14) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,15,15) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,16,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,17,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,18,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,19,19) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,20,20) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [77+:5673-]|-->> [33m(1 - 0.01497530667516329*i + 0.01529393022144336*k + 0.01338218894376294*n >= 0)  &&  (1 + 0.1666836256526978*i + 0.1666782701834248*k - 0.1666889811219708*n >= 0)  &&  (1 + 0.1578853321523958*i + 0.02631772573333028*k - 0.02631071831746831*n >= 0)  &&  (1.010848680050685 - 0.008565618660482263*i + 0.004576436545526655*k + 0.006277797070992821*n >= 0)  &&  (1.410802208186204 - 0.0116377381011588*i - 0.003282438951608893*k - 0.007261152832346945*n >= 0)  &&  (1.015414245785248 - 0.004624362183295525*i + 0.02168815027197021*k - 0.006215544373148649*n >= 0)  &&  (1.538848306612276 - 0.002087088511526421*i - 0.01100464851532112*k - 0.01593776681529267*n >= 0)  &&  (1.746920937624156 + 0.0007945967421533577*i + 0.003178386968613429*k - 0.03972983710766786*n >= 0)  &&  (1 + 0.03827627140931526*i - 0.005737119453845399*k + 0.005745761968949176*n >= 0)  &&  (1 + 0.08301107604395128*i - 0.003458794835164637*k + 0.003458794835164637*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [77+:6231-]|-->> [33m(1 - 0.01497530667516329*i + 0.01529393022144336*k + 0.01338218894376294*n >= 0)  &&  (1 + 0.1666836256526978*i + 0.1666782701834248*k - 0.1666889811219708*n >= 0)  &&  (1 + 0.1578853321523958*i + 0.02631772573333028*k - 0.02631071831746831*n >= 0)  &&  (1.010848680050685 - 0.008565618660482263*i + 0.004576436545526655*k + 0.006277797070992821*n >= 0)  &&  (1.410802208186204 - 0.0116377381011588*i - 0.003282438951608893*k - 0.007261152832346945*n >= 0)  &&  (1.015414245785248 - 0.004624362183295525*i + 0.02168815027197021*k - 0.006215544373148649*n >= 0)  &&  (1.538848306612276 - 0.002087088511526421*i - 0.01100464851532112*k - 0.01593776681529267*n >= 0)  &&  (1.746920937624156 + 0.0007945967421533577*i + 0.003178386968613429*k - 0.03972983710766786*n >= 0)  &&  (1 + 0.03827627140931526*i - 0.005737119453845399*k + 0.005745761968949176*n >= 0)  &&  (1 + 0.08301107604395128*i - 0.003458794835164637*k + 0.003458794835164637*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1943 - 29*i + 30*k + 26*n >= 0)  &&  (6 + i + k - n >= 0)  &&  (97 - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1943 - 29*i + 30*k + 26*n >= 0)  &&  (6 + i + k - n >= 0)  &&  (97 - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,98,98) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,99,99) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,100,100) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,101,101) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,102,102) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,103,103) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,104,104) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,105,105) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [493+:6948-]|-->> [33m(1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [493+:8031-]|-->> [33m(1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(15 + 2*i + 4*k - 4*n >= 0)  &&  (69 - i >= 0)  &&  (38 + 6*i + k - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(15 + 2*i + 4*k - 4*n >= 0)  &&  (69 - i >= 0)  &&  (38 + 6*i + k - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (68,32,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (69,33,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (69,32,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (68,33,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (68,34,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (69,33,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (68,33,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (68,34,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [493+:9470-]|-->> [33m(1 + 0.9996716370746412*i + 1.999344485657815*k - 1.999353388890484*n >= 0)  &&  (1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [493+:10026-]|-->> [33m(1 + 0.9996716370746412*i + 1.999344485657815*k - 1.999353388890484*n >= 0)  &&  (1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [493+:10817-]|-->> [33m(1 + 0.9996716370746412*i + 1.999344485657815*k - 1.999353388890484*n >= 0)  &&  (1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i + 2*k - 2*n >= 0)  &&  (69 - i >= 0)  &&  (6 + i + k - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + i + 2*k - 2*n >= 0)  &&  (69 - i >= 0)  &&  (6 + i + k - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (68,35,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (69,36,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (69,35,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (68,36,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (68,37,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (69,36,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (68,36,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (68,37,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [493+:12090-]|-->> [33m(1 + 0.9996716370746412*i + 1.999344485657815*k - 1.999353388890484*n >= 0)  &&  (1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [493+:13186-]|-->> [33m(1 + 0.9996716370746412*i + 1.999344485657815*k - 1.999353388890484*n >= 0)  &&  (1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [493+:14493-]|-->> [33m(1 + 0.9996716370746412*i + 1.999344485657815*k - 1.999353388890484*n >= 0)  &&  (1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [493+:15963-]|-->> [33m(1 + 0.9996716370746412*i + 1.999344485657815*k - 1.999353388890484*n >= 0)  &&  (1 + 0.1332921578143278*i + 0.2665656032669368*k - 0.2665741745640435*n >= 0)  &&  (1 + 0.1666634371827306*i + 0.1666636234991115*k - 0.1666632508663496*n >= 0)  &&  (1.010846180950816 - 0.008565531435641389*i + 0.0045764759232256*k + 0.006277877200677687*n >= 0)  &&  (3.627318718381112 - 0.05227655986509275*i + 0.01517706576728499*k + 0.02023608768971333*n >= 0)  &&  (1.015399574847774 - 0.0046229853685322*i + 0.02168365516915617*k - 0.006213823900250801*n >= 0)  &&  (1 + 0.04877224869981146*i + 0.09753168453503092*k - 0.09753982857128252*n >= 0)  &&  (1 + 0.03828622047190995*i - 0.005742933070786493*k + 0.005742933070786493*n >= 0)  &&  (1 + 0.08303641182621044*i - 0.00345880799182224*k + 0.003460892993695296*n >= 0)  &&  (1 + 0.1578341513008398*i + 0.02630945373080678*k - 0.02630193003613981*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i + 2*k - 2*n >= 0)  &&  (26 + i >= 0)  &&  (69 - i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + i + 2*k - 2*n >= 0)  &&  (26 + i >= 0)  &&  (69 - i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (68,35,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (69,36,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (68,36,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (68,37,69) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (68,36,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (69,36,71) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (69,35,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (68,37,70) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
