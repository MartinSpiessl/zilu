[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target cggmp2005_variant_true
[  8%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/test/cggmp2005_variant_true.cpp.o
[ 16%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/instrumentation.cpp.o
Linking CXX executable cggmp2005_variant_true
[100%] Built target cggmp2005_variant_true
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	2	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1216-]|-->> [33m(0.9899270355782268 + 0.008049762166117818*low + 0.0011192182690859*mid + 0.004476873076343599*high >= 0)  &&  (1.049414824447334 - 0.005779511631267158*low - 0.003178731397196937*mid - 0.02311804652506863*high >= 0)  &&  (1.007697325505545 - 0.01030658838878017*low + 0.004174820613176778*mid + 0.002609262883235486*high >= 0)  &&  (1.001614619646985 + 0.003742981908920774*low + 0.0102014604968625*mid - 0.005357601555906205*high >= 0)  &&  (1.024265259984928 + 0.002712886209495101*low - 0.01672946495855312*mid - 0.00376789751318764*high >= 0)  &&  (1.010495837857401 - 0.009410061527325372*low - 0.02424900470503076*mid + 0.006876583423814695*high >= 0)  &&  (0.9858479970048671 + 0.002246349681767128*low + 0.001722201422688132*mid + 0.01190565331336578*high >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:2503-]|-->> [33m(0.9899270355782268 + 0.008049762166117818*low + 0.0011192182690859*mid + 0.004476873076343599*high >= 0)  &&  (1.049414824447334 - 0.005779511631267158*low - 0.003178731397196937*mid - 0.02311804652506863*high >= 0)  &&  (1.007697325505545 - 0.01030658838878017*low + 0.004174820613176778*mid + 0.002609262883235486*high >= 0)  &&  (1.001614619646985 + 0.003742981908920774*low + 0.0102014604968625*mid - 0.005357601555906205*high >= 0)  &&  (1.024265259984928 + 0.002712886209495101*low - 0.01672946495855312*mid - 0.00376789751318764*high >= 0)  &&  (1.010495837857401 - 0.009410061527325372*low - 0.02424900470503076*mid + 0.006876583423814695*high >= 0)  &&  (0.9858479970048671 + 0.002246349681767128*low + 0.001722201422688132*mid + 0.01190565331336578*high >= 0)  &&  (0.9907359752959342 - 0.01698404529078745*low - 0.007205352547606794*mid + 0.02624806999485332*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972506*low + 0.01728201099764336*mid + 0.009033778476040848*high >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:3799-]|-->> [33m(0.9899270355782268 + 0.008049762166117818*low + 0.0011192182690859*mid + 0.004476873076343599*high >= 0)  &&  (1.049414824447334 - 0.005779511631267158*low - 0.003178731397196937*mid - 0.02311804652506863*high >= 0)  &&  (1.007697325505545 - 0.01030658838878017*low + 0.004174820613176778*mid + 0.002609262883235486*high >= 0)  &&  (1.001614619646985 + 0.003742981908920774*low + 0.0102014604968625*mid - 0.005357601555906205*high >= 0)  &&  (1.024265259984928 + 0.002712886209495101*low - 0.01672946495855312*mid - 0.00376789751318764*high >= 0)  &&  (1.010495837857401 - 0.009410061527325372*low - 0.02424900470503076*mid + 0.006876583423814695*high >= 0)  &&  (0.9858479970048671 + 0.002246349681767128*low + 0.001722201422688132*mid + 0.01190565331336578*high >= 0)  &&  (0.9907359752959342 - 0.01698404529078745*low - 0.007205352547606794*mid + 0.02624806999485332*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972506*low + 0.01728201099764336*mid + 0.009033778476040848*high >= 0)  &&  (1.01349007515899 - 0.002698015031798034*low + 0.02543842744266718*mid - 0.01079206012719214*high >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:4901-]|-->> [33m(0.9899270355782268 + 0.008049762166117818*low + 0.0011192182690859*mid + 0.004476873076343599*high >= 0)  &&  (2 + 0.2*mid - 0.6*high >= 0)  &&  (1.733333333333333 + 0.1333333333333333*low - 0.06666666666666665*mid - 0.3333333333333333*high >= 0)  &&  (1.323943661971831 + 0.08450704225352113*low - 0.07042253521126761*mid - 0.1267605633802817*high >= 0)  &&  (1.143730886850153 + 0.04281345565749235*low - 0.03975535168195719*mid - 0.05198776758409786*high >= 0)  &&  (1.010495837857401 - 0.009410061527325372*low - 0.02424900470503076*mid + 0.006876583423814695*high >= 0)  &&  (0.9858479970048671 + 0.002246349681767128*low + 0.001722201422688132*mid + 0.01190565331336578*high >= 0)  &&  (0.9907359752959342 - 0.01698404529078745*low - 0.007205352547606794*mid + 0.02624806999485332*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972506*low + 0.01728201099764336*mid + 0.009033778476040848*high >= 0)  &&  (1.01349007515899 - 0.002698015031798034*low + 0.02543842744266718*mid - 0.01079206012719214*high >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:6134-]|-->> [33m(0.9801536491677336 + 0.01536491677336748*low - 0.01216389244558259*mid + 0.01600512163892446*high >= 0)  &&  (2 + 0.2*mid - 0.6*high >= 0)  &&  (1.733333333333333 + 0.1333333333333333*low - 0.06666666666666665*mid - 0.3333333333333333*high >= 0)  &&  (1.323943661971831 + 0.08450704225352113*low - 0.07042253521126761*mid - 0.1267605633802817*high >= 0)  &&  (1.01349007515899 - 0.002698015031798034*low + 0.02543842744266718*mid - 0.01079206012719214*high >= 0)  &&  (1.010495837857401 - 0.009410061527325372*low - 0.02424900470503076*mid + 0.006876583423814695*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972506*low + 0.01728201099764336*mid + 0.009033778476040848*high >= 0)  &&  (0.9907359752959342 - 0.01698404529078745*low - 0.007205352547606794*mid + 0.02624806999485332*high >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [2+:8112-]|-->> [33m(1.031700288184438 - 0.02017291066282421*low - 0.04899135446685879*mid + 0.008645533141210374*high >= 0)  &&  (0.9801536491677336 + 0.01536491677336748*low - 0.01216389244558259*mid + 0.01600512163892446*high >= 0)  &&  (2 + 0.2*mid - 0.6*high >= 0)  &&  (1.733333333333333 + 0.1333333333333333*low - 0.06666666666666665*mid - 0.3333333333333333*high >= 0)  &&  (1.323943661971831 + 0.08450704225352113*low - 0.07042253521126761*mid - 0.1267605633802817*high >= 0)  &&  (1.01349007515899 - 0.002698015031798034*low + 0.02543842744266718*mid - 0.01079206012719214*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972506*low + 0.01728201099764336*mid + 0.009033778476040848*high >= 0)  &&  (0.9907359752959342 - 0.01698404529078745*low - 0.007205352547606794*mid + 0.02624806999485332*high >= 0) 
[0m[31m[7Pure Random][0m[#r210,#s0] -->   [2+:9232-]|-->> [33m(0.9630529897909577 + 0.03889158969372873*low - 0.003889158969372873*mid + 0.02041808458920759*high >= 0)  &&  (1.031700288184438 - 0.02017291066282421*low - 0.04899135446685879*mid + 0.008645533141210374*high >= 0)  &&  (2 + 0.2*mid - 0.6*high >= 0)  &&  (1.733333333333333 + 0.1333333333333333*low - 0.06666666666666665*mid - 0.3333333333333333*high >= 0)  &&  (1.323943661971831 + 0.08450704225352113*low - 0.07042253521126761*mid - 0.1267605633802817*high >= 0)  &&  (1.01349007515899 - 0.002698015031798034*low + 0.02543842744266718*mid - 0.01079206012719214*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972506*low + 0.01728201099764336*mid + 0.009033778476040848*high >= 0)  &&  (0.9907359752959342 - 0.01698404529078745*low - 0.007205352547606794*mid + 0.02624806999485332*high >= 0) 
[0m[31m[8Pure Random][0m[#r240,#s0] -->   [2+:10771-]|-->> [33m(0.9630529897909577 + 0.03889158969372873*low - 0.003889158969372873*mid + 0.02041808458920759*high >= 0)  &&  (1.031700288184438 - 0.02017291066282421*low - 0.04899135446685879*mid + 0.008645533141210374*high >= 0)  &&  (2 + 0.2*mid - 0.6*high >= 0)  &&  (1.733333333333333 + 0.1333333333333333*low - 0.06666666666666665*mid - 0.3333333333333333*high >= 0)  &&  (1.323943661971831 + 0.08450704225352113*low - 0.07042253521126761*mid - 0.1267605633802817*high >= 0)  &&  (1.01349007515899 - 0.002698015031798034*low + 0.02543842744266718*mid - 0.01079206012719214*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972506*low + 0.01728201099764336*mid + 0.009033778476040848*high >= 0)  &&  (0.9907359752959342 - 0.01698404529078745*low - 0.007205352547606794*mid + 0.02624806999485332*high >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 8 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(424 + 17*low + 9*high >= 0)  &&  (358 - 7*low - 17*mid >= 0)  &&  (10 + mid - 3*high >= 0)  &&  (57 + mid >= 0)  &&  (751 + 19*mid - 8*high >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(424 + 17*low + 9*high >= 0)  &&  (358 - 7*low - 17*mid >= 0)  &&  (10 + mid - 3*high >= 0)  &&  (57 + mid >= 0)  &&  (751 + 19*mid - 8*high >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,22,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,23,46) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,24,48) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,25,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,26,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,27,54) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,28,56) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,29,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [214+:12227-]|-->> [33m(0.5294117647058824 + 0.2352941176470588*low - 0.2352941176470588*mid + 0.3529411764705882*high >= 0)  &&  (3.111473290964915 - 0.0259115794030829*low + 0.02094858505026009*mid - 0.04687900443831824*high >= 0)  &&  (0.9999686917016852 + 0.4759936811724984*low + 0.7615961515356605*mid - 0.3807824216186728*high >= 0)  &&  (0.9999846275276109 - 0.01332678954101672*low - 0.01936238948471777*mid + 0.01334216201340586*high >= 0)  &&  (0.9999702762223133 + 0.4936466160663971*low + 0.04937060636217705*mid - 0.02467044129224516*high >= 0)  &&  (0.9999647665338721 + 0.2430659959941597*low - 0.03645285270589838*mid + 0.01824404308601313*high >= 0)  &&  (2.417068134893324 - 0.002752924982794219*low - 0.0364762560220234*mid - 0.006194081211286992*high >= 0)  &&  (1.422939410375663 - 0.02613704534419135*low - 0.03772716498121688*mid + 0.01157152369102805*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972505*low + 0.01728201099764336*mid + 0.009033778476040847*high >= 0)  &&  (0.9999815006136454 + 0.004597463490326761*low + 0.0288402010106536*mid - 0.004578964103972114*high >= 0)  &&  (0.9999660201890463 + 0.1052225590596199*low + 0.2104643367818876*mid - 0.1052151784854669*high >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [214+:13560-]|-->> [33m(0.9999855215063957 - 0.06666215186949159*low - 0.1333053195973785*mid + 0.06665989904549141*high >= 0)  &&  (3.111473290964915 - 0.0259115794030829*low + 0.02094858505026009*mid - 0.04687900443831824*high >= 0)  &&  (1.000018540724535 + 0.01035027786360343*low - 0.1283471536535896*mid + 0.0641643064645272*high >= 0)  &&  (0.5294117647058824 + 0.2352941176470588*low - 0.2352941176470588*mid + 0.3529411764705882*high >= 0)  &&  (0.9999686917016852 + 0.4759936811724984*low + 0.7615961515356605*mid - 0.3807824216186728*high >= 0)  &&  (0.9999702762223133 + 0.4936466160663971*low + 0.04937060636217705*mid - 0.02467044129224516*high >= 0)  &&  (2.417068134893324 - 0.002752924982794219*low - 0.0364762560220234*mid - 0.006194081211286992*high >= 0)  &&  (0.9999660201890463 + 0.1052225590596199*low + 0.2104643367818876*mid - 0.1052151784854669*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972505*low + 0.01728201099764336*mid + 0.009033778476040847*high >= 0)  &&  (0.9999815006136454 + 0.004597463490326761*low + 0.0288402010106536*mid - 0.004578964103972114*high >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [214+:15957-]|-->> [33m(0.9999855215063957 - 0.06666215186949159*low - 0.1333053195973785*mid + 0.06665989904549141*high >= 0)  &&  (3.111473290964915 - 0.0259115794030829*low + 0.02094858505026009*mid - 0.04687900443831824*high >= 0)  &&  (1.000018540724535 + 0.01035027786360343*low - 0.1283471536535896*mid + 0.0641643064645272*high >= 0)  &&  (0.5294117647058824 + 0.2352941176470588*low - 0.2352941176470588*mid + 0.3529411764705882*high >= 0)  &&  (0.9999686917016852 + 0.4759936811724984*low + 0.7615961515356605*mid - 0.3807824216186728*high >= 0)  &&  (0.9999702762223133 + 0.4936466160663971*low + 0.04937060636217705*mid - 0.02467044129224516*high >= 0)  &&  (2.417068134893324 - 0.002752924982794219*low - 0.0364762560220234*mid - 0.006194081211286992*high >= 0)  &&  (0.9999660201890463 + 0.1052225590596199*low + 0.2104643367818876*mid - 0.1052151784854669*high >= 0)  &&  (0.9874312647289867 + 0.003534956794972505*low + 0.01728201099764336*mid + 0.009033778476040847*high >= 0)  &&  (0.9999815006136454 + 0.004597463490326761*low + 0.0288402010106536*mid - 0.004578964103972114*high >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(15 - low - 2*mid + high >= 0)  &&  (57 + mid >= 0)  &&  (19 + 2*low + 4*mid - 2*high >= 0)  &&  (9 + 4*low - 4*mid + 6*high >= 0)  &&  (21 + 10*low + 16*mid - 8*high >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(15 - low - 2*mid + high >= 0)  &&  (57 + mid >= 0)  &&  (19 + 2*low + 4*mid - 2*high >= 0)  &&  (9 + 4*low - 4*mid + 6*high >= 0)  &&  (21 + 10*low + 16*mid - 8*high >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 