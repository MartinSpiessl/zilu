[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down
[  8%] Building CXX object CMakeFiles/down.dir/test/down.cpp.o
[ 16%] Building CXX object CMakeFiles/down.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down.dir/src/instrumentation.cpp.o
Linking CXX executable down
[100%] Built target down
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:453-]|-->> [33m(1 - 0.0005694558137879489*i + 0.0008541837206819233*k - 0.01188739011282343*n >= 0)  &&  (1 + 6.137134265154886e-05*i + 0.005615477852616721*k + 0.005462049495987849*n >= 0)  &&  (1 - 0.01150309854591114*i + 0.00405038681194054*k - 0.003645348130746486*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:1802-]|-->> [33m(1 - 0.0005694558137879489*i + 0.0008541837206819233*k - 0.01188739011282343*n >= 0)  &&  (1 + 6.137134265154886e-05*i + 0.005615477852616721*k + 0.005462049495987849*n >= 0)  &&  (1 - 0.01150309854591114*i + 0.00405038681194054*k - 0.003645348130746486*n >= 0)  &&  (1 + 0.00453398348945635*i + 0.01035116985328714*k - 0.006587108088455452*n >= 0)  &&  (1 - 0.003347093607051211*i + 0.01182639741158094*k - 0.01718174718286288*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1+:2416-]|-->> [33m(1 - 0.0005694558137879489*i + 0.0008541837206819233*k - 0.01188739011282343*n >= 0)  &&  (1 + 6.137134265154886e-05*i + 0.005615477852616721*k + 0.005462049495987849*n >= 0)  &&  (1 - 0.01150309854591114*i + 0.00405038681194054*k - 0.003645348130746486*n >= 0)  &&  (1 + 0.00453398348945635*i + 0.01035116985328714*k - 0.006587108088455452*n >= 0)  &&  (1 - 0.003347093607051211*i + 0.01182639741158094*k - 0.01718174718286288*n >= 0)  &&  (1 + 0.002926310188880022*i + 0.02287842511306198*k - 0.0002660281989890929*n >= 0)  &&  (1 - 0.01632335794792071*i + 0.01088223863194714*k - 0.03420132141469102*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [1+:2479-]|-->> [33m(1 - 0.0005694558137879489*i + 0.0008541837206819233*k - 0.01188739011282343*n >= 0)  &&  (1 + 6.137134265154886e-05*i + 0.005615477852616721*k + 0.005462049495987849*n >= 0)  &&  (1 - 0.01150309854591114*i + 0.00405038681194054*k - 0.003645348130746486*n >= 0)  &&  (1 + 0.00453398348945635*i + 0.01035116985328714*k - 0.006587108088455452*n >= 0)  &&  (1 - 0.003347093607051211*i + 0.01182639741158094*k - 0.01718174718286288*n >= 0)  &&  (1 + 0.002926310188880022*i + 0.02287842511306198*k - 0.0002660281989890929*n >= 0)  &&  (1 - 0.01632335794792071*i + 0.01088223863194714*k - 0.03420132141469102*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(551 - 9*i + 6*k - 19*n >= 0)  &&  (44 + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down.inv >>> [0m(551 - 9*i + 6*k - 19*n >= 0)  &&  (44 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[34m[1mTest Counter Example: (0,0,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,36) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [277+:2899-]|-->> [33m(1.562310030395137 - 0.0009352349777881693*i + 0.001402852466682254*k - 0.01519756838905775*n >= 0)  &&  (1 + 6.137134265154885e-05*i + 0.00561547785261672*k + 0.005462049495987848*n >= 0)  &&  (1.103119305391789 - 0.01125522564047593*i + 0.009325758387822918*k - 0.0008575410011791183*n >= 0)  &&  (1.155380577427821 + 0.005564304461942258*i + 0.01270341207349081*k - 0.004199475065616799*n >= 0)  &&  (1.496644295302013 - 0.0006711409395973155*i + 0.02214765100671141*k - 0.01342281879194631*n >= 0)  &&  (1.756597196607882 - 0.01739208463321983*i + 0.01737048926498013*k - 0.02044857288129409*n >= 0)  &&  (1 + 0.009591892136458238*i + 0.01465930685005882*k + 0.007420142973486562*n >= 0)  &&  (1.783397803567557 - 0.05293228402483496*i + 0.05293228402483494*k - 0.02117291360993399*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [277+:3652-]|-->> [33m(1.562310030395137 - 0.0009352349777881693*i + 0.001402852466682254*k - 0.01519756838905775*n >= 0)  &&  (1 + 6.137134265154885e-05*i + 0.00561547785261672*k + 0.005462049495987848*n >= 0)  &&  (1.103119305391789 - 0.01125522564047593*i + 0.009325758387822918*k - 0.0008575410011791183*n >= 0)  &&  (1.155380577427821 + 0.005564304461942258*i + 0.01270341207349081*k - 0.004199475065616799*n >= 0)  &&  (1.496644295302013 - 0.0006711409395973155*i + 0.02214765100671141*k - 0.01342281879194631*n >= 0)  &&  (1.756597196607882 - 0.01739208463321983*i + 0.01737048926498013*k - 0.02044857288129409*n >= 0)  &&  (1 + 0.009591892136458238*i + 0.01465930685005882*k + 0.007420142973486562*n >= 0)  &&  (1.783397803567557 - 0.05293228402483496*i + 0.05293228402483494*k - 0.02117291360993399*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(168 - 5*i + 5*k - 2*n >= 0)  &&  (68 + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down.inv >>> [0m(168 - 5*i + 5*k - 2*n >= 0)  &&  (68 + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[34m[1mTest Counter Example: (0,0,85) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,86) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,87) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,88) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,89) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,90) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,91) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,92) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [993+:4010-]|-->> [33m(3.365849477112977 - 0.0027430138865078*i + 0.0041145208297617*k - 0.02571575518601062*n >= 0)  &&  (1 + 6.137134265154885e-05*i + 0.00561547785261672*k + 0.005462049495987848*n >= 0)  &&  (1 - 0.01044690154525866*i + 0.01038101877777384*k + 7.553736794004961e-05*n >= 0)  &&  (5.12796894524533 - 0.02098293070521517*i + 0.02099150807883621*k - 0.04486922766571011*n >= 0)  &&  (1 - 0.1666071770963729*i + 0.1666178887563552*k - 8.734569854729202e-06*n >= 0)  &&  (1 - 0.01638845456353383*i + 0.1802730001988721*k - 1.086684372986202e-05*n >= 0)  &&  (1 + 0.03413929178058659*i + 0.09266379197587789*k - 7.373392753862174e-06*n >= 0)  &&  (1 + 0.02682747755816408*i + 0.04146064713534449*k - 2.383769976396777e-06*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [993+:5932-]|-->> [33m(3.365849477112977 - 0.0027430138865078*i + 0.0041145208297617*k - 0.02571575518601062*n >= 0)  &&  (1 + 6.137134265154885e-05*i + 0.00561547785261672*k + 0.005462049495987848*n >= 0)  &&  (1 - 0.01044690154525866*i + 0.01038101877777384*k + 7.553736794004961e-05*n >= 0)  &&  (1 - 0.3998504041436214*i + 0.3998605851057059*k - 9.088311045957198e-06*n >= 0)  &&  (1 + 0.3998515314137721*k - 1.075859320565087e-05*n >= 0)  &&  (13.033711420828 - 0.02803418234353516*i + 0.02802347955473183*k - 0.1308012110959564*n >= 0)  &&  (1 + 0.03413929178058659*i + 0.09266379197587789*k - 7.373392753862174e-06*n >= 0)  &&  (1 + 0.02682747755816408*i + 0.04146064713534449*k - 2.383769976396777e-06*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [993+:7564-]|-->> [33m(3.365849477112977 - 0.0027430138865078*i + 0.0041145208297617*k - 0.02571575518601062*n >= 0)  &&  (1 + 6.137134265154885e-05*i + 0.00561547785261672*k + 0.005462049495987848*n >= 0)  &&  (1 - 0.01044690154525866*i + 0.01038101877777384*k + 7.553736794004961e-05*n >= 0)  &&  (1 - 0.9997041312856643*i + 0.9997148954689858*k - 9.269010156742752e-06*n >= 0)  &&  (1 + 0.9997353048665722*k - 1.080388299712354e-05*n >= 0)  &&  (13.033711420828 - 0.02803418234353516*i + 0.02802347955473183*k - 0.1308012110959564*n >= 0)  &&  (1 + 0.03413929178058659*i + 0.09266379197587789*k - 7.373392753862174e-06*n >= 0)  &&  (1 + 0.02682747755816408*i + 0.04146064713534449*k - 2.383769976396777e-06*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [993+:8748-]|-->> [33m(3.365849477112977 - 0.0027430138865078*i + 0.0041145208297617*k - 0.02571575518601062*n >= 0)  &&  (1 + 6.137134265154885e-05*i + 0.00561547785261672*k + 0.005462049495987848*n >= 0)  &&  (1 - 0.01044690154525866*i + 0.01038101877777384*k + 7.553736794004961e-05*n >= 0)  &&  (1 - 1.999299047847604*i + 1.999299444382485*k + 1.046197242260405e-05*n >= 0)  &&  (1 + 0.9997353048665722*k - 1.080388299712354e-05*n >= 0)  &&  (13.033711420828 - 0.02803418234353516*i + 0.02802347955473183*k - 0.1308012110959564*n >= 0)  &&  (1 + 0.03413929178058659*i + 0.09266379197587789*k - 7.373392753862174e-06*n >= 0)  &&  (1 + 0.02682747755816408*i + 0.04146064713534449*k - 2.383769976396777e-06*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [993+:9316-]|-->> [33m(3.365849477112977 - 0.0027430138865078*i + 0.0041145208297617*k - 0.02571575518601062*n >= 0)  &&  (1 + 6.137134265154885e-05*i + 0.00561547785261672*k + 0.005462049495987848*n >= 0)  &&  (1 - 0.01044690154525866*i + 0.01038101877777384*k + 7.553736794004961e-05*n >= 0)  &&  (1 - 1.999299047847604*i + 1.999299444382485*k + 1.046197242260405e-05*n >= 0)  &&  (1 + 0.9997353048665722*k - 1.080388299712354e-05*n >= 0)  &&  (13.033711420828 - 0.02803418234353516*i + 0.02802347955473183*k - 0.1308012110959564*n >= 0)  &&  (1 + 0.03413929178058659*i + 0.09266379197587789*k - 7.373392753862174e-06*n >= 0)  &&  (1 + 0.02682747755816408*i + 0.04146064713534449*k - 2.383769976396777e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down.inv >>> [0m(1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*i + 2*k >= 0) [0m

=====================time=========================
