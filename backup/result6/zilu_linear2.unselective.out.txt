[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_linear2
[  8%] Building CXX object CMakeFiles/zilu_linear2.dir/test/zilu_linear2.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_linear2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_linear2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_linear2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_linear2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_linear2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_linear2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_linear2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_linear2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_linear2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_linear2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_linear2.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_linear2
[100%] Built target zilu_linear2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [2039+:213-]|-->> [33m(0.8724704437663433 + 0.004849978247793874*i + 0.01364859316183568*j + 0.1138809630718211*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [2599+:360-]|-->> [33m(0.6975180141133531 + 0.001543761732884896*i + 0.05193736490117834*j + 0.2505446209854687*k >= 0) [0m
[31m[3Pure Random][0m[#r90,#s0] -->  [4067+:650-]|-->> [33m(0.6975175447866215 + 0.001541862767274638*i + 0.05193920689993253*j + 0.250543248313446*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(67 + 5*j + 24*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.inv >>> [0m(67 + 5*j + 24*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[34m[1mTest Counter Example: (-39,-38,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-40,-39,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-41,-40,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-42,-41,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-43,-42,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-44,-43,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-45,-44,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-46,-45,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [4297+:764-]|-->> [33m(0.2634308617244727 - 0.105213615843601*i + 0.1052320726861815*j + 0.6313370655893451*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [5319+:1055-]|-->> [33m(0.2634466825416961 - 0.1052107444497281*i + 0.1052302710272794*j + 0.6313230464310233*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(5 - 2*i + 2*j + 12*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.inv >>> [0m(5 - 2*i + 2*j + 12*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-3,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-4,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-5,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-6,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.cnt --> [0m-
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [5924+:1190-]|-->> [33m( -0.9996841310727904 - 0.6665666415063833*i + 0.6665587447832035*j + 1.333125386289587*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [6970+:1259-]|-->> [33m( -0.9996881781710951 - 0.6665679230875138*i + 0.6665601275417907*j + 1.333128050629304*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -3 - 2*i + 2*j + 4*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear2.inv >>> [0m( -3 - 2*i + 2*j + 4*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -3 - 2*i + 2*j + 4*k >= 0) [0m

=====================time=========================
