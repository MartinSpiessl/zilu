[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_28
[  8%] Building CXX object CMakeFiles/dillig_28.dir/test/dillig_28.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_28.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_28.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_28.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_28.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_28.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_28.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_28.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_28.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_28.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_28.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_28.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_28
[100%] Built target dillig_28
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2694-]|-->> [33m(1 - 0.002528168794281969*x + 0.006055120322107432*y - 0.00440088641967602*n >= 0)  &&  (1.021407775303991 - 0.009248158931323858*x - 0.01215961637266655*y - 0.01044699434834732*n >= 0)  &&  (1 - 0.009085402786190187*x + 0.02786190187764991*y + 0.01877649909145972*n >= 0)  &&  (1.008014005057382 + 0.003267846722427543*x - 0.01128185177980938*y - 0.004201517214549698*n >= 0)  &&  (1 + 0.02218762164266251*x + 0.01557026080186843*y + 0.006617360840794083*n >= 0)  &&  (1.014920211452003 - 0.007608319747048071*x - 0.007311891704955289*y + 0.009288078652240501*n >= 0)  &&  (1.000769822940724 + 0.01539645881447267*x - 0.01616628175519631*y + 0.003849114703618168*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:4265-]|-->> [33m(1.024087849805172 - 0.02373361671980163*x - 0.0003542330853701736*y - 0.0120439249025859*n >= 0)  &&  (1 + 0.005157055789967183*x - 0.003281762775433662*y - 0.03000468823253634*n >= 0)  &&  (1 - 0.009085402786190187*x + 0.02786190187764991*y + 0.01877649909145972*n >= 0)  &&  (1.021407775303991 - 0.009248158931323858*x - 0.01215961637266655*y - 0.01044699434834732*n >= 0)  &&  (1 + 0.02218762164266251*x + 0.01557026080186843*y + 0.006617360840794083*n >= 0)  &&  (1.014920211452003 - 0.007608319747048071*x - 0.007311891704955289*y + 0.009288078652240501*n >= 0)  &&  (1.000769822940724 + 0.01539645881447267*x - 0.01616628175519631*y + 0.003849114703618168*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:5297-]|-->> [33m(1.024087849805172 - 0.02373361671980163*x - 0.0003542330853701736*y - 0.0120439249025859*n >= 0)  &&  (1 + 0.005157055789967183*x - 0.003281762775433662*y - 0.03000468823253634*n >= 0)  &&  (1 - 0.009085402786190187*x + 0.02786190187764991*y + 0.01877649909145972*n >= 0)  &&  (1.021407775303991 - 0.009248158931323858*x - 0.01215961637266655*y - 0.01044699434834732*n >= 0)  &&  (1 + 0.02218762164266251*x + 0.01557026080186843*y + 0.006617360840794083*n >= 0)  &&  (1.014920211452003 - 0.007608319747048071*x - 0.007311891704955289*y + 0.009288078652240501*n >= 0)  &&  (1.000769822940724 + 0.01539645881447267*x - 0.01616628175519631*y + 0.003849114703618168*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1786 - 41*x - 21*n >= 0)  &&  (33 - n >= 0)  &&  (905 + 25*y + 17*n >= 0)  &&  (1105 + 17*x - 18*y >= 0)  &&  (450 + 10*x + 7*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(1786 - 41*x - 21*n >= 0)  &&  (33 - n >= 0)  &&  (905 + 25*y + 17*n >= 0)  &&  (1105 + 17*x - 18*y >= 0)  &&  (450 + 10*x + 7*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (50,50,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (44,44,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (30,30,28) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (30,30,27) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (51,51,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (51,51,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (52,52,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (45,45,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [361+:7332-]|-->> [33m(1.34442349181468 + 0.02421125366513163*x - 0.02421749396334481*y + 0.02293993308717305*n >= 0)  &&  (1.00060301563915 + 0.02021003581720835*x + 0.008471007999572509*y - 0.02870258008960764*n >= 0)  &&  (1.24090694378838 - 0.0283419933868682*x + 0.02928672649976381*y + 0.01511572980632971*n >= 0)  &&  (2.685817727072506 - 0.01405973151752789*x - 0.02383849645541995*y - 0.01960253171014539*n >= 0)  &&  (1.000185614319621 + 0.01626061543167877*x - 0.01625597392363805*y + 2.846484918253914e-05*n >= 0)  &&  (1.865022983702465 + 0.03510238194734643*x + 0.02089427496865859*y + 0.001671541997492688*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [361+:8934-]|-->> [33m(1.954079475319901 - 0.03886868091750564*x + 0.03886792489738577*y + 0.06360267748491116*n >= 0)  &&  (4.602362204724411 - 0.05118110236220474*x - 0.00787401574803151*y + 0.03543307086614174*n >= 0)  &&  (1.24090694378838 - 0.0283419933868682*x + 0.02928672649976381*y + 0.01511572980632971*n >= 0)  &&  (1.34442349181468 + 0.02421125366513163*x - 0.02421749396334481*y + 0.02293993308717305*n >= 0)  &&  (1.000185614319621 + 0.01626061543167877*x - 0.01625597392363805*y + 2.846484918253914e-05*n >= 0)  &&  (1.865022983702465 + 0.03510238194734643*x + 0.02089427496865859*y + 0.001671541997492688*n >= 0)  &&  (2.685817727072506 - 0.01405973151752789*x - 0.02383849645541995*y - 0.01960253171014539*n >= 0)  &&  (1.00060301563915 + 0.02021003581720835*x + 0.008471007999572509*y - 0.02870258008960764*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [361+:10168-]|-->> [33m(1.954079475319901 - 0.03886868091750564*x + 0.03886792489738577*y + 0.06360267748491116*n >= 0)  &&  (4.602362204724411 - 0.05118110236220474*x - 0.00787401574803151*y + 0.03543307086614174*n >= 0)  &&  (1.24090694378838 - 0.0283419933868682*x + 0.02928672649976381*y + 0.01511572980632971*n >= 0)  &&  (1.34442349181468 + 0.02421125366513163*x - 0.02421749396334481*y + 0.02293993308717305*n >= 0)  &&  (1.000185614319621 + 0.01626061543167877*x - 0.01625597392363805*y + 2.846484918253914e-05*n >= 0)  &&  (1.865022983702465 + 0.03510238194734643*x + 0.02089427496865859*y + 0.001671541997492688*n >= 0)  &&  (2.685817727072506 - 0.01405973151752789*x - 0.02383849645541995*y - 0.01960253171014539*n >= 0)  &&  (1.00060301563915 + 0.02021003581720835*x + 0.008471007999572509*y - 0.02870258008960764*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(402 - 8*x + 8*y + 13*n >= 0)  &&  (347 + 7*x - 10*n >= 0)  &&  (1149 - 26*x + 27*y + 14*n >= 0)  &&  (938 + 17*x - 17*y + 16*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(402 - 8*x + 8*y + 13*n >= 0)  &&  (347 + 7*x - 10*n >= 0)  &&  (1149 - 26*x + 27*y + 14*n >= 0)  &&  (938 + 17*x - 17*y + 16*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (-30,-30,-31) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-31,-31,-32) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-32,-32,-33) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,-31) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-33,-33,-34) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-34,-34,-35) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-1,-31) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-35,-35,-36) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [403+:12914-]|-->> [33m(1.000380568562747 + 0.2499158001542795*x - 0.2499266612123718*y - 1.954886427846247e-06*n >= 0)  &&  (1.42954700473976 - 0.09081375164988288*x + 0.08882890943727433*y + 0.01385635499160509*n >= 0)  &&  (2.936404636266634 - 0.05028831959365318*x + 0.03107048640502177*y + 0.06247182069718689*n >= 0)  &&  (4.588126159554726 - 0.05009276437847861*x - 0.009276437847866414*y + 0.03339517625231907*n >= 0)  &&  (2.685860140693462 - 0.0140563158423056*x - 0.02383546167767378*y - 0.01961095768193147*n >= 0)  &&  (2.50991094513071 + 0.003447285262855503*x + 0.005170927894283254*y + 0.03332375754093651*n >= 0)  &&  (1.528117359413203 + 0.05134474327628362*x + 0.009779951100244502*y - 0.04645476772616138*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [403+:15194-]|-->> [33m(4.37740399892093 - 0.04017498865112012*x - 0.03573921483875986*y - 0.03928492479373327*n >= 0)  &&  (1.000380568562747 + 0.2499158001542795*x - 0.2499266612123718*y - 1.954886427846247e-06*n >= 0)  &&  (1.42954700473976 - 0.09081375164988288*x + 0.08882890943727433*y + 0.01385635499160509*n >= 0)  &&  (2.936404636266634 - 0.05028831959365318*x + 0.03107048640502177*y + 0.06247182069718689*n >= 0)  &&  (4.588126159554726 - 0.05009276437847861*x - 0.009276437847866414*y + 0.03339517625231907*n >= 0)  &&  (2.50991094513071 + 0.003447285262855503*x + 0.005170927894283254*y + 0.03332375754093651*n >= 0)  &&  (1.528117359413203 + 0.05134474327628362*x + 0.009779951100244502*y - 0.04645476772616138*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [403+:16785-]|-->> [33m(0.9996624092959792 - 0.3998651984287496*x + 0.3998633999767889*y + 1.398372367411582e-05*n >= 0)  &&  (7.377586322234606 - 0.3650697727566987*x + 0.3017595998206657*y + 0.2056971553040605*n >= 0)  &&  (8.620915424846118 - 0.1464881719603492*x + 0.07083909948488398*y + 0.2458109104081273*n >= 0)  &&  (11.90697674418595 - 0.1395348837209291*x - 0.02325581395348819*y + 0.1627906976744172*n >= 0)  &&  (9.489361702127624 - 0.09219858156028327*x - 0.05673758865248202*y + 0.04964539007092177*n >= 0)  &&  (4.37740399892093 - 0.04017498865112012*x - 0.03573921483875986*y - 0.03928492479373327*n >= 0)  &&  (1.000380568562747 + 0.2499158001542795*x - 0.2499266612123718*y - 1.954886427846247e-06*n >= 0)  &&  (1.528117359413203 + 0.05134474327628362*x + 0.009779951100244502*y - 0.04645476772616138*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [403+:19141-]|-->> [33m(0.9996624092959792 - 0.3998651984287496*x + 0.3998633999767889*y + 1.398372367411582e-05*n >= 0)  &&  (7.377586322234606 - 0.3650697727566987*x + 0.3017595998206657*y + 0.2056971553040605*n >= 0)  &&  (8.620915424846118 - 0.1464881719603492*x + 0.07083909948488398*y + 0.2458109104081273*n >= 0)  &&  (11.90697674418595 - 0.1395348837209291*x - 0.02325581395348819*y + 0.1627906976744172*n >= 0)  &&  (9.489361702127624 - 0.09219858156028327*x - 0.05673758865248202*y + 0.04964539007092177*n >= 0)  &&  (4.37740399892093 - 0.04017498865112012*x - 0.03573921483875986*y - 0.03928492479373327*n >= 0)  &&  (1.000380568562747 + 0.2499158001542795*x - 0.2499266612123718*y - 1.954886427846247e-06*n >= 0)  &&  (1.528117359413203 + 0.05134474327628362*x + 0.009779951100244502*y - 0.04645476772616138*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 - 2*x + 2*y >= 0)  &&  (296 + 10*x - 9*n >= 0)  &&  (177 - 3*x + 5*n >= 0)  &&  (4 + x - y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(5 - 2*x + 2*y >= 0)  &&  (296 + 10*x - 9*n >= 0)  &&  (177 - 3*x + 5*n >= 0)  &&  (4 + x - y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (-84,-84,-86) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-87,-87,-88) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-88,-88,-89) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-89,-89,-90) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-90,-90,-91) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-91,-91,-92) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-92,-92,-93) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-93,-93,-94) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [420+:21442-]|-->> [33m(4.378160360731085 - 0.04018992892894022*x - 0.03575321096346398*y - 0.03928093442710569*n >= 0)  &&  (1.00020925418621 + 0.2499042367405463*x - 0.2499087773470651*y - 2.608428236433591e-06*n >= 0)  &&  (33 + 0.1276595744680851*x + 0.06382978723404253*y + 0.1489361702127661*n >= 0)  &&  (0.9998204726008453 - 0.2221357339012826*x + 0.2221425253498057*y - 8.648591616200463e-07*n >= 0)  &&  (0.9998092635172231 + 0.04713807430811934*x + 0.004963934213014581*y - 0.05209519650389188*n >= 0)  &&  (38.60000000000036 - 0.3999999999999986*x + 0.8000000000000043*y >= 0)  &&  (19.7617762263867 - 0.5091022154846172*x + 0.2732010605859543*y + 0.4329944114437225*n >= 0)  &&  (14.07747322093275 - 0.1730961202907304*x + 0.008667084853713369*y + 0.3018108918805291*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [420+:24147-]|-->> [33m(4.378160360731085 - 0.04018992892894022*x - 0.03575321096346398*y - 0.03928093442710569*n >= 0)  &&  (1.00020925418621 + 0.2499042367405463*x - 0.2499087773470651*y - 2.608428236433591e-06*n >= 0)  &&  (33 + 0.1276595744680851*x + 0.06382978723404253*y + 0.1489361702127661*n >= 0)  &&  (0.9998204726008453 - 0.2221357339012826*x + 0.2221425253498057*y - 8.648591616200463e-07*n >= 0)  &&  (0.9998092635172231 + 0.04713807430811934*x + 0.004963934213014581*y - 0.05209519650389188*n >= 0)  &&  (38.60000000000036 - 0.3999999999999986*x + 0.8000000000000043*y >= 0)  &&  (19.7617762263867 - 0.5091022154846172*x + 0.2732010605859543*y + 0.4329944114437225*n >= 0)  &&  (14.07747322093275 - 0.1730961202907304*x + 0.008667084853713369*y + 0.3018108918805291*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(506 - 13*x + 7*y + 11*n >= 0)  &&  (4 + x - y >= 0)  &&  (97 - x + 2*y >= 0)  &&  (9 - 2*x + 2*y >= 0)  &&  (191 + 9*x - 10*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(506 - 13*x + 7*y + 11*n >= 0)  &&  (4 + x - y >= 0)  &&  (97 - x + 2*y >= 0)  &&  (9 - 2*x + 2*y >= 0)  &&  (191 + 9*x - 10*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (-91,-91,-96) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-80,-80,-90) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-100,-100,-101) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-69,-69,-84) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-89,-89,-95) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-101,-101,-102) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-102,-102,-103) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-103,-103,-104) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [466+:26385-]|-->> [33m(1.000198910004002 + 0.2499007678096634*x - 0.2499048047336337*y - 2.778653031554335e-06*n >= 0)  &&  (12.36440832663902 + 0.5317903417582031*x - 0.6772553232573912*y + 0.2533486192454291*n >= 0)  &&  (18.72922319711279 + 0.0781890917667809*x - 0.3051251269199469*y + 0.3952366246098702*n >= 0)  &&  (2.685791951799339 - 0.01405489078010001*x - 0.02383367172010962*y - 0.01961196702832322*n >= 0)  &&  (0.9997923008875853 + 0.0471373337088459*x + 0.004964036934835325*y - 0.05209395281823781*n >= 0)  &&  (7.090505767524398 + 0.01538006506950607*x + 0.01892931085477668*y + 0.02425317953268263*n >= 0)  &&  (0.9998115961284384 - 0.66636678302158*x + 0.666373314276548*y - 2.690634843816042e-07*n >= 0)  &&  (19.95567637441695 - 0.5382396661658504*x + 0.2956047900180856*y + 0.4225775209822409*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [466+:28576-]|-->> [33m(1.000198910004002 + 0.2499007678096634*x - 0.2499048047336337*y - 2.778653031554335e-06*n >= 0)  &&  (12.36440832663902 + 0.5317903417582031*x - 0.6772553232573912*y + 0.2533486192454291*n >= 0)  &&  (18.72922319711279 + 0.0781890917667809*x - 0.3051251269199469*y + 0.3952366246098702*n >= 0)  &&  (2.685791951799339 - 0.01405489078010001*x - 0.02383367172010962*y - 0.01961196702832322*n >= 0)  &&  (0.9997923008875853 + 0.0471373337088459*x + 0.004964036934835325*y - 0.05209395281823781*n >= 0)  &&  (7.090505767524398 + 0.01538006506950607*x + 0.01892931085477668*y + 0.02425317953268263*n >= 0)  &&  (0.9998115961284384 - 0.66636678302158*x + 0.666373314276548*y - 2.690634843816042e-07*n >= 0)  &&  (19.95567637441695 - 0.5382396661658504*x + 0.2956047900180856*y + 0.4225775209822409*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(4 + x - y >= 0)  &&  (439 + 19*x - 24*y + 9*n >= 0)  &&  (3 - 2*x + 2*y >= 0)  &&  (191 + 9*x - 10*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(4 + x - y >= 0)  &&  (439 + 19*x - 24*y + 9*n >= 0)  &&  (3 - 2*x + 2*y >= 0)  &&  (191 + 9*x - 10*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (-101,-101,-105) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-92,-92,-100) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-108,-108,-109) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-83,-83,-95) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-99,-99,-104) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-109,-109,-110) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-110,-110,-111) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-111,-111,-112) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [498+:29910-]|-->> [33m(0.9999015446419435 + 0.6663670429988429*x - 0.6663567335992582*y - 7.529522477511819e-06*n >= 0)  &&  (10.80269823985827 + 0.5599134299256079*x - 0.6868792210456434*y + 0.2133651401077543*n >= 0)  &&  (19.15414877173919 + 0.07731961373946206*x - 0.3124561507377503*y + 0.3951365898552002*n >= 0)  &&  (2.685819154500078 - 0.0140597434222837*x - 0.02383851664012115*y - 0.01960254830814045*n >= 0)  &&  (1.000165865510469 + 0.04713409387444475*x + 0.004959716827837551*y - 0.05209973447051335*n >= 0)  &&  (10.0635838150289 + 0.01541425818882466*x + 0.02312138728323698*y + 0.04238921001926782*n >= 0)  &&  (0.9998081336352698 - 0.6663900244247358*x + 0.666395536365755*y + 9.467190622558519e-07*n >= 0)  &&  (18.35706280242266 - 0.609999921965219*x + 0.3851875110125604*y + 0.3777878288589385*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [498+:31531-]|-->> [33m(0.9999015446419435 + 0.6663670429988429*x - 0.6663567335992582*y - 7.529522477511819e-06*n >= 0)  &&  (10.80269823985827 + 0.5599134299256079*x - 0.6868792210456434*y + 0.2133651401077543*n >= 0)  &&  (19.15414877173919 + 0.07731961373946206*x - 0.3124561507377503*y + 0.3951365898552002*n >= 0)  &&  (2.685819154500078 - 0.0140597434222837*x - 0.02383851664012115*y - 0.01960254830814045*n >= 0)  &&  (1.000165865510469 + 0.04713409387444475*x + 0.004959716827837551*y - 0.05209973447051335*n >= 0)  &&  (10.0635838150289 + 0.01541425818882466*x + 0.02312138728323698*y + 0.04238921001926782*n >= 0)  &&  (0.9998081336352698 - 0.6663900244247358*x + 0.666395536365755*y + 9.467190622558519e-07*n >= 0)  &&  (18.35706280242266 - 0.609999921965219*x + 0.3851875110125604*y + 0.3777878288589385*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 2*x - 2*y >= 0)  &&  (3 - 2*x + 2*y >= 0)  &&  (191 + 9*x - 10*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(3 + 2*x - 2*y >= 0)  &&  (3 - 2*x + 2*y >= 0)  &&  (191 + 9*x - 10*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt[0m
[34m[1mTest Counter Example: (202,202,201) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (203,203,202) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (204,204,203) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (205,205,204) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (206,206,205) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (207,207,206) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (208,208,207) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (209,209,208) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [514+:34566-]|-->> [33m(1.000545416837213 + 0.6664390006450986*x - 0.6664466574356709*y + 9.817581798188257e-06*n >= 0)  &&  (10.80267978327902 + 0.5599124434358913*x - 0.6868779874099289*y + 0.21336476644192*n >= 0)  &&  (1.000809934894336 - 0.03280539741234652*x + 0.03279330883183405*y + 1.208858051247874e-05*n >= 0)  &&  (19.15414190502293 + 0.07731958763205071*x - 0.3124560339742306*y + 0.3951364463486353*n >= 0)  &&  (0.9996500109118642 + 0.9996406362054699*x + 0.9996406362054699*y - 1.999284397313488*n >= 0)  &&  (1.000154256404926 + 0.1176134958322628*x - 0.1176164938690802*y - 1.094339717733206e-07*n >= 0)  &&  (1.000915758106657 - 0.6665880722638207*x + 0.6665744985241346*y + 1.399490950859672e-05*n >= 0)  &&  (18.35705077991361 - 0.6099995096123401*x + 0.3851872577158666*y + 0.3777875787531393*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [514+:39146-]|-->> [33m(1.000545416837213 + 0.6664390006450986*x - 0.6664466574356709*y + 9.817581798188257e-06*n >= 0)  &&  (10.80267978327902 + 0.5599124434358913*x - 0.6868779874099289*y + 0.21336476644192*n >= 0)  &&  (1.000809934894336 - 0.03280539741234652*x + 0.03279330883183405*y + 1.208858051247874e-05*n >= 0)  &&  (19.15414190502293 + 0.07731958763205071*x - 0.3124560339742306*y + 0.3951364463486353*n >= 0)  &&  (0.9996500109118642 + 0.9996406362054699*x + 0.9996406362054699*y - 1.999284397313488*n >= 0)  &&  (1.000154256404926 + 0.1176134958322628*x - 0.1176164938690802*y - 1.094339717733206e-07*n >= 0)  &&  (1.000915758106657 - 0.6665880722638207*x + 0.6665744985241346*y + 1.399490950859672e-05*n >= 0)  &&  (18.35705077991361 - 0.6099995096123401*x + 0.3851872577158666*y + 0.3777875787531393*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 2*x - 2*y >= 0)  &&  (3 - 2*x + 2*y >= 0)  &&  (1 + x + y - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_28.inv >>> [0m(3 + 2*x - 2*y >= 0)  &&  (3 - 2*x + 2*y >= 0)  &&  (1 + x + y - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 