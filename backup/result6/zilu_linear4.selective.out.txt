[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_linear4
[  8%] Building CXX object CMakeFiles/zilu_linear4.dir/test/zilu_linear4.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_linear4.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_linear4.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_linear4.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_linear4.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_linear4.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_linear4.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_linear4.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_linear4.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_linear4.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_linear4.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_linear4.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_linear4
[100%] Built target zilu_linear4
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->  [460+:127-]|-->> [33m(0.4486771351790401 + 0.5513228648209599*xa + 0.7242858675082957*ya >= 0) [0m
[31m[2][0m[#r8,#s32] -->  [2143+:127-]|-->> [33m(0.4411789590871203 + 0.5588210409128795*xa + 0.7205850264402921*ya >= 0) [0m
[31m[3][0m[#r12,#s48] -->  [3314+:128-]|-->> [33m(0.4053988627066414 + 0.5946011372933586*xa + 0.7027128802341134*ya >= 0) [0m
[31m[4][0m[#r16,#s64] -->  [4342+:130-]|-->> [33m(0.3334139904192432 + 0.6666080069678234*xa + 0.6665860095807568*ya >= 0) [0m
[31m[5][0m[#r20,#s80] -->  [4347+:307-]|-->> [33m( -0.0001382800077217583 + 1.000138280007724*xa + 1.000138280007722*ya >= 0) [0m
[31m[6][0m[#r24,#s96] -->  [4479+:464-]|-->> [33m(xa + ya >= 0) [0m
[31m[7][0m[#r28,#s112] -->  [4565+:466-]|-->> [33m(2.896641954075463e-11 + 0.9999999999996169*xa + 0.9999999999994315*ya >= 0) [0m
[31m[8][0m[#r32,#s128] -->  [4645+:483-]|-->> [33m( -2.622419642550611e-12 + 1.000000000000444*xa + 1.000000000000406*ya >= 0) [0m
[31m[9][0m[#r36,#s144] -->  [4883+:484-]|-->> [33m( -1.444920572080122e-13 + 1.000000000000583*xa + 1.000000000000609*ya >= 0) [0m
[31m[10][0m[#r40,#s160] -->  [4940+:484-]|-->> [33m(xa + ya >= 0) [0m
[31m[11][0m[#r44,#s176] -->  [5134+:511-]|-->> [33m(3.637978807091713e-12 + 1.000000000001023*xa + 1.000000000001023*ya >= 0) [0m
[31m[12][0m[#r48,#s192] -->  [5245+:621-]|-->> [33m(5.911715561524034e-12 + 0.9999999999973692*xa + 0.9999999999973781*ya >= 0) [0m
[31m[13][0m[#r52,#s208] -->  [5331+:705-]|-->> [33m(6.548361852765083e-11 + 0.9999999999983231*xa + 0.9999999999979963*ya >= 0) [0m
[31m[14][0m[#r56,#s224] -->  [5597+:706-]|-->> [33m(1.682565198279917e-11 + 1.000000000000005*xa + 0.9999999999998668*ya >= 0) [0m
[31m[15][0m[#r60,#s240] -->  [5597+:710-]|-->> [33m( -8.185452315956354e-12 + 1.000000000001297*xa + 1.000000000001307*ya >= 0) [0m
[31m[16][0m[#r64,#s256] -->  [5780+:752-]|-->> [33m(xa + ya >= 0) [0m
[31m[17][0m[#r68,#s272] -->  [5783+:753-]|-->> [33m(2.989963832078502e-11 + 0.9999999999999183*xa + 0.9999999999997087*ya >= 0) [0m
[31m[18][0m[#r72,#s288] -->  [5900+:787-]|-->> [33m(1.192046461540031e-12 + 1.000000000001076*xa + 1.000000000001092*ya >= 0) [0m
[31m[19][0m[#r76,#s304] -->  [6136+:789-]|-->> [33m( -0.0002478115275152959 + 0.9997496726138877*xa + 0.9997521884669993*ya >= 0) [0m
[31m[20][0m[#r80,#s320] -->  [6270+:880-]|-->> [33m( -0.0002479496033629403 + 0.9997495331412551*xa + 0.9997520503961255*ya >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(xa + ya >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_linear4.inv >>> [0m(xa + ya >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(xa + ya >= 0) [0m

=====================time=========================
