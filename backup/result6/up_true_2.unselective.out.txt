[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target up_true_2
[  8%] Building CXX object CMakeFiles/up_true_2.dir/test/up_true_2.cpp.o
[ 16%] Building CXX object CMakeFiles/up_true_2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/up_true_2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/up_true_2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/up_true_2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/up_true_2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/up_true_2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/up_true_2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/up_true_2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/up_true_2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/up_true_2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/up_true_2.dir/src/instrumentation.cpp.o
Linking CXX executable up_true_2
[100%] Built target up_true_2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:2301-]|-->> [33m(1.005590806229755 - 0.008829924124772596*j - 0.0005324577361671917*k + 0.003239117895017083*n >= 0)  &&  (1.054481546572935 - 0.01581722319859402*j - 0.00351493848857645*k - 0.03866432337434095*n >= 0)  &&  (0.9929911311724545 + 0.00285798534715449*j + 0.004468437407852655*k + 0.004150883480391045*n >= 0)  &&  (1.002720824020989 + 0.00962005635992615*j - 0.00204061801574191*k - 0.0006802060052473035*n >= 0)  &&  (0.9959116925592805 + 0.01526301444535296*j + 0.005996184246388662*k - 0.001907876805669119*n >= 0)  &&  (1.000781860828772 + 0.0004343671270958213*j + 0.0131178872382938*k - 0.0012162279558683*n >= 0)  &&  (1.014157215486899 + 0.004458349628470864*j - 0.01134141572154869*k - 0.002815799765350019*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:2994-]|-->> [33m(1.011476664116297 + 0.008416220351951033*j - 0.03213465952563122*k + 0.02065799540933435*n >= 0)  &&  (1.054481546572935 - 0.01581722319859402*j - 0.00351493848857645*k - 0.03866432337434095*n >= 0)  &&  (0.9797468354430379 + 0.05569620253164557*j + 0.0759493670886076*k - 0.03544303797468355*n >= 0)  &&  (1.017777777777778 + 0.07407407407407407*j + 0.002962962962962963*k - 0.02074074074074074*n >= 0)  &&  (1.02135523613963 + 0.03696098562628337*j - 0.01560574948665298*k - 0.005749486652977412*n >= 0)  &&  (1.000781860828772 + 0.0004343671270958213*j + 0.0131178872382938*k - 0.0012162279558683*n >= 0)  &&  (0.9937234886367555 + 0.004276304445287443*j - 0.003931441183570714*k + 0.01020795254681519*n >= 0)  &&  (1.005590806229755 - 0.008829924124772596*j - 0.0005324577361671917*k + 0.003239117895017083*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:4093-]|-->> [33m(1.033076074972437 - 0.03675119441381845*j + 0.01029033443586917*k + 0.003675119441381845*n >= 0)  &&  (1.054481546572935 - 0.01581722319859402*j - 0.00351493848857645*k - 0.03866432337434095*n >= 0)  &&  (1.011476664116297 + 0.008416220351951033*j - 0.03213465952563122*k + 0.02065799540933435*n >= 0)  &&  (0.9797468354430379 + 0.05569620253164557*j + 0.0759493670886076*k - 0.03544303797468355*n >= 0)  &&  (1.017777777777778 + 0.07407407407407407*j + 0.002962962962962963*k - 0.02074074074074074*n >= 0)  &&  (1.02135523613963 + 0.03696098562628337*j - 0.01560574948665298*k - 0.005749486652977412*n >= 0)  &&  (0.9937234886367555 + 0.004276304445287443*j - 0.003931441183570714*k + 0.01020795254681519*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:6164-]|-->> [33m(1.033076074972437 - 0.03675119441381845*j + 0.01029033443586917*k + 0.003675119441381845*n >= 0)  &&  (1.054481546572935 - 0.01581722319859402*j - 0.00351493848857645*k - 0.03866432337434095*n >= 0)  &&  (1.011476664116297 + 0.008416220351951033*j - 0.03213465952563122*k + 0.02065799540933435*n >= 0)  &&  (0.9797468354430379 + 0.05569620253164557*j + 0.0759493670886076*k - 0.03544303797468355*n >= 0)  &&  (1.017777777777778 + 0.07407407407407407*j + 0.002962962962962963*k - 0.02074074074074074*n >= 0)  &&  (1.02135523613963 + 0.03696098562628337*j - 0.01560574948665298*k - 0.005749486652977412*n >= 0)  &&  (0.9937234886367555 + 0.004276304445287443*j - 0.003931441183570714*k + 0.01020795254681519*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(28 - j >= 0)  &&  (467 - 7*j - 17*n >= 0)  &&  (441 - 14*k + 9*n >= 0)  &&  (193 + 11*j + 15*k - 7*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(28 - j >= 0)  &&  (467 - 7*j - 17*n >= 0)  &&  (441 - 14*k + 9*n >= 0)  &&  (193 + 11*j + 15*k - 7*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,28,28) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,29,29) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,30,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,31,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,32,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,33,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,34,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,35,35) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [262+:8339-]|-->> [33m(0.999985669693793 - 0.03218216352155969*j + 0.01638729459801035*k + 0.03219649382776667*n >= 0)  &&  (2.627580336571764 + 0.06975560052702562*j + 0.06976423065139678*k - 0.1162665259820186*n >= 0)  &&  (0.9999736906730351 + 0.008791773029696722*j - 0.0275610425660209*k + 0.02758735189298581*n >= 0)  &&  (0.9899436846339501 + 0.008179136497720568*j + 0.002145347278090641*k + 0.007910968087959238*n >= 0)  &&  (2.628930817610063 - 0.02389937106918239*j - 0.0440251572327044*k - 0.002515723270440251*n >= 0)  &&  (2.1 + 0.004761904761904762*j - 0.03047619047619048*k - 0.0009523809523809511*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [262+:9673-]|-->> [33m(0.999985669693793 - 0.03218216352155969*j + 0.01638729459801035*k + 0.03219649382776667*n >= 0)  &&  (2.627580336571764 + 0.06975560052702562*j + 0.06976423065139678*k - 0.1162665259820186*n >= 0)  &&  (0.9999736906730351 + 0.008791773029696722*j - 0.0275610425660209*k + 0.02758735189298581*n >= 0)  &&  (0.9899436846339501 + 0.008179136497720568*j + 0.002145347278090641*k + 0.007910968087959238*n >= 0)  &&  (2.628930817610063 - 0.02389937106918239*j - 0.0440251572327044*k - 0.002515723270440251*n >= 0)  &&  (2.1 + 0.004761904761904762*j - 0.03047619047619048*k - 0.0009523809523809511*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1159 - 37*j + 19*k + 37*n >= 0)  &&  (113 + 3*j + 3*k - 5*n >= 0)  &&  (36 - k + n >= 0)  &&  (60 - k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1159 - 37*j + 19*k + 37*n >= 0)  &&  (113 + 3*j + 3*k - 5*n >= 0)  &&  (36 - k + n >= 0)  &&  (60 - k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,57,57) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,58,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,59,59) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,60,60) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,61,61) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,62,62) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,63,63) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,64,64) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [754+:12480-]|-->> [33m(10.04877411962818 - 0.04038682944361693*j - 0.04040158169540853*k - 0.1009855139237818*n >= 0)  &&  (0.9999993499968403 + 0.09089781478916281*j + 0.09088756589445068*k - 0.09088691589129083*n >= 0)  &&  (1.000001302403267 - 0.03219216079366083*j + 0.01638840488321378*k + 0.03219085839039332*n >= 0)  &&  (4.003131244271851 - 0.02168350450025312*j - 0.0216890088395175*k - 0.02523491685223018*n >= 0)  &&  (1.000014706921339 - 0.01096924402752479*j - 0.0420561222328478*k + 0.04204141531150893*n >= 0)  &&  (1.705720192970365 + 0.0124052377670572*j - 0.02963473466574775*k + 0.0186078566505858*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [754+:14580-]|-->> [33m(10.04877411962818 - 0.04038682944361693*j - 0.04040158169540853*k - 0.1009855139237818*n >= 0)  &&  (0.9999993499968403 + 0.09089781478916281*j + 0.09088756589445068*k - 0.09088691589129083*n >= 0)  &&  (1.000001302403267 - 0.03219216079366083*j + 0.01638840488321378*k + 0.03219085839039332*n >= 0)  &&  (4.003131244271851 - 0.02168350450025312*j - 0.0216890088395175*k - 0.02523491685223018*n >= 0)  &&  (1.000014706921339 - 0.01096924402752479*j - 0.0420561222328478*k + 0.04204141531150893*n >= 0)  &&  (1.705720192970365 + 0.0124052377670572*j - 0.02963473466574775*k + 0.0186078566505858*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(100 - n >= 0)  &&  (11 + j + k - n >= 0)  &&  (1159 - 37*j + 19*k + 37*n >= 0)  &&  (456 - 5*j - 19*k + 19*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(100 - n >= 0)  &&  (11 + j + k - n >= 0)  &&  (1159 - 37*j + 19*k + 37*n >= 0)  &&  (456 - 5*j - 19*k + 19*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,101,101) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,102,102) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,103,103) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,104,104) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,105,105) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,106,106) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,107,107) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,108,108) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1598+:16394-]|-->> [33m(1.000000627584767 - 0.0171455337828725*j + 0.02703669306192449*k + 0.0171449061981049*n >= 0)  &&  (0.9999968731842728 + 0.6664950351754975*j + 0.666501183245316*k - 0.6664919083597738*n >= 0)  &&  (3.933026467203684 - 0.02301495972382048*j + 0.01933256616800921*k - 0.00414269275028769*n >= 0)  &&  (1.000005863351296 - 0.08693497418733009*j - 0.08692613115753389*k + 0.08692911083603461*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1598+:18442-]|-->> [33m(1.000000627584767 - 0.0171455337828725*j + 0.02703669306192449*k + 0.0171449061981049*n >= 0)  &&  (0.9999968731842728 + 0.6664950351754975*j + 0.666501183245316*k - 0.6664919083597738*n >= 0)  &&  (3.933026467203684 - 0.02301495972382048*j + 0.01933256616800921*k - 0.00414269275028769*n >= 0)  &&  (1.000005863351296 - 0.08693497418733009*j - 0.08692613115753389*k + 0.08692911083603461*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(408 - 7*j + 11*k + 7*n >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0)  &&  (329 + 4*j - 9*k + 9*n >= 0)  &&  (23 - 2*j - 2*k + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(408 - 7*j + 11*k + 7*n >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0)  &&  (329 + 4*j - 9*k + 9*n >= 0)  &&  (23 - 2*j - 2*k + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-6,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-7,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-8,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1598+:20028-]|-->> [33m(0.999999999212386 + 3.938069870201844e-10*j + 1.999999915725264*k + 3.938069870201844e-10*n >= 0)  &&  (0.9999968731842728 + 0.6664950351754975*j + 0.666501183245316*k - 0.6664919083597738*n >= 0)  &&  (1.000005863351296 - 0.08693497418733009*j - 0.08692613115753389*k + 0.08692911083603461*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1598+:22184-]|-->> [33m(0.999999999212386 + 3.938069870201844e-10*j + 1.999999915725264*k + 3.938069870201844e-10*n >= 0)  &&  (0.9999968731842728 + 0.6664950351754975*j + 0.666501183245316*k - 0.6664919083597738*n >= 0)  &&  (1.000005863351296 - 0.08693497418733009*j - 0.08692613115753389*k + 0.08692911083603461*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0)  &&  (23 - 2*j - 2*k + 2*n >= 0)  &&  (329 + 4*j - 9*k + 9*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + 2*k >= 0)  &&  (3 + 2*j + 2*k - 2*n >= 0)  &&  (23 - 2*j - 2*k + 2*n >= 0)  &&  (329 + 4*j - 9*k + 9*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (0,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,0,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (6,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (7,0,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1598+:23851-]|-->> [33m(0.9999972327385862 + 1.999156402839851*j + 1.999150787865865*k - 1.999148020604451*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (0.999999999212386 + 3.938069870201844e-10*j + 1.999999915725264*k + 3.938069870201844e-10*n >= 0)  &&  (1.000005863351296 - 0.08693497418733009*j - 0.08692613115753389*k + 0.08692911083603461*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1598+:26077-]|-->> [33m(0.9999972327385862 + 1.999156402839851*j + 1.999150787865865*k - 1.999148020604451*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (0.999999999212386 + 3.938069870201844e-10*j + 1.999999915725264*k + 3.938069870201844e-10*n >= 0)  &&  (1.000005863351296 - 0.08693497418733009*j - 0.08692613115753389*k + 0.08692911083603461*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*j + 2*k - 2*n >= 0)  &&  (329 + 4*j - 9*k + 9*n >= 0)  &&  (1 + 2*k >= 0)  &&  (23 - 2*j - 2*k + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.inv >>> [0m(1 + 2*j + 2*k - 2*n >= 0)  &&  (329 + 4*j - 9*k + 9*n >= 0)  &&  (1 + 2*k >= 0)  &&  (23 - 2*j - 2*k + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt[0m
[34m[1mTest Counter Example: (1,1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,1,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,1,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,1,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/up_true_2.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1598+:28699-]|-->> [33m(1.000004274428193 - 1.999713511030389*j - 1.999713511030389*k + 1.999709236602195*n >= 0)  &&  (0.9999972327385862 + 1.999156402839851*j + 1.999150787865865*k - 1.999148020604451*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (0.999999999212386 + 3.938069870201844e-10*j + 1.999999915725264*k + 3.938069870201844e-10*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1598+:29727-]|-->> [33m(1.000004274428193 - 1.999713511030389*j - 1.999713511030389*k + 1.999709236602195*n >= 0)  &&  (0.9999972327385862 + 1.999156402839851*j + 1.999150787865865*k - 1.999148020604451*n >= 0)  &&  ( -1 + 2*j + 2*k >= 0)  &&  (0.999999999212386 + 3.938069870201844e-10*j + 1.999999915725264*k + 3.938069870201844e-10*n >= 0)  &&  (7.907149831937911 - 0.03275390939680987*j - 0.03275863928379376*k - 0.03119645175266839*n >= 0)  &&  (0.999991702221306 + 0.0121463180803744*j - 0.02712262815682245*k + 0.02713092593551652*n >= 0) 
