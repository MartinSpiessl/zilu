[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target half
[  8%] Building CXX object CMakeFiles/half.dir/test/half.cpp.o
[ 16%] Building CXX object CMakeFiles/half.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/half.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/half.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/half.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/half.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/half.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/half.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/half.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/half.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/half.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/half.dir/src/instrumentation.cpp.o
Linking CXX executable half
[100%] Built target half
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:1091-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.0221623240491165*i + 0.02455825097334531*k + 0.01018268942797245*n >= 0)  &&  (1 - 0.03459637561779242*i + 0.02800658978583196*k + 0.03624382207578253*n >= 0)  &&  (1 + 0.01863430182665195*i - 0.008581586367537085*k - 0.008336398185607455*n >= 0)  &&  (1 + 0.02724563644103874*i - 0.01106853980417199*k - 0.02894848871860366*n >= 0)  &&  (1 + 0.005150214592274677*k - 0.05836909871244635*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:1771-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.0221623240491165*i + 0.02455825097334531*k + 0.01018268942797245*n >= 0)  &&  (1 - 0.03459637561779242*i + 0.02800658978583196*k + 0.03624382207578253*n >= 0)  &&  (1 + 0.01863430182665195*i - 0.008581586367537085*k - 0.008336398185607455*n >= 0)  &&  (1 + 0.02724563644103874*i - 0.01106853980417199*k - 0.02894848871860366*n >= 0)  &&  (1 + 0.005150214592274677*k - 0.05836909871244635*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(17 - n >= 0)  &&  (1178 + 26*i + 29*k + 12*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(17 - n >= 0)  &&  (1178 + 26*i + 29*k + 12*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,18,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,19,19) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,20,20) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,21,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,22,22) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,23,23) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,24,24) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,25,25) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [97+:2404-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.0221623240491165*i + 0.02455825097334531*k + 0.01018268942797245*n >= 0)  &&  (1.34965034965035 - 0.01748251748251749*i + 0.05244755244755245*k - 0.02097902097902098*n >= 0)  &&  (1.159476246432768 + 0.02551619942924291*i - 0.003357394661742489*k - 0.003021655195568239*n >= 0)  &&  (1 + 0.0473225404732254*i + 0.0112079701120797*k - 0.0112079701120797*n >= 0)  &&  (1 + 0.04333996975388063*i + 0.04643568187915781*k - 0.04643568187915782*n >= 0)  &&  (1 - 0.03459637561779242*i + 0.02800658978583196*k + 0.03624382207578253*n >= 0)  &&  (1.329273287774592 - 0.006251751568327333*i + 0.000388039752516869*k - 0.006855368961131352*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [97+:3282-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.0221623240491165*i + 0.02455825097334531*k + 0.01018268942797245*n >= 0)  &&  (2.595344386434153 + 0.002336367942049236*i + 0.004741777489950992*k - 0.06855555294731713*n >= 0)  &&  (1.159476246432768 + 0.02551619942924291*i - 0.003357394661742489*k - 0.003021655195568239*n >= 0)  &&  (1 + 0.0473225404732254*i + 0.0112079701120797*k - 0.0112079701120797*n >= 0)  &&  (1 + 0.04333996975388063*i + 0.04643568187915781*k - 0.04643568187915782*n >= 0)  &&  (1 - 0.03459637561779242*i + 0.02800658978583196*k + 0.03624382207578253*n >= 0)  &&  (1.329273287774592 - 0.006251751568327333*i + 0.000388039752516869*k - 0.006855368961131352*n >= 0)  &&  (1.34965034965035 - 0.01748251748251749*i + 0.05244755244755245*k - 0.02097902097902098*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [97+:4220-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.0221623240491165*i + 0.02455825097334531*k + 0.01018268942797245*n >= 0)  &&  (2.595344386434153 + 0.002336367942049236*i + 0.004741777489950992*k - 0.06855555294731713*n >= 0)  &&  (1.159476246432768 + 0.02551619942924291*i - 0.003357394661742489*k - 0.003021655195568239*n >= 0)  &&  (1 + 0.0473225404732254*i + 0.0112079701120797*k - 0.0112079701120797*n >= 0)  &&  (1 + 0.04333996975388063*i + 0.04643568187915781*k - 0.04643568187915782*n >= 0)  &&  (1 - 0.03459637561779242*i + 0.02800658978583196*k + 0.03624382207578253*n >= 0)  &&  (1.329273287774592 - 0.006251751568327333*i + 0.000388039752516869*k - 0.006855368961131352*n >= 0)  &&  (1.34965034965035 - 0.01748251748251749*i + 0.05244755244755245*k - 0.02097902097902098*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(386 - 5*i + 15*k - 6*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0)  &&  (38 - n >= 0)  &&  (300 + 13*i + 14*k - 14*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(386 - 5*i + 15*k - 6*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0)  &&  (38 - n >= 0)  &&  (300 + 13*i + 14*k - 14*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,39,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,40,40) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,41,41) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,42,42) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,43,43) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,44,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,45,45) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,46,46) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [277+:4740-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.0221623240491165*i + 0.02455825097334531*k + 0.01018268942797245*n >= 0)  &&  (1.872577319587629 + 0.001832760595647194*i - 0.009438717067583046*k - 0.009530355097365408*n >= 0)  &&  (1 + 0.02631004033108307*i - 0.0001730923705992298*k + 0.0001730923705992315*n >= 0)  &&  (1 + 0.04731945158991253*i + 0.01120462761518956*k - 0.01120984945371637*n >= 0)  &&  (1 + 0.04333973364883761*i + 0.04643066939283183*k - 0.0464401884261059*n >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.663720094670507 - 0.007128803216516011*i + 0.001140608514642562*k - 0.007870198751033676*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0)  &&  (1 + 0.03174972546788697*i + 0.06349876584533087*k - 0.06348300876514174*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [277+:6491-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.07406575142055902*i + 0.1480993936070895*k - 0.1480993961305797*n >= 0)  &&  (1 + 0.1413823008827713*i + 0.1009960176981488*k - 0.1009786978486674*n >= 0)  &&  (1 + 0.02631004033108307*i - 0.0001730923705992298*k + 0.0001730923705992315*n >= 0)  &&  (1 + 0.1127495226518085*i + 0.01657294428476955*k - 0.01658868002458588*n >= 0)  &&  (1.872577319587629 + 0.001832760595647194*i - 0.009438717067583046*k - 0.009530355097365408*n >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.663720094670507 - 0.007128803216516011*i + 0.001140608514642562*k - 0.007870198751033676*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [277+:7675-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.07406575142055902*i + 0.1480993936070895*k - 0.1480993961305797*n >= 0)  &&  (1 + 0.1413823008827713*i + 0.1009960176981488*k - 0.1009786978486674*n >= 0)  &&  (1 + 0.02631004033108307*i - 0.0001730923705992298*k + 0.0001730923705992315*n >= 0)  &&  (1 + 0.1127495226518085*i + 0.01657294428476955*k - 0.01658868002458588*n >= 0)  &&  (1.872577319587629 + 0.001832760595647194*i - 0.009438717067583046*k - 0.009530355097365408*n >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.663720094670507 - 0.007128803216516011*i + 0.001140608514642562*k - 0.007870198751033676*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(607 - 21*i + 17*k + 22*n >= 0)  &&  (27 + 2*i + 4*k - 4*n >= 0)  &&  (38 + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(607 - 21*i + 17*k + 22*n >= 0)  &&  (27 + 2*i + 4*k - 4*n >= 0)  &&  (38 + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-5,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-7,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-8,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [277+:8319-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 + 0.07406575142055902*i + 0.1480993936070895*k - 0.1480993961305797*n >= 0)  &&  (1 + 0.02631004033108307*i - 0.0001730923705992298*k + 0.0001730923705992315*n >= 0)  &&  (1 + 0.1413823008827713*i + 0.1009960176981488*k - 0.1009786978486674*n >= 0)  &&  (1 + 0.1127495226518085*i + 0.01657294428476955*k - 0.01658868002458588*n >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.663720094670507 - 0.007128803216516011*i + 0.001140608514642562*k - 0.007870198751033676*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0)  &&  (1.872577319587629 + 0.001832760595647194*i - 0.009438717067583046*k - 0.009530355097365408*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [277+:9225-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 0.02631004033108307*i - 0.0001730923705992298*k + 0.0001730923705992315*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 + 0.07406575142055902*i + 0.1480993936070895*k - 0.1480993961305797*n >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1 + 0.1413823008827713*i + 0.1009960176981488*k - 0.1009786978486674*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0)  &&  (1 + 0.1127495226518085*i + 0.01657294428476955*k - 0.01658868002458588*n >= 0)  &&  (1.872577319587629 + 0.001832760595647194*i - 0.009438717067583046*k - 0.009530355097365408*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [277+:9712-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.1538106397600427*i + 0.3075787825637575*k - 0.3075845770971983*n >= 0)  &&  (1 + 0.2789940487582109*i + 0.232505680839022*k - 0.2324844004246629*n >= 0)  &&  (1 + 0.02631004033108307*i - 0.0001730923705992298*k + 0.0001730923705992315*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0)  &&  (1 + 0.1127495226518085*i + 0.01657294428476955*k - 0.01658868002458588*n >= 0)  &&  (1.872577319587629 + 0.001832760595647194*i - 0.009438717067583046*k - 0.009530355097365408*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [277+:10696-]|-->> [33m(1 + 0.01891923850065035*i + 0.002601395293839423*k + 0.01040558117535769*n >= 0)  &&  (1 + 0.3332062751141019*i + 0.6663935743974925*k - 0.6664145814951219*n >= 0)  &&  (1 + 0.2789940487582109*i + 0.232505680839022*k - 0.2324844004246629*n >= 0)  &&  (1 + 0.02631004033108307*i - 0.0001730923705992298*k + 0.0001730923705992315*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0)  &&  (1 + 0.1127495226518085*i + 0.01657294428476955*k - 0.01658868002458588*n >= 0)  &&  (1.872577319587629 + 0.001832760595647194*i - 0.009438717067583046*k - 0.009530355097365408*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [277+:11601-]|-->> [33m(1 + 0.9996322194131044*i + 1.999264237980405*k - 1.999243216208406*n >= 0)  &&  (1 + 0.9996296245303963*i + 1.058215627480763e-05*k + 1.058215627480763e-05*n >= 0)  &&  (1 + 0.4846794999802665*i - 0.06057483514128115*k + 0.06059503985378534*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [277+:12006-]|-->> [33m(1 + 0.9996322194131044*i + 1.999264237980405*k - 1.999243216208406*n >= 0)  &&  (1 + 0.9996296245303963*i + 1.058215627480763e-05*k + 1.058215627480763e-05*n >= 0)  &&  (1 + 0.4846794999802665*i - 0.06057483514128115*k + 0.06059503985378534*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i + 2*k - 2*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + i + 2*k - 2*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (-61,-30,-60) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-96,-40,-88) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-174,-60,-147) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-252,-80,-206) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-330,-100,-265) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-352,-44,-329) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-95,-37,-89) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-94,-35,-90) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [277+:13084-]|-->> [33m(1 + 0.9996322194131044*i + 1.999264237980405*k - 1.999243216208406*n >= 0)  &&  (1 + 0.9996296245303963*i + 1.058215627480763e-05*k + 1.058215627480763e-05*n >= 0)  &&  (1 + 0.4846794999802665*i - 0.06057483514128115*k + 0.06059503985378534*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [277+:13594-]|-->> [33m(1 + 0.9996322194131044*i + 1.999264237980405*k - 1.999243216208406*n >= 0)  &&  (1 + 0.9996296245303963*i + 1.058215627480763e-05*k + 1.058215627480763e-05*n >= 0)  &&  (1 + 0.4846794999802665*i - 0.06057483514128115*k + 0.06059503985378534*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i + 2*k - 2*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + i + 2*k - 2*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (-61,-30,-60) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-96,-40,-88) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-174,-60,-147) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-252,-80,-206) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-330,-100,-265) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-352,-44,-329) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-95,-37,-89) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-94,-35,-90) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [277+:14569-]|-->> [33m(1 + 0.9996322194131044*i + 1.999264237980405*k - 1.999243216208406*n >= 0)  &&  (1 + 0.9996296245303963*i + 1.058215627480763e-05*k + 1.058215627480763e-05*n >= 0)  &&  (1 + 0.4846794999802665*i - 0.06057483514128115*k + 0.06059503985378534*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [277+:15918-]|-->> [33m(1 + 0.9996322194131044*i + 1.999264237980405*k - 1.999243216208406*n >= 0)  &&  (1 + 0.9996296245303963*i + 1.058215627480763e-05*k + 1.058215627480763e-05*n >= 0)  &&  (1 + 0.4846794999802665*i - 0.06057483514128115*k + 0.06059503985378534*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [277+:16982-]|-->> [33m(1 + 0.9996322194131044*i + 1.999264237980405*k - 1.999243216208406*n >= 0)  &&  (1 + 0.9996296245303963*i + 1.058215627480763e-05*k + 1.058215627480763e-05*n >= 0)  &&  (1 + 0.4846794999802665*i - 0.06057483514128115*k + 0.06059503985378534*n >= 0)  &&  (4.724765840521661 - 0.01551920375192791*i - 0.03106098601494912*k - 0.04991218443117396*n >= 0)  &&  (4.610675039246469 + 0.006279434850863424*i - 0.03610675039246468*k - 0.04238618524332811*n >= 0)  &&  (1 + 2*k >= 0)  &&  (1 - 0.03459637561779243*i + 0.02800658978583196*k + 0.03624382207578254*n >= 0)  &&  (1.040376704460439 - 0.01227135135562363*i + 0.0562107062096308*k - 0.01583400174919178*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + i + 2*k - 2*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0)  &&  (95 - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/half.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/half.inv >>> [0m(1 + i + 2*k - 2*n >= 0)  &&  (607 - 21*i + 17*k + 22*n >= 0)  &&  (95 - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt[0m
[34m[1mTest Counter Example: (0,96,96) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,97,97) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,98,98) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,99,99) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,100,100) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,101,101) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,102,102) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,103,103) @/home/lijiaying/Research/GitHub/ZILU/tmp/half.cnt --> [0m+
