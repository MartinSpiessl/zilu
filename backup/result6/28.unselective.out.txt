[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 28
[  8%] Building CXX object CMakeFiles/28.dir/test/28.cpp.o
[ 16%] Building CXX object CMakeFiles/28.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/28.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/28.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/28.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/28.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/28.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/28.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/28.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/28.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/28.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/28.dir/src/instrumentation.cpp.o
Linking CXX executable 28
[100%] Built target 28
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [1+:238-]|-->> [33m(1 - 0.12*x - 0.04*y >= 0)  &&  (1 + 0.01538461538461539*x - 0.07692307692307693*y >= 0)  &&  (1 - 0.00762401564929528*x + 0.01193760345087024*y >= 0)  &&  (1 + 0.02351000206228088*x + 0.01649824706124974*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [1+:508-]|-->> [33m(1 - 0.004444444444444444*x + 0.03111111111111111*y >= 0)  &&  (1 - 0.12*x - 0.04*y >= 0)  &&  (1 + 0.01538461538461539*x - 0.07692307692307693*y >= 0)  &&  (1 + 0.02351000206228088*x + 0.01649824706124974*y >= 0) 
[0m[31m[3Pure Random][0m[#r60,#s0] -->   [1+:849-]|-->> [33m(1 - 0.01176470588235294*x - 0.1529411764705882*y >= 0)  &&  (1 - 0.004444444444444444*x + 0.03111111111111111*y >= 0)  &&  (1 - 0.12*x - 0.04*y >= 0)  &&  (1 + 0.01538461538461539*x - 0.07692307692307693*y >= 0)  &&  (1 + 0.02351000206228088*x + 0.01649824706124974*y >= 0) 
[0m[31m[4Pure Random][0m[#r80,#s0] -->   [1+:1106-]|-->> [33m(1 - 0.01176470588235294*x - 0.1529411764705882*y >= 0)  &&  (1 - 0.004444444444444444*x + 0.03111111111111111*y >= 0)  &&  (1 - 0.12*x - 0.04*y >= 0)  &&  (1 + 0.01538461538461539*x - 0.07692307692307693*y >= 0)  &&  (1 + 0.02351000206228088*x + 0.01649824706124974*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(85 - x - 13*y >= 0)  &&  (32 + y >= 0)  &&  (25 - 3*x - y >= 0)  &&  (424 + 10*x + 7*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/28.inv >>> [0m(85 - x - 13*y >= 0)  &&  (32 + y >= 0)  &&  (25 - 3*x - y >= 0)  &&  (424 + 10*x + 7*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt[0m
[34m[1mTest Counter Example: (7,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (8,8) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (9,9) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (10,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (11,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (12,12) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (13,13) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[34m[1mTest Counter Example: (14,14) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [15+:1649-]|-->> [33m(1 + 0.166656*x - 0.166592*y >= 0)  &&  (2.4 + 0.1*x - 0.2*y >= 0)  &&  (3.153846153846154 - 0.02564102564102563*x - 0.1282051282051282*y >= 0)  &&  (1 - 0.1999858902932953*x + 0.1999388579376128*y >= 0)  &&  (1 + 0.02351000206228088*x + 0.01649824706124974*y >= 0)  &&  (2.931034482758619 - 0.2413793103448276*x + 0.103448275862069*y >= 0)  &&  (3.51685393258427 - 0.146067415730337*x - 0.03370786516853932*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [15+:2493-]|-->> [33m(1 + 0.4998812142479698*x - 0.499915153034264*y >= 0)  &&  (6.599999999999994 + 0.2000000000000002*x - 0.6000000000000001*y >= 0)  &&  (6.600000000000001 - 0.09999999999999998*x - 0.2999999999999999*y >= 0)  &&  (1 - 0.1999858902932953*x + 0.1999388579376128*y >= 0)  &&  (1 + 0.02351000206228088*x + 0.01649824706124974*y >= 0)  &&  (2.931034482758619 - 0.2413793103448276*x + 0.103448275862069*y >= 0) 
[0m[31m[3Pure Random][0m[#r60,#s0] -->   [15+:2655-]|-->> [33m(1 + 0.4998812142479698*x - 0.499915153034264*y >= 0)  &&  (6.599999999999994 + 0.2000000000000002*x - 0.6000000000000001*y >= 0)  &&  (6.600000000000001 - 0.09999999999999998*x - 0.2999999999999999*y >= 0)  &&  (1 - 0.1999858902932953*x + 0.1999388579376128*y >= 0)  &&  (1 + 0.02351000206228088*x + 0.01649824706124974*y >= 0)  &&  (2.931034482758619 - 0.2413793103448276*x + 0.103448275862069*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(2 + x - y >= 0)  &&  (5 - x + y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/28.inv >>> [0m(2 + x - y >= 0)  &&  (5 - x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt[0m
[34m[1mTest Counter Example: (0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [15+:3114-]|-->> [33m(1 + 2*y >= 0)  &&  (1 + 1.999129071205728*x - 1.999062076683092*y >= 0)  &&  (6.599999999999994 + 0.2000000000000002*x - 0.6000000000000001*y >= 0)  &&  (6.600000000000001 - 0.09999999999999998*x - 0.2999999999999999*y >= 0)  &&  (1 - 0.1999858902932953*x + 0.1999388579376128*y >= 0)  &&  (2.931034482758619 - 0.2413793103448276*x + 0.103448275862069*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [15+:3276-]|-->> [33m(1 + 2*y >= 0)  &&  (1 + 1.999129071205728*x - 1.999062076683092*y >= 0)  &&  (6.599999999999994 + 0.2000000000000002*x - 0.6000000000000001*y >= 0)  &&  (6.600000000000001 - 0.09999999999999998*x - 0.2999999999999999*y >= 0)  &&  (1 - 0.1999858902932953*x + 0.1999388579376128*y >= 0)  &&  (2.931034482758619 - 0.2413793103448276*x + 0.103448275862069*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*y >= 0)  &&  (1 + 2*x - 2*y >= 0)  &&  (5 - x + y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/28.inv >>> [0m(1 + 2*y >= 0)  &&  (1 + 2*x - 2*y >= 0)  &&  (5 - x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt[0m
[34m[1mTest Counter Example: (1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (4,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/28.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->   [15+:3591-]|-->> [33m(1 - 1.999062076683092*x + 1.999129071205728*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 1.999129071205728*x - 1.999062076683092*y >= 0)  &&  (6.599999999999994 + 0.2000000000000002*x - 0.6000000000000001*y >= 0)  &&  (6.600000000000001 - 0.09999999999999998*x - 0.2999999999999999*y >= 0) 
[0m[31m[2Pure Random][0m[#r40,#s0] -->   [15+:3782-]|-->> [33m(1 - 1.999062076683092*x + 1.999129071205728*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 1.999129071205728*x - 1.999062076683092*y >= 0)  &&  (6.599999999999994 + 0.2000000000000002*x - 0.6000000000000001*y >= 0)  &&  (6.600000000000001 - 0.09999999999999998*x - 0.2999999999999999*y >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 2*x - 2*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/28.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/28.inv >>> [0m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 2*x - 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*x + 2*y >= 0)  &&  (1 + 2*y >= 0)  &&  (1 + 2*x - 2*y >= 0) [0m

=====================time=========================
