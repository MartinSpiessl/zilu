[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target f2
[  8%] Building CXX object CMakeFiles/f2.dir/test/f2.cpp.o
[ 16%] Building CXX object CMakeFiles/f2.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/f2.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/f2.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/f2.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/f2.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/f2.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/f2.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/f2.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/f2.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/f2.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/f2.dir/src/instrumentation.cpp.o
Linking CXX executable f2
[100%] Built target f2
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt[0m
[34m[1mTest Counter Example: (0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->  [1009+:212-]|-->> [33m(1 + 0.04632698812809293*x + 0.04763197370916596*y >= 0) [0m
[31m[2Pure Random][0m[#r40,#s0] -->  [1849+:705-]|-->> [33m(1 + 0.9998152769171381*x + 0.4744917368942835*y >= 0) [0m
[31m[3Pure Random][0m[#r60,#s0] -->  [3113+:754-]|-->> [33m(1 + 1.000008013131275*x + 0.7168199032179933*y >= 0) [0m
[31m[4Pure Random][0m[#r80,#s0] -->  [4048+:761-]|-->> [33m(1 + 0.999599585699704*x + 0.8896516395587427*y >= 0) [0m
[31m[5Pure Random][0m[#r100,#s0] -->  [5088+:804-]|-->> [33m(1 + 0.9996860022930357*x + 0.8897268219949411*y >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(9 + 9*x + 8*y >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/f2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/f2.inv >>> [0m(9 + 9*x + 8*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt[0m
[34m[1mTest Counter Example: (-10,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-16,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-17,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-18,19) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-18,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-20,20) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-19,19) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-15,15) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->  [5401+:1203-]|-->> [33m(1 + 1.000000006723511*x + 1.00000000681316*y >= 0) [0m
[31m[2Pure Random][0m[#r40,#s0] -->  [6181+:1253-]|-->> [33m(1 + 0.9999999999999987*x + 1.000000000000026*y >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(1 + x + y >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/f2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/f2.inv >>> [0m(1 + x + y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt[0m
[34m[1mTest Counter Example: (-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/f2.cnt --> [0m-
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r20,#s0] -->  [6792+:1301-]|-->> [33m(1 + 1.999513025136027*x + 1.999513025136027*y >= 0) [0m
[31m[2Pure Random][0m[#r40,#s0] -->  [7457+:1319-]|-->> [33m(1 + 2.000641207480462*x + 2.000641207480462*y >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m(1 + 2*x + 2*y >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/f2.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/f2.inv >>> [0m(1 + 2*x + 2*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*x + 2*y >= 0) [0m

=====================time=========================
