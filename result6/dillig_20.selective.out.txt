[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_20
[  8%] Building CXX object CMakeFiles/dillig_20.dir/test/dillig_20.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_20.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_20.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_20.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_20.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_20.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_20.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_20.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_20.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_20.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_20.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_20.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_20
[100%] Built target dillig_20
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [5+:125-]|-->> [33m(1.011837146345347 - 0.009448484526779552*x + 0.002388661818567864*y - 0.00334412654599501*k >= 0)  &&  (1.051779473646673 + 0.01483489052136082*x - 0.002424934027530133*y - 0.007702731616860424*k >= 0)  &&  (1.002930628928392 - 0.005745575135927198*x - 0.002814946207534801*y + 0.006015501484594918*k >= 0)  &&  (1.052585451358458 - 0.0105170902716915*x + 0.042068361086766*y + 0.04031551270815074*k >= 0)  &&  (1.007080288657922 - 0.003479629041286555*x - 0.005839725260593958*y - 0.003782205479659299*k >= 0)  &&  (1.025301075653075 + 0.002322838866454633*x - 0.006110853017903727*y + 0.005360397384126076*k >= 0)  &&  (1.071343638525565 + 0.02298850574712644*x - 0.0007927070947284977*y - 0.03250099088386841*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [5+:241-]|-->> [33m(1.011837146345347 - 0.009448484526779552*x + 0.002388661818567864*y - 0.00334412654599501*k >= 0)  &&  (1.051779473646673 + 0.01483489052136082*x - 0.002424934027530133*y - 0.007702731616860424*k >= 0)  &&  (1.002930628928392 - 0.005745575135927198*x - 0.002814946207534801*y + 0.006015501484594918*k >= 0)  &&  (1.052585451358458 - 0.0105170902716915*x + 0.042068361086766*y + 0.04031551270815074*k >= 0)  &&  (1.007080288657922 - 0.003479629041286555*x - 0.005839725260593958*y - 0.003782205479659299*k >= 0)  &&  (1.025301075653075 + 0.002322838866454633*x - 0.006110853017903727*y + 0.005360397384126076*k >= 0)  &&  (1.071343638525565 + 0.02298850574712644*x - 0.0007927070947284977*y - 0.03250099088386841*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(496 + 20*y + 19*k >= 0)  &&  (233 + 5*x - 7*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(496 + 20*y + 19*k >= 0)  &&  (233 + 5*x - 7*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (0,-13,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,-14,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-2,-15,-17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-3,-16,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-4,-17,-21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-5,-18,-23) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-6,-19,-25) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-7,-20,-27) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [30+:362-]|-->> [33m(1.011837146345347 - 0.009448484526779552*x + 0.002388661818567864*y - 0.00334412654599501*k >= 0)  &&  (1.051779473646673 + 0.01483489052136081*x - 0.002424934027530133*y - 0.007702731616860423*k >= 0)  &&  (1.036897681757495 - 0.006028239673099486*x - 0.003722134563256059*y + 0.005542743860500869*k >= 0)  &&  (5.727272727272727 - 0.1558441558441558*x + 0.1298701298701299*y + 0.1038961038961039*k >= 0)  &&  (8.906436005865302 - 0.3551382507294899*x + 0.0934568768225037*y + 0.2990610641413549*k >= 0)  &&  (1.007080288657922 - 0.003479629041286555*x - 0.005839725260593958*y - 0.003782205479659299*k >= 0)  &&  (1.071343638525565 + 0.02298850574712644*x - 0.0007927070947284977*y - 0.03250099088386841*k >= 0)  &&  (1.143091439647277 + 0.005026731133783467*x - 0.003748748642143603*y + 0.006773307205691283*k >= 0)  &&  (1.349844301432427 + 0.009798629852605356*x + 0.004982354162341706*y + 0.006726178119161303*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [30+:485-]|-->> [33m(1.011837146345347 - 0.009448484526779552*x + 0.002388661818567864*y - 0.00334412654599501*k >= 0)  &&  (1.051779473646673 + 0.01483489052136081*x - 0.002424934027530133*y - 0.007702731616860423*k >= 0)  &&  (1.036897681757495 - 0.006028239673099486*x - 0.003722134563256059*y + 0.005542743860500869*k >= 0)  &&  (5.727272727272727 - 0.1558441558441558*x + 0.1298701298701299*y + 0.1038961038961039*k >= 0)  &&  (8.906436005865302 - 0.3551382507294899*x + 0.0934568768225037*y + 0.2990610641413549*k >= 0)  &&  (1.007080288657922 - 0.003479629041286555*x - 0.005839725260593958*y - 0.003782205479659299*k >= 0)  &&  (1.071343638525565 + 0.02298850574712644*x - 0.0007927070947284977*y - 0.03250099088386841*k >= 0)  &&  (1.143091439647277 + 0.005026731133783467*x - 0.003748748642143603*y + 0.006773307205691283*k >= 0)  &&  (1.79502292075966 + 0.02008295132067234*x + 0.01920977952412137*y + 0.01004147566033617*k >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [30+:610-]|-->> [33m(1.011837146345347 - 0.009448484526779552*x + 0.002388661818567864*y - 0.00334412654599501*k >= 0)  &&  (1.051779473646673 + 0.01483489052136081*x - 0.002424934027530133*y - 0.007702731616860423*k >= 0)  &&  (1.025503355704698 - 0.007158836689038032*x - 0.01565995525727069*y + 0.001342281879194631*k >= 0)  &&  (5.727272727272727 - 0.1558441558441558*x + 0.1298701298701299*y + 0.1038961038961039*k >= 0)  &&  (8.906436005865302 - 0.3551382507294899*x + 0.0934568768225037*y + 0.2990610641413549*k >= 0)  &&  (1.79502292075966 + 0.02008295132067234*x + 0.01920977952412137*y + 0.01004147566033617*k >= 0)  &&  (1.071343638525565 + 0.02298850574712644*x - 0.0007927070947284977*y - 0.03250099088386841*k >= 0)  &&  (1.143091439647277 + 0.005026731133783467*x - 0.003748748642143603*y + 0.006773307205691283*k >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [30+:733-]|-->> [33m(1.011837146345347 - 0.009448484526779552*x + 0.002388661818567864*y - 0.00334412654599501*k >= 0)  &&  (1.204764971023825 + 0.02446877012234385*x - 0.0437862202189311*y - 0.0077269800386349*k >= 0)  &&  (1.025503355704698 - 0.007158836689038032*x - 0.01565995525727069*y + 0.001342281879194631*k >= 0)  &&  (5.727272727272727 - 0.1558441558441558*x + 0.1298701298701299*y + 0.1038961038961039*k >= 0)  &&  (8.906436005865302 - 0.3551382507294899*x + 0.0934568768225037*y + 0.2990610641413549*k >= 0)  &&  (1.79502292075966 + 0.02008295132067234*x + 0.01920977952412137*y + 0.01004147566033617*k >= 0)  &&  (1.071343638525565 + 0.02298850574712644*x - 0.0007927070947284977*y - 0.03250099088386841*k >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [30+:861-]|-->> [33m(1.011837146345347 - 0.009448484526779552*x + 0.002388661818567864*y - 0.00334412654599501*k >= 0)  &&  (1.204764971023825 + 0.02446877012234385*x - 0.0437862202189311*y - 0.0077269800386349*k >= 0)  &&  (1.025503355704698 - 0.007158836689038032*x - 0.01565995525727069*y + 0.001342281879194631*k >= 0)  &&  (5.727272727272727 - 0.1558441558441558*x + 0.1298701298701299*y + 0.1038961038961039*k >= 0)  &&  (8.906436005865302 - 0.3551382507294899*x + 0.0934568768225037*y + 0.2990610641413549*k >= 0)  &&  (1.79502292075966 + 0.02008295132067234*x + 0.01920977952412137*y + 0.01004147566033617*k >= 0)  &&  (1.071343638525565 + 0.02298850574712644*x - 0.0007927070947284977*y - 0.03250099088386841*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(233 + 5*x - 7*k >= 0)  &&  (246 + 5*x - 9*y >= 0)  &&  (65 - y >= 0)  &&  (220 - 6*x + 5*y + 4*k >= 0)  &&  (476 - 19*x + 5*y + 16*k >= 0)  &&  (1682 + 19*x + 18*y >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(233 + 5*x - 7*k >= 0)  &&  (246 + 5*x - 9*y >= 0)  &&  (65 - y >= 0)  &&  (220 - 6*x + 5*y + 4*k >= 0)  &&  (476 - 19*x + 5*y + 16*k >= 0)  &&  (1682 + 19*x + 18*y >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt[0m
[34m[1mTest Counter Example: (117,0,117) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,34,34) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (124,-2,122) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-1,34,33) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-3,35,32) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-4,35,31) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (-5,35,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[34m[1mTest Counter Example: (121,-1,120) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [55+:970-]|-->> [33m(8.756345177664976 - 0.03045685279187821*x - 0.02284263959390864*y - 0.03299492385786804*k >= 0)  &&  (0.9999357715202906 - 0.02563925430152315*x - 0.02564190837093263*y + 0.02563819267375936*k >= 0)  &&  (1.744073634569357 + 0.05721261319262774*x - 0.04715157384204406*y + 0.04320201463734764*k >= 0)  &&  (8.906153802067777 - 0.3551227476106062*x + 0.09345335463437277*y + 0.2990507348299851*k >= 0)  &&  (2.406940736785905 - 0.008542445274959953*x - 0.0185798184730379*y - 0.002989855846235984*k >= 0)  &&  (1.900698517409209 + 0.009277293233978436*x - 0.009291943684117138*y - 0.01665303515385677*k >= 0)  &&  (0.9999542627979281 + 0.999606065422963*x + 0.9995940349865435*y - 0.9996002080601869*k >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [55+:1079-]|-->> [33m(1.333930271306627 - 0.4068513014203949*x - 0.3878578112091775*y + 0.4044334312668312*k >= 0)  &&  (6.677231844765497 + 0.01872803026199077*x - 0.09826794244251165*y - 0.06526840673575274*k >= 0)  &&  (8.756345177664976 - 0.03045685279187821*x - 0.02284263959390864*y - 0.03299492385786804*k >= 0)  &&  (8.906153802067777 - 0.3551227476106062*x + 0.09345335463437277*y + 0.2990507348299851*k >= 0)  &&  (1.744073634569357 + 0.05721261319262774*x - 0.04715157384204406*y + 0.04320201463734764*k >= 0)  &&  (0.9999542627979281 + 0.999606065422963*x + 0.9995940349865435*y - 0.9996002080601869*k >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [66+:1164-]|-->> [33m(66.83728182842606 - 0.2231961252751766*x - 0.4185234451255049*y - 0.3164537257774995*k >= 0)  &&  (1.000174003249185 - 0.2221343272405198*x - 0.2221346753293569*y + 0.2221410296488875*k >= 0)  &&  (1.000090455704139 + 0.9996151278755967*x + 0.9996208645908027*y - 0.9996160270829932*k >= 0)  &&  (8.906156637037583 - 0.3551331502197747*x + 0.09345406574612136*y + 0.2990495879944928*k >= 0)  &&  (3.265475489496339 + 0.0007240151558597918*x - 0.04099154412819606*y + 0.0712467891902477*k >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [71+:1285-]|-->> [33m(1.001239133883871 - 0.02857768723675824*x - 0.02857978344045722*y + 0.02856749603764946*k >= 0)  &&  (1.514119285804736 + 0.007217930859820185*x + 0.005571736102317336*y + 0.01304292769406104*k >= 0)  &&  (1.000319752857422 - 0.3998094691343099*x - 0.3998090766698947*y + 0.3998210211183517*k >= 0)  &&  (66.83735435650851 - 0.2231963678385718*x - 0.4185239181209397*y - 0.3164540777065881*k >= 0)  &&  (1.000188625901501 + 1.999249521246441*x + 1.99925277692239*y - 1.999245067294368*k >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [74+:1394-]|-->> [33m(1.001757717504532 - 0.02858347631527863*x - 0.02858333362761926*y + 0.02856907113389162*k >= 0)  &&  (1.001140316833698 - 0.9995832367356288*x - 0.9995866605634234*y + 0.9995738337480162*k >= 0)  &&  (1.000406373086776 - 0.3998053165713558*x - 0.3997978983443122*y + 0.3998145976942755*k >= 0)  &&  (1.552619211966948 + 0.005173170195315126*x + 0.007808327522708948*y + 0.01324464121548775*k >= 0)  &&  (66.83729122555269 - 0.2231961567029863*x - 0.4185235064093216*y - 0.3164537713753184*k >= 0)  &&  (1.000506171621964 + 1.999353371978827*x + 1.999355343849317*y - 1.99935748860085*k >= 0) 
[0m[31m[6][0m[#r36,#s144] -->   [95+:1494-]|-->> [33m(1.000424180427217 - 1.999208846801196*x - 1.99920910532343*y + 1.999205369912374*k >= 0)  &&  (5.029287080881033 - 0.008634164514185833*x + 0.02830542376830111*y + 0.02031543130084904*k >= 0)  &&  (1.000338930298312 - 0.9995830858723309*x - 0.9995787941221295*y + 0.9995864938957766*k >= 0)  &&  (0.9995230844711562 + 0.02897962933819015*x + 0.02897717815188588*y - 0.02897707834619662*k >= 0)  &&  (12.81967938508047 - 0.003576723778924006*x - 0.03865074037194927*y - 0.09330589413157164*k >= 0)  &&  (66.83713147038543 - 0.2231956224167675*x - 0.4185224645582086*y - 0.3164529961929503*k >= 0)  &&  (1.000380276716896 + 1.999363263794578*x + 1.999364780020954*y - 1.999366195278895*k >= 0) 
[0m[31m[7][0m[#r42,#s168] -->   [116+:1573-]|-->> [33m(1.000338782658218 - 1.99927255649709*x - 1.99927118074055*y + 1.999269996020018*k >= 0)  &&  (28.23543395124096 - 0.08019139910956263*x + 0.1128717423816985*y + 0.04320268960371731*k >= 0)  &&  (9.956477789180575 - 0.0009957040986684901*x + 0.03353144767468594*y + 0.03366499596088499*k >= 0)  &&  (1.00033118560844 + 0.02897649643100976*x + 0.02897526765330226*y - 0.02897857412691637*k >= 0)  &&  (1.000990651450138 + 0.19994198683841*x + 0.1999355165464616*y - 0.199940970867976*k >= 0)  &&  (1.000458764167888 + 0.9996608887301477*x + 0.9996588344952286*y - 0.9996628557757816*k >= 0)  &&  (1.000384701765142 + 1.999341813866408*x + 1.999343523064567*y - 1.99934442045685*k >= 0)  &&  (1.000450661362265 - 0.9995868720472458*x - 0.9995868873637903*y + 0.9995845271660357*k >= 0)  &&  (9.823848811127263 - 0.02521240656503906*x + 0.03733538913776963*y + 0.01322537219257976*k >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 7 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*x - 2*y + 2*k >= 0)  &&  (1 + 2*x + 2*y - 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_20.inv >>> [0m(1 - 2*x - 2*y + 2*k >= 0)  &&  (1 + 2*x + 2*y - 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*x - 2*y + 2*k >= 0)  &&  (1 + 2*x + 2*y - 2*k >= 0) [0m

=====================time=========================
