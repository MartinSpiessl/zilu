[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_15
[  8%] Building CXX object CMakeFiles/dillig_15.dir/test/dillig_15.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_15.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_15.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_15.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_15.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_15.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_15.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_15.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_15.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_15.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_15.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_15.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_15
[100%] Built target dillig_15
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [2+:1238-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.017961383026493 - 0.004789702140398143*k + 0.02005687771291723*j - 0.0131716808860949*n >= 0)  &&  (1.011739264751313 + 0.01544640098856966*k + 0.01606425702811245*j - 0.02718566573988261*n >= 0)  &&  (0.9884981925731187 + 0.006134297294336729*k + 0.004053017855186768*j + 0.0074487895716946*n >= 0)  &&  (0.9943034697048162 - 0.009839461418953909*k + 0.02641118591403418*j + 0.01553599171413775*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [2+:3106-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.017961383026493 - 0.004789702140398143*k + 0.02005687771291723*j - 0.0131716808860949*n >= 0)  &&  (1.011739264751313 + 0.01544640098856966*k + 0.01606425702811245*j - 0.02718566573988261*n >= 0)  &&  (1.058324496288441 + 0.003181336161187699*k - 0.01484623541887593*j - 0.04347826086956522*n >= 0)  &&  (0.9943034697048162 - 0.009839461418953909*k + 0.02641118591403418*j + 0.01553599171413775*n >= 0)  &&  (0.9672634271099744 + 0.02148337595907928*k + 0.01994884910485933*j + 0.01278772378516624*n >= 0)  &&  (1.051012753188297 - 0.02025506376594148*k + 0.01200300075018755*j - 0.03075768942235559*n >= 0)  &&  (1.027621130164576 - 0.006675106456439176*k - 0.009667395557601566*j - 0.01795373460697433*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [2+:4667-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.017961383026493 - 0.004789702140398143*k + 0.02005687771291723*j - 0.0131716808860949*n >= 0)  &&  (1.011739264751313 + 0.01544640098856966*k + 0.01606425702811245*j - 0.02718566573988261*n >= 0)  &&  (1.058324496288441 + 0.003181336161187699*k - 0.01484623541887593*j - 0.04347826086956522*n >= 0)  &&  (0.9943034697048162 - 0.009839461418953909*k + 0.02641118591403418*j + 0.01553599171413775*n >= 0)  &&  (0.9672634271099744 + 0.02148337595907928*k + 0.01994884910485933*j + 0.01278772378516624*n >= 0)  &&  (1.051012753188297 - 0.02025506376594148*k + 0.01200300075018755*j - 0.03075768942235559*n >= 0)  &&  (1.027621130164576 - 0.006675106456439176*k - 0.009667395557601566*j - 0.01795373460697433*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(448 + 12*j + 7*n >= 0)  &&  (1138 - 22*k + 13*j - 33*n >= 0)  &&  (681 + 15*k + 14*j + 9*n >= 0)  &&  (713 - 10*j - 29*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(448 + 12*j + 7*n >= 0)  &&  (1138 - 22*k + 13*j - 33*n >= 0)  &&  (681 + 15*k + 14*j + 9*n >= 0)  &&  (713 - 10*j - 29*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (49,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (46,0,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (43,0,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (51,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (48,0,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (50,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (52,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (51,0,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [31+:6542-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.01172221280333 + 0.001588348144296228*k + 0.02148643389986385*j - 0.01331056094762617*n >= 0)  &&  (1.015971606033718 + 0.02011239278320024*k + 0.01005619639160012*j - 0.02602780242531796*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (0.9828567223411521 + 7.240405922516457e-06*k + 0.0291312633299733*j + 0.01713603725292547*n >= 0)  &&  (0.9756232686980609 + 0.02659279778393352*k + 0.03878116343490304*j - 0.00221606648199446*n >= 0)  &&  (1.007199096737054 + 0.0009834816147525111*k - 0.005223505810445461*j - 0.001975590926608903*n >= 0)  &&  (1.034215489606141 + 0.004623714811640672*k + 0.0245170094529096*j - 0.0388392044177816*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [31+:10255-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.01172221280333 + 0.001588348144296228*k + 0.02148643389986385*j - 0.01331056094762617*n >= 0)  &&  (1.015971606033718 + 0.02011239278320024*k + 0.01005619639160012*j - 0.02602780242531796*n >= 0)  &&  (1.029016684730048 + 0.00392117361216868*k - 0.02102678818937674*j - 0.007989896540671563*n >= 0)  &&  (0.9828567223411521 + 7.240405922516457e-06*k + 0.0291312633299733*j + 0.01713603725292547*n >= 0)  &&  (0.9756232686980609 + 0.02659279778393352*k + 0.03878116343490304*j - 0.00221606648199446*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (1.034215489606141 + 0.004623714811640672*k + 0.0245170094529096*j - 0.0388392044177816*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [31+:12556-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.01172221280333 + 0.001588348144296228*k + 0.02148643389986385*j - 0.01331056094762617*n >= 0)  &&  (1.015971606033718 + 0.02011239278320024*k + 0.01005619639160012*j - 0.02602780242531796*n >= 0)  &&  (0.6470588235294117 + 0.2352941176470588*k + 0.1764705882352941*j + 0.1764705882352941*n >= 0)  &&  (0.9828567223411521 + 7.240405922516457e-06*k + 0.0291312633299733*j + 0.01713603725292547*n >= 0)  &&  (0.896551724137931 + 0.2413793103448276*j + 0.103448275862069*n >= 0)  &&  (0.9743437608260427 + 1.379832056587482e-05*k + 0.1282122042669568*j + 0.02564244085339137*n >= 0)  &&  (1.034215489606141 + 0.004623714811640672*k + 0.0245170094529096*j - 0.0388392044177816*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (1.029016684730048 + 0.00392117361216868*k - 0.02102678818937674*j - 0.007989896540671563*n >= 0)  &&  (0.9942021345684856 - 1.131414580705925e-05*k + 0.06196458215809435*j + 0.005809179577321345*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [31+:14952-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.01172221280333 + 0.001588348144296228*k + 0.02148643389986385*j - 0.01331056094762617*n >= 0)  &&  (1.015971606033718 + 0.02011239278320024*k + 0.01005619639160012*j - 0.02602780242531796*n >= 0)  &&  (0.6470588235294117 + 0.2352941176470588*k + 0.1764705882352941*j + 0.1764705882352941*n >= 0)  &&  (0.9828567223411521 + 7.240405922516457e-06*k + 0.0291312633299733*j + 0.01713603725292547*n >= 0)  &&  (0.896551724137931 + 0.2413793103448276*j + 0.103448275862069*n >= 0)  &&  (0.9743437608260427 + 1.379832056587482e-05*k + 0.1282122042669568*j + 0.02564244085339137*n >= 0)  &&  (1.034215489606141 + 0.004623714811640672*k + 0.0245170094529096*j - 0.0388392044177816*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (1.029016684730048 + 0.00392117361216868*k - 0.02102678818937674*j - 0.007989896540671563*n >= 0)  &&  (0.9942021345684856 - 1.131414580705925e-05*k + 0.06196458215809435*j + 0.005809179577321345*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(49 - j >= 0)  &&  (211 + 5*j - 8*n >= 0)  &&  (354 + 7*k - 9*n >= 0)  &&  (11 + 4*k + 3*j + 3*n >= 0)  &&  (26 + 7*j + 3*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(49 - j >= 0)  &&  (211 + 5*j - 8*n >= 0)  &&  (354 + 7*k - 9*n >= 0)  &&  (11 + 4*k + 3*j + 3*n >= 0)  &&  (26 + 7*j + 3*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (27,0,27) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (28,0,28) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (29,0,27) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (28,0,27) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (30,0,29) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (29,0,28) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (29,0,29) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (31,0,30) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [264+:16238-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (0.6470588235294118 + 0.2352941176470588*k + 0.1764705882352941*j + 0.1764705882352941*n >= 0)  &&  (0.896551724137931 + 0.2413793103448276*j + 0.103448275862069*n >= 0)  &&  (0.9743646737207849 - 1.270143489223718e-05*k + 0.1282401385705363*j + 0.02564802771410726*n >= 0)  &&  (2.173090399439383 + 0.004204625087596356*k - 0.03714085494043447*j - 0.002102312543798179*n >= 0)  &&  (2.298552221201131 - 0.01264322989058333*k - 0.01264322989058331*j - 0.03022040315310159*n >= 0)  &&  (2.027827376430766 - 0.01949442478602539*k + 0.04164409244300609*j - 0.0141172875574458*n >= 0)  &&  (2.425742574257426 + 0.07524752475247523*j - 0.0475247524752475*n >= 0)  &&  (1.832633304443792 + 0.05423282059595591*k + 0.05423282059595592*j - 0.08294431385263845*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973019*k - 0.007038398373347931*j + 0.01548447642136545*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [264+:19872-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (5.11745738146152 + 0.05347006684149835*k + 0.0534749230390196*j - 0.1925009817849321*n >= 0)  &&  (5.955223880597014 - 0.02985074626865669*k + 0.1044776119402984*j - 0.1343283582089552*n >= 0)  &&  (0.6470588235294118 + 0.2352941176470588*k + 0.1764705882352941*j + 0.1764705882352941*n >= 0)  &&  (0.896551724137931 + 0.2413793103448276*j + 0.103448275862069*n >= 0)  &&  (2.298552221201131 - 0.01264322989058333*k - 0.01264322989058331*j - 0.03022040315310159*n >= 0)  &&  (2.027827376430766 - 0.01949442478602539*k + 0.04164409244300609*j - 0.0141172875574458*n >= 0)  &&  (0.9743646737207849 - 1.270143489223718e-05*k + 0.1282401385705363*j + 0.02564802771410726*n >= 0)  &&  (1.832633304443792 + 0.05423282059595591*k + 0.05423282059595592*j - 0.08294431385263845*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973019*k - 0.007038398373347931*j + 0.01548447642136545*n >= 0)  &&  (2.173090399439383 + 0.004204625087596356*k - 0.03714085494043447*j - 0.002102312543798179*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [264+:22595-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (5.11745738146152 + 0.05347006684149835*k + 0.0534749230390196*j - 0.1925009817849321*n >= 0)  &&  (5.955223880597014 - 0.02985074626865669*k + 0.1044776119402984*j - 0.1343283582089552*n >= 0)  &&  (0.6470588235294118 + 0.2352941176470588*k + 0.1764705882352941*j + 0.1764705882352941*n >= 0)  &&  (0.896551724137931 + 0.2413793103448276*j + 0.103448275862069*n >= 0)  &&  (2.298552221201131 - 0.01264322989058333*k - 0.01264322989058331*j - 0.03022040315310159*n >= 0)  &&  (2.027827376430766 - 0.01949442478602539*k + 0.04164409244300609*j - 0.0141172875574458*n >= 0)  &&  (0.9743646737207849 - 1.270143489223718e-05*k + 0.1282401385705363*j + 0.02564802771410726*n >= 0)  &&  (1.832633304443792 + 0.05423282059595591*k + 0.05423282059595592*j - 0.08294431385263845*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973019*k - 0.007038398373347931*j + 0.01548447642136545*n >= 0)  &&  (2.173090399439383 + 0.004204625087596356*k - 0.03714085494043447*j - 0.002102312543798179*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(59 - j >= 0)  &&  (479 + 5*k + 5*j - 18*n >= 0)  &&  (26 + 7*j + 3*n >= 0)  &&  (11 + 4*k + 3*j + 3*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(59 - j >= 0)  &&  (479 + 5*k + 5*j - 18*n >= 0)  &&  (26 + 7*j + 3*n >= 0)  &&  (11 + 4*k + 3*j + 3*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (37,0,37) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (38,0,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (39,0,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (39,0,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (40,0,38) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (41,0,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (40,0,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (42,0,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [579+:25080-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (1.000007860692666 + 0.1538169245674357*k + 0.1538331794278426*j - 0.1538247852601013*n >= 0)  &&  (1.000025629103218 + 0.0162396384823823*k + 0.1787769833739045*j - 0.01626526758560032*n >= 0)  &&  (0.9794964035570068 + 1.734723475976807e-18*k + 0.03075539466448958*j + 0.02050359644299305*n >= 0)  &&  (0.8260869565217392 + 0.04347826086956522*k + 0.2608695652173913*j + 0.1304347826086956*n >= 0)  &&  (3.13580620847002 - 0.01462880964705493*k - 0.01462880964705494*j - 0.03901015905881316*n >= 0)  &&  (1.597231377719183 - 0.01054713249835201*k + 0.05009887936717207*j - 0.003955174686882001*n >= 0)  &&  (0.9662914643029559 + 2.775676136324012e-06*k + 0.146058293423934*j + 0.03370576002090784*n >= 0)  &&  (2.484226339509264 + 0.00500751126690035*k - 0.04406609914872307*j + 0.006009013520280423*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [579+:27635-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (0.9999997992719283 + 0.3333306461088784*k + 0.3333308631121991*j - 0.3333304453808067*n >= 0)  &&  (0.9999934643824147 + 0.03921427663150115*k + 0.3921100882270847*j - 0.03920774101391578*n >= 0)  &&  (0.9794964035570068 + 1.734723475976807e-18*k + 0.03075539466448958*j + 0.02050359644299305*n >= 0)  &&  (0.8181818181818181 + 0.2727272727272727*k + 0.09090909090909091*j + 0.09090909090909091*n >= 0)  &&  (3.13580620847002 - 0.01462880964705493*k - 0.01462880964705494*j - 0.03901015905881316*n >= 0)  &&  (1.597231377719183 - 0.01054713249835201*k + 0.05009887936717207*j - 0.003955174686882001*n >= 0)  &&  (0.9999867411288614 + 0.02271301158614142*k - 0.01759595454369024*j + 0.01760921341482895*n >= 0)  &&  (0.8260869565217392 + 0.04347826086956522*k + 0.2608695652173913*j + 0.1304347826086956*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (2.484226339509264 + 0.00500751126690035*k - 0.04406609914872307*j + 0.006009013520280423*n >= 0)  &&  (0.9662914643029559 + 2.775676136324012e-06*k + 0.146058293423934*j + 0.03370576002090784*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [579+:31009-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (0.9999997992719283 + 0.3333306461088784*k + 0.3333308631121991*j - 0.3333304453808067*n >= 0)  &&  (0.9999934643824147 + 0.03921427663150115*k + 0.3921100882270847*j - 0.03920774101391578*n >= 0)  &&  (0.9794964035570068 + 1.734723475976807e-18*k + 0.03075539466448958*j + 0.02050359644299305*n >= 0)  &&  (0.8181818181818181 + 0.2727272727272727*k + 0.09090909090909091*j + 0.09090909090909091*n >= 0)  &&  (3.13580620847002 - 0.01462880964705493*k - 0.01462880964705494*j - 0.03901015905881316*n >= 0)  &&  (1.597231377719183 - 0.01054713249835201*k + 0.05009887936717207*j - 0.003955174686882001*n >= 0)  &&  (0.9999867411288614 + 0.02271301158614142*k - 0.01759595454369024*j + 0.01760921341482895*n >= 0)  &&  (0.8260869565217392 + 0.04347826086956522*k + 0.2608695652173913*j + 0.1304347826086956*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (2.484226339509264 + 0.00500751126690035*k - 0.04406609914872307*j + 0.006009013520280423*n >= 0)  &&  (0.9662914643029559 + 2.775676136324012e-06*k + 0.146058293423934*j + 0.03370576002090784*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [579+:34596-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (0.9999997992719283 + 0.3333306461088784*k + 0.3333308631121991*j - 0.3333304453808067*n >= 0)  &&  (0.9999934643824147 + 0.03921427663150115*k + 0.3921100882270847*j - 0.03920774101391578*n >= 0)  &&  (0.9794964035570068 + 1.734723475976807e-18*k + 0.03075539466448958*j + 0.02050359644299305*n >= 0)  &&  (0.8181818181818181 + 0.2727272727272727*k + 0.09090909090909091*j + 0.09090909090909091*n >= 0)  &&  (3.13580620847002 - 0.01462880964705493*k - 0.01462880964705494*j - 0.03901015905881316*n >= 0)  &&  (1.597231377719183 - 0.01054713249835201*k + 0.05009887936717207*j - 0.003955174686882001*n >= 0)  &&  (0.9999867411288614 + 0.02271301158614142*k - 0.01759595454369024*j + 0.01760921341482895*n >= 0)  &&  (0.8260869565217392 + 0.04347826086956522*k + 0.2608695652173913*j + 0.1304347826086956*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (2.484226339509264 + 0.00500751126690035*k - 0.04406609914872307*j + 0.006009013520280423*n >= 0)  &&  (0.9662914643029559 + 2.775676136324012e-06*k + 0.146058293423934*j + 0.03370576002090784*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [579+:36110-]|-->> [33m(0.9984801441691816 + 0.000521093427709143*k - 0.005775452157109669*j + 0.007295307987928002*n >= 0)  &&  (0.9999997992719283 + 0.3333306461088784*k + 0.3333308631121991*j - 0.3333304453808067*n >= 0)  &&  (0.9999934643824147 + 0.03921427663150115*k + 0.3921100882270847*j - 0.03920774101391578*n >= 0)  &&  (0.9794964035570068 + 1.734723475976807e-18*k + 0.03075539466448958*j + 0.02050359644299305*n >= 0)  &&  (0.8181818181818181 + 0.2727272727272727*k + 0.09090909090909091*j + 0.09090909090909091*n >= 0)  &&  (3.13580620847002 - 0.01462880964705493*k - 0.01462880964705494*j - 0.03901015905881316*n >= 0)  &&  (1.597231377719183 - 0.01054713249835201*k + 0.05009887936717207*j - 0.003955174686882001*n >= 0)  &&  (0.9999867411288614 + 0.02271301158614142*k - 0.01759595454369024*j + 0.01760921341482895*n >= 0)  &&  (0.8260869565217392 + 0.04347826086956522*k + 0.2608695652173913*j + 0.1304347826086956*n >= 0)  &&  (0.9915539219519826 + 0.004848674434973018*k - 0.00703839837334793*j + 0.01548447642136545*n >= 0)  &&  (2.484226339509264 + 0.00500751126690035*k - 0.04406609914872307*j + 0.006009013520280423*n >= 0)  &&  (0.9662914643029559 + 2.775676136324012e-06*k + 0.146058293423934*j + 0.03370576002090784*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(56 - j >= 0)  &&  (3 + k + j - n >= 0)  &&  (80 - n >= 0)  &&  (96 + 3*j + 2*n >= 0)  &&  (9 + 3*k + j + n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(56 - j >= 0)  &&  (3 + k + j - n >= 0)  &&  (80 - n >= 0)  &&  (96 + 3*j + 2*n >= 0)  &&  (9 + 3*k + j + n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (81,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (82,0,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (83,0,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (82,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (84,0,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (83,0,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (83,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (85,0,84) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1243+:37943-]|-->> [33m(3.777786784253997 - 0.01050201246404246*k - 0.01049197986295495*j - 0.02244185386679033*n >= 0)  &&  (0.9999933896442401 + 0.005740403385095496*k + 0.02745611284881732*j - 0.005733793029335625*n >= 0)  &&  (3.670010030090271 - 0.0160481444332999*k + 0.001504513540621865*j - 0.01554663991975928*n >= 0)  &&  (0.9794775704736052 + 1.574586257957131e-05*k + 0.03076002549572271*j + 0.02050668366381514*n >= 0)  &&  (0.9999938117562466 + 0.007844520509388036*k - 0.03921950842506342*j + 0.03922569666881694*n >= 0)  &&  (0.9999938351853324 + 0.2856390200407883*k + 0.2856273409604198*j - 0.2856328552261225*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1243+:39362-]|-->> [33m(3.777786784253997 - 0.01050201246404246*k - 0.01049197986295495*j - 0.02244185386679033*n >= 0)  &&  (0.9999933896442401 + 0.005740403385095496*k + 0.02745611284881732*j - 0.005733793029335625*n >= 0)  &&  (3.670010030090271 - 0.0160481444332999*k + 0.001504513540621865*j - 0.01554663991975928*n >= 0)  &&  (0.9794775704736052 + 1.574586257957131e-05*k + 0.03076002549572271*j + 0.02050668366381514*n >= 0)  &&  (0.9999938117562466 + 0.007844520509388036*k - 0.03921950842506342*j + 0.03922569666881694*n >= 0)  &&  (0.9999938351853324 + 0.2856390200407883*k + 0.2856273409604198*j - 0.2856328552261225*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(96 + 3*j + 2*n >= 0)  &&  (7 + 2*k + 2*j - 2*n >= 0)  &&  (51 - 2*j + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(96 + 3*j + 2*n >= 0)  &&  (7 + 2*k + 2*j - 2*n >= 0)  &&  (51 - 2*j + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-7,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1243+:41430-]|-->> [33m( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666665*j + 0.6666666666666665*n >= 0)  &&  (0.9999933896442401 + 0.005740403385095496*k + 0.02745611284881732*j - 0.005733793029335625*n >= 0)  &&  (3.777786784253997 - 0.01050201246404246*k - 0.01049197986295495*j - 0.02244185386679033*n >= 0)  &&  (0.9794775704736052 + 1.574586257957131e-05*k + 0.03076002549572271*j + 0.02050668366381514*n >= 0)  &&  (3.670010030090271 - 0.0160481444332999*k + 0.001504513540621865*j - 0.01554663991975928*n >= 0)  &&  (0.9999938351853324 + 0.2856390200407883*k + 0.2856273409604198*j - 0.2856328552261225*n >= 0)  &&  (0.9999938117562466 + 0.007844520509388036*k - 0.03921950842506342*j + 0.03922569666881694*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1243+:42533-]|-->> [33m(1.000011597630291 + 0.666431421465461*k + 0.6664595556191326*j - 0.6664430190957589*n >= 0)  &&  (1.000011826129544 - 1.016466996350829e-05*k + 0.4998318930188989*j - 1.661459580581948e-06*n >= 0)  &&  (1.921210195686571 - 0.01785200070558302*k + 0.04429408073648467*j + 0.007093841003745341*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666665*j + 0.6666666666666665*n >= 0)  &&  (3.777786784253997 - 0.01050201246404246*k - 0.01049197986295495*j - 0.02244185386679033*n >= 0)  &&  (3.670010030090271 - 0.0160481444332999*k + 0.001504513540621865*j - 0.01554663991975928*n >= 0)  &&  (0.9999938117562466 + 0.007844520509388036*k - 0.03921950842506342*j + 0.03922569666881694*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1243+:43566-]|-->> [33m(0.999987815556949 + 1.999390777843615*k + 1.999390432942876*j - 1.999378593400507*n >= 0)  &&  (0.9999888713990117 + 7.527972532272997e-05*k + 1.999443569951162*j - 6.415112434865478e-05*n >= 0)  &&  (5.283406754772393 + 0.03377386196769457*k - 0.04111600587371514*j - 0.01027900146842878*n >= 0)  &&  (1.921210195686571 - 0.01785200070558302*k + 0.04429408073648467*j + 0.007093841003745341*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666665*j + 0.6666666666666665*n >= 0)  &&  (3.777786784253997 - 0.01050201246404246*k - 0.01049197986295495*j - 0.02244185386679033*n >= 0)  &&  (3.670010030090271 - 0.0160481444332999*k + 0.001504513540621865*j - 0.01554663991975928*n >= 0)  &&  (0.9999938117562466 + 0.007844520509388036*k - 0.03921950842506342*j + 0.03922569666881694*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [1243+:44739-]|-->> [33m(0.999987815556949 + 1.999390777843615*k + 1.999390432942876*j - 1.999378593400507*n >= 0)  &&  (0.9999888713990117 + 7.527972532272997e-05*k + 1.999443569951162*j - 6.415112434865478e-05*n >= 0)  &&  (5.283406754772393 + 0.03377386196769457*k - 0.04111600587371514*j - 0.01027900146842878*n >= 0)  &&  (1.921210195686571 - 0.01785200070558302*k + 0.04429408073648467*j + 0.007093841003745341*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666665*j + 0.6666666666666665*n >= 0)  &&  (3.777786784253997 - 0.01050201246404246*k - 0.01049197986295495*j - 0.02244185386679033*n >= 0)  &&  (3.670010030090271 - 0.0160481444332999*k + 0.001504513540621865*j - 0.01554663991975928*n >= 0)  &&  (0.9999938117562466 + 0.007844520509388036*k - 0.03921950842506342*j + 0.03922569666881694*n >= 0) 
[0m[31m[5][0m[#r30,#s120] -->   [1243+:46123-]|-->> [33m(0.999987815556949 + 1.999390777843615*k + 1.999390432942876*j - 1.999378593400507*n >= 0)  &&  (0.9999888713990117 + 7.527972532272997e-05*k + 1.999443569951162*j - 6.415112434865478e-05*n >= 0)  &&  (5.283406754772393 + 0.03377386196769457*k - 0.04111600587371514*j - 0.01027900146842878*n >= 0)  &&  (1.921210195686571 - 0.01785200070558302*k + 0.04429408073648467*j + 0.007093841003745341*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666665*j + 0.6666666666666665*n >= 0)  &&  (3.777786784253997 - 0.01050201246404246*k - 0.01049197986295495*j - 0.02244185386679033*n >= 0)  &&  (3.670010030090271 - 0.0160481444332999*k + 0.001504513540621865*j - 0.01554663991975928*n >= 0)  &&  (0.9999938117562466 + 0.007844520509388036*k - 0.03921950842506342*j + 0.03922569666881694*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 5 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*k + 2*j - 2*n >= 0)  &&  (51 - 2*j + 2*n >= 0)  &&  ( -1 + 2*k + 2*j + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(1 + 2*k + 2*j - 2*n >= 0)  &&  (51 - 2*j + 2*n >= 0)  &&  ( -1 + 2*k + 2*j + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 