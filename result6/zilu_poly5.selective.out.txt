[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> polynomial]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target zilu_poly5
[  8%] Building CXX object CMakeFiles/zilu_poly5.dir/test/zilu_poly5.cpp.o
[ 16%] Building CXX object CMakeFiles/zilu_poly5.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/zilu_poly5.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/zilu_poly5.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/zilu_poly5.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/zilu_poly5.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/zilu_poly5.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/zilu_poly5.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/zilu_poly5.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/zilu_poly5.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/zilu_poly5.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/zilu_poly5.dir/src/instrumentation.cpp.o
Linking CXX executable zilu_poly5
[100%] Built target zilu_poly5
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[0][0m
[33m  3)---->[1] :::::: -1	5	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly5.cnt[0m
[34m[1mTest Counter Example: (-1,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly5.cnt --> [0m+
[0m[33m>>>> Polynomial Learner-----------------------
[0m[31m[1][0m[#r4,#s16] -->   [2+:20-]|-->> [33m(1.163411796459626 - 0.08371095094710926*i + 0.01754421127634029*j >= 0) [0m
[31m[2][0m[#r8,#s32] -->   [2+:39-]|-->> [33m(1.324072004329474 - 0.1641403658292143*i + 0.03366981863163371*j >= 0) [0m
[31m[3][0m[#r12,#s48] -->   [2+:58-]|-->> [33m(1.691662168080226 - 0.2900518769368688*i + 0.03569869254607622*j >= 0) [0m
[31m[4][0m[#r16,#s64] -->   [2+:78-]|-->> [33m(2.133518274633964 - 0.4437416501474041*i + 0.03954133516164982*j >= 0) [0m
[31m[5][0m[#r20,#s80] -->   [2+:98-]|-->> [33m(2.950689276595206 - 0.7609499964427122*i + 0.06643214254658858*j >= 0) [0m
[31m[6][0m[#r24,#s96] -->   [2+:118-]|-->> [33m(4.126261814757711 - 1.217438495170074*i + 0.1052107341505018*j >= 0) [0m
[31m[7][0m[#r28,#s112] -->   [2+:137-]|-->> [33m(4.524559303229182 - 1.350204310192267*i + 0.1052107254695258*j >= 0) [0m
[31m[8][0m[#r32,#s128] -->   [2+:156-]|-->> [33m(4.6718628949654 - 1.399305916992552*i + 0.1052109712024496*j >= 0) [0m
[31m[9][0m[#r36,#s144] -->   [2+:174-]|-->> [33m(7.582075244807726 - 2.437805646225083*i + 0.1462683387735062*j >= 0) [0m
[31m[10][0m[#r40,#s160] -->   [6+:190-]|-->> [33m(3.901836218088761 - 0.07062207416007177*i + 0.1385761773576981*j - 0.4754463238249733*i*i + 0.06489393527120946*i*j - 0.003089719881600672*j*j >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Polynomial): {  [32m(1263 - 23*i + 45*j - 154*i*i + 21*i*j >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly5.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/zilu_poly5.inv >>> [0m(1263 - 23*i + 45*j - 154*i*i + 21*i*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> 