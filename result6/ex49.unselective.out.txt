[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target ex49
[  8%] Building CXX object CMakeFiles/ex49.dir/test/ex49.cpp.o
[ 16%] Building CXX object CMakeFiles/ex49.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/ex49.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/ex49.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/ex49.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/ex49.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/ex49.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/ex49.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/ex49.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/ex49.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/ex49.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/ex49.dir/src/instrumentation.cpp.o
Linking CXX executable ex49
[100%] Built target ex49
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	4	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (0,4,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [5+:681-]|-->> [33m(0.9786674251582166 + 0.0106662874208917*i + 0.005333143710445851*n + 7.110858280594468e-05*sum >= 0)  &&  (1.004364429896345 + 0.007910529187124931*i - 0.001091107474086197*n + 0.01445717403164212*sum >= 0)  &&  (0.9786173583976864 - 0.003415069378211242*i + 0.006214810940528567*n + 0.00335353659662185*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.036865663185329 + 0.004268258135186689*i - 0.003172864454475061*n - 0.006874539651362632*sum >= 0)  &&  (1.039328788673309 + 0.01101206082852648*i - 0.008652333508127951*n - 0.008127949659150497*sum >= 0)  &&  (1.075789473684211 + 0.03157894736842105*i - 0.01894736842105263*n + 0.02736842105263158*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [5+:2328-]|-->> [33m(0.9786674251582166 + 0.0106662874208917*i + 0.005333143710445851*n + 7.110858280594468e-05*sum >= 0)  &&  (1.070299104591351 - 0.01600304819965708*i - 0.009716136406934653*n + 0.005524861878453038*sum >= 0)  &&  (0.9786173583976864 - 0.003415069378211242*i + 0.006214810940528567*n + 0.00335353659662185*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.036865663185329 + 0.004268258135186689*i - 0.003172864454475061*n - 0.006874539651362632*sum >= 0)  &&  (1.039328788673309 + 0.01101206082852648*i - 0.008652333508127951*n - 0.008127949659150497*sum >= 0)  &&  (1.075789473684211 + 0.03157894736842105*i - 0.01894736842105263*n + 0.02736842105263158*sum >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [5+:3713-]|-->> [33m(0.9619439444587298 + 0.01851375674980715*i + 0.009514013885317562*n - 0.008999742864489586*sum >= 0)  &&  (1.070299104591351 - 0.01600304819965708*i - 0.009716136406934653*n + 0.005524861878453038*sum >= 0)  &&  (0.9786173583976864 - 0.003415069378211242*i + 0.006214810940528567*n + 0.00335353659662185*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.036865663185329 + 0.004268258135186689*i - 0.003172864454475061*n - 0.006874539651362632*sum >= 0)  &&  (1.039328788673309 + 0.01101206082852648*i - 0.008652333508127951*n - 0.008127949659150497*sum >= 0)  &&  (1.075789473684211 + 0.03157894736842105*i - 0.01894736842105263*n + 0.02736842105263158*sum >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [5+:5299-]|-->> [33m(0.9619439444587298 + 0.01851375674980715*i + 0.009514013885317562*n - 0.008999742864489586*sum >= 0)  &&  (1.070299104591351 - 0.01600304819965708*i - 0.009716136406934653*n + 0.005524861878453038*sum >= 0)  &&  (0.9786173583976864 - 0.003415069378211242*i + 0.006214810940528567*n + 0.00335353659662185*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.036865663185329 + 0.004268258135186689*i - 0.003172864454475061*n - 0.006874539651362632*sum >= 0)  &&  (1.039328788673309 + 0.01101206082852648*i - 0.008652333508127951*n - 0.008127949659150497*sum >= 0)  &&  (1.075789473684211 + 0.03157894736842105*i - 0.01894736842105263*n + 0.02736842105263158*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(52 + i >= 0)  &&  (67 - i >= 0)  &&  (511 + 15*i - 9*n + 13*sum >= 0)  &&  (522 + 9*n + 7*sum >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(52 + i >= 0)  &&  (67 - i >= 0)  &&  (511 + 15*i - 9*n + 13*sum >= 0)  &&  (522 + 9*n + 7*sum >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (0,97,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,98,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,93,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,91,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,92,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,89,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,99,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,95,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [767+:6320-]|-->> [33m(0.9786674251582166 + 0.0106662874208917*i + 0.005333143710445851*n + 7.110858280594468e-05*sum >= 0)  &&  (0.9999979460230282 + 0.04064541883657027*i + 5.13494242970064e-07*n - 0.0008293182358564133*sum >= 0)  &&  (0.9785864182068463 - 0.003444917426390673*i + 0.006214624804886054*n + 0.003323485826455525*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [767+:6656-]|-->> [33m(0.9786674251582166 + 0.0106662874208917*i + 0.005333143710445851*n + 7.110858280594468e-05*sum >= 0)  &&  (0.9999979460230282 + 0.04064541883657027*i + 5.13494242970064e-07*n - 0.0008293182358564133*sum >= 0)  &&  (0.9785864182068463 - 0.003444917426390673*i + 0.006214624804886054*n + 0.003323485826455525*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(49 - i >= 0)  &&  (49 + 2*i >= 0)  &&  (522 + 9*n + 7*sum >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(49 - i >= 0)  &&  (49 + 2*i >= 0)  &&  (522 + 9*n + 7*sum >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (49,50,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (49,51,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (49,50,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (49,50,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (49,50,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (49,50,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (49,50,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (49,52,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [767+:7793-]|-->> [33m(0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9999979460230282 + 0.04064541883657027*i + 5.13494242970064e-07*n - 0.0008293182358564133*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [767+:8447-]|-->> [33m(0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9999979460230282 + 0.04064541883657027*i + 5.13494242970064e-07*n - 0.0008293182358564133*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(33 + 2*i + 2*n >= 0)  &&  (212 + 8*i + 7*sum >= 0)  &&  (49 - i >= 0)  &&  (56 + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(33 + 2*i + 2*n >= 0)  &&  (212 + 8*i + 7*sum >= 0)  &&  (49 - i >= 0)  &&  (56 + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (-7,-6,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-7,-21) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-22) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,0,-28) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-1,-26) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-28) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,-28) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,-5,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [767+:9338-]|-->> [33m(0.8542805100182149 + 0.02550091074681239*i + 0.03642987249544627*n + 0.07285974499089254*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9999979460230282 + 0.04064541883657027*i + 5.13494242970064e-07*n - 0.0008293182358564133*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [767+:9808-]|-->> [33m(0.8542805100182149 + 0.02550091074681239*i + 0.03642987249544627*n + 0.07285974499089254*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9999979460230282 + 0.04064541883657027*i + 5.13494242970064e-07*n - 0.0008293182358564133*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(234 + 7*i + 10*n + 20*sum >= 0)  &&  (33 + 2*i + 2*n >= 0)  &&  (49 - i >= 0)  &&  (56 + i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(234 + 7*i + 10*n + 20*sum >= 0)  &&  (33 + 2*i + 2*n >= 0)  &&  (49 - i >= 0)  &&  (56 + i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (-1,0,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-50,38,-13) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-40,33,-14) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-30,28,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-41,25,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-31,19,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [767+:10648-]|-->> [33m(0.9999870770906774 + 0.08510445021879598*i + 3.230727330681693e-06*n - 0.001736703070603196*sum >= 0)  &&  (0.7681159420289855 + 0.01449275362318841*i + 0.05797101449275363*n + 0.1594202898550725*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [767+:11982-]|-->> [33m(0.9999870770906774 + 0.08510445021879598*i + 3.230727330681693e-06*n - 0.001736703070603196*sum >= 0)  &&  (0.7681159420289855 + 0.01449275362318841*i + 0.05797101449275363*n + 0.1594202898550725*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9397891533528965 - 0.004129985871100967*i + 0.01608520812955113*n + 0.01260732529072927*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(35 + 3*i >= 0)  &&  (53 + i + 4*n + 11*sum >= 0)  &&  (49 - i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(35 + 3*i >= 0)  &&  (53 + i + 4*n + 11*sum >= 0)  &&  (49 - i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (-11,0,7) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-10,3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [767+:13127-]|-->> [33m(0.1111111111111111 + 0.08888888888888889*i + 0.2222222222222222*n + 0.1777777777777778*sum >= 0)  &&  (0.7659625890702554 + 0.1577306926943968*i + 0.05850935273243615*n - 0.004364744352457636*sum >= 0)  &&  (0.9999870770906774 + 0.08510445021879598*i + 3.230727330681693e-06*n - 0.001736703070603196*sum >= 0)  &&  (0.7681159420289855 + 0.01449275362318841*i + 0.05797101449275363*n + 0.1594202898550725*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [767+:14250-]|-->> [33m(0.1111111111111111 + 0.08888888888888889*i + 0.2222222222222222*n + 0.1777777777777778*sum >= 0)  &&  (0.7659625890702554 + 0.1577306926943968*i + 0.05850935273243615*n - 0.004364744352457636*sum >= 0)  &&  (0.9999870770906774 + 0.08510445021879598*i + 3.230727330681693e-06*n - 0.001736703070603196*sum >= 0)  &&  (0.7681159420289855 + 0.01449275362318841*i + 0.05797101449275363*n + 0.1594202898550725*sum >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.9999737241649538 + 0.03806143763024163*i + 6.568958761554722e-06*n + 0.03298657927954275*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(5 + 4*i + 10*n + 8*sum >= 0)  &&  (92 + 19*i + 7*n >= 0)  &&  (49 - i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(5 + 4*i + 10*n + 8*sum >= 0)  &&  (92 + 19*i + 7*n >= 0)  &&  (49 - i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (-1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,6,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,-1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-6,4,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,7,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-5,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [767+:15125-]|-->> [33m(0.4288380855121743 + 0.4283714358658693*i + 0.1427904786219564*n + 0.2855809572439129*sum >= 0)  &&  (1.19995909452578 - 0.1999635991016261*i + 1.126143961582837e-06*n + 0.2000154546206878*sum >= 0)  &&  (0.9999926761542068 + 0.1999829720585304*i + 1.830961448290314e-06*n + 0.1999829720585304*sum >= 0)  &&  ( -0.8823096425985983 + 0.1176443526624124*i + 0.4705774106496496*n >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.1111111111111111 + 0.08888888888888889*i + 0.2222222222222222*n + 0.1777777777777778*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0)  &&  (0.7659625890702554 + 0.1577306926943968*i + 0.05850935273243615*n - 0.004364744352457636*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9999870770906774 + 0.08510445021879598*i + 3.230727330681693e-06*n - 0.001736703070603196*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [767+:15899-]|-->> [33m(0.4288380855121743 + 0.4283714358658693*i + 0.1427904786219564*n + 0.2855809572439129*sum >= 0)  &&  (1.19995909452578 - 0.1999635991016261*i + 1.126143961582837e-06*n + 0.2000154546206878*sum >= 0)  &&  (0.9999926761542068 + 0.1999829720585304*i + 1.830961448290314e-06*n + 0.1999829720585304*sum >= 0)  &&  ( -0.8823096425985983 + 0.1176443526624124*i + 0.4705774106496496*n >= 0)  &&  (1.000017327558976 + 0.01771832873842106*i - 4.33188974411497e-06*n - 0.0003614348572655614*sum >= 0)  &&  (0.1111111111111111 + 0.08888888888888889*i + 0.2222222222222222*n + 0.1777777777777778*sum >= 0)  &&  (1.041770957509144 - 0.02126521473192796*i + 1.734723475976807e-18*n + 0.007341562228879892*sum >= 0)  &&  (0.7659625890702554 + 0.1577306926943968*i + 0.05850935273243615*n - 0.004364744352457636*sum >= 0)  &&  (0.8044265217615117 + 0.04893520315885969*i + 0.04889336955962205*n - 0.001956106260049502*sum >= 0)  &&  (0.9999870770906774 + 0.08510445021879598*i + 3.230727330681693e-06*n - 0.001736703070603196*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 3*i + n + 2*sum >= 0)  &&  (6 - i + sum >= 0)  &&  (92 + 19*i + 7*n >= 0)  &&  ( -15 + 2*i + 8*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(3 + 3*i + n + 2*sum >= 0)  &&  (6 - i + sum >= 0)  &&  (92 + 19*i + 7*n >= 0)  &&  ( -15 + 2*i + 8*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/ex49.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [770+:17264-]|-->> [33m(1 + 0.0003048315805517246*i + 0.0003048315805517246*n + 1.999390336838897*sum >= 0)  &&  (1.000649823012019 + 0.007944918647376734*i - 6.563868808268395e-06*n + 0.01452002373486093*sum >= 0)  &&  (1 - 0.003551393057497997*i + 0.006222794914907995*n + 0.003394251771767997*sum >= 0)  &&  (1 - 0.004616805170821791*i + 0.01615881809787627*n + 0.01338873499538319*sum >= 0)  &&  (1.000393930334607 + 0.01771819979164962*i - 3.979094288963231e-06*n - 0.0003614299376355455*sum >= 0)  &&  (0.9999998154382246 + 1.999999815438226*i + 2.006106255138671e-09*n >= 0)  &&  (1.041739655534701 - 0.02127018808019533*i + 1.026776284926076e-05*n + 0.007343279218162673*sum >= 0)  &&  (1 + 0.1904761904761905*i + 0.09523809523809523*n + 0.3809523809523809*sum >= 0)  &&  (0.9995383054720151 + 0.05937196593684539*i + 0.04774956118896071*n - 0.002186058439688054*sum >= 0)  &&  (0.9990317506600377 + 0.179369871443351*i + 0.002224954414438727*n - 0.003705817256355645*sum >= 0)  &&  (0.9997311684305066 + 0.08510763922458112*i + 2.715470398928499e-06*n - 0.001736774664385765*sum >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [770+:18712-]|-->> [33m(1 + 0.0003048315805517246*i + 0.0003048315805517246*n + 1.999390336838897*sum >= 0)  &&  (1.000649823012019 + 0.007944918647376734*i - 6.563868808268395e-06*n + 0.01452002373486093*sum >= 0)  &&  (1 - 0.003551393057497997*i + 0.006222794914907995*n + 0.003394251771767997*sum >= 0)  &&  (1 - 0.004616805170821791*i + 0.01615881809787627*n + 0.01338873499538319*sum >= 0)  &&  (1.000393930334607 + 0.01771819979164962*i - 3.979094288963231e-06*n - 0.0003614299376355455*sum >= 0)  &&  (0.9999998154382246 + 1.999999815438226*i + 2.006106255138671e-09*n >= 0)  &&  (1.041739655534701 - 0.02127018808019533*i + 1.026776284926076e-05*n + 0.007343279218162673*sum >= 0)  &&  (1 + 0.1904761904761905*i + 0.09523809523809523*n + 0.3809523809523809*sum >= 0)  &&  (0.9995383054720151 + 0.05937196593684539*i + 0.04774956118896071*n - 0.002186058439688054*sum >= 0)  &&  (0.9990317506600377 + 0.179369871443351*i + 0.002224954414438727*n - 0.003705817256355645*sum >= 0)  &&  (0.9997311684305066 + 0.08510763922458112*i + 2.715470398928499e-06*n - 0.001736774664385765*sum >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*sum >= 0)  &&  (1 + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/ex49.inv >>> [0m(1 + 2*sum >= 0)  &&  (1 + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 + 2*sum >= 0)  &&  (1 + 2*i >= 0) [0m

=====================time=========================
