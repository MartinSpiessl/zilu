[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target 23
[  8%] Building CXX object CMakeFiles/23.dir/test/23.cpp.o
[ 16%] Building CXX object CMakeFiles/23.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/23.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/23.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/23.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/23.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/23.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/23.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/23.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/23.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/23.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/23.dir/src/instrumentation.cpp.o
Linking CXX executable 23
[100%] Built target 23
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:1165-]|-->> [33m(1 + 0.004960955443270556*n - 0.001837390904915021*sum + 0.00799265043638034*i >= 0)  &&  (1 + 0.0004664582001623965*n + 0.002807387315792202*sum + 0.0007342397595148834*i >= 0)  &&  (1 + 0.002759360748093358*n + 0.01065419844402713*sum + 0.005672019315525237*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1 - 0.005540611073192275*n - 0.001887019713333601*sum + 0.006785241096880395*i >= 0)  &&  (1 - 0.003749531308586427*n - 0.01072365954255718*sum + 0.00457442819647544*i >= 0)  &&  (1 - 0.01546790409899459*n - 0.006805877803557617*sum + 0.01825212683681361*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:1594-]|-->> [33m(1 + 0.004960955443270556*n - 0.001837390904915021*sum + 0.00799265043638034*i >= 0)  &&  (1 - 0.00204778156996587*n + 0.0126962457337884*sum - 0.01037542662116041*i >= 0)  &&  (1 + 0.002759360748093358*n + 0.01065419844402713*sum + 0.005672019315525237*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1 - 0.01546790409899459*n - 0.006805877803557617*sum + 0.01825212683681361*i >= 0)  &&  (1 - 0.003749531308586427*n - 0.01072365954255718*sum + 0.00457442819647544*i >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:2358-]|-->> [33m(1 + 0.004960955443270556*n - 0.001837390904915021*sum + 0.00799265043638034*i >= 0)  &&  (1 - 0.00204778156996587*n + 0.0126962457337884*sum - 0.01037542662116041*i >= 0)  &&  (1 + 0.002759360748093358*n + 0.01065419844402713*sum + 0.005672019315525237*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1 - 0.01546790409899459*n - 0.006805877803557617*sum + 0.01825212683681361*i >= 0)  &&  (1 - 0.003749531308586427*n - 0.01072365954255718*sum + 0.00457442819647544*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(711 - 11*n + 13*i >= 0)  &&  (867 + 11*sum - 9*i >= 0)  &&  (2459 + 35*n + 25*sum + 34*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(711 - 11*n + 13*i >= 0)  &&  (867 + 11*sum - 9*i >= 0)  &&  (2459 + 35*n + 25*sum + 34*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (65,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (66,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (67,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (68,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (69,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (70,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (71,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[34m[1mTest Counter Example: (72,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:3123-]|-->> [33m(1 + 0.005122948761570064*n - 0.0003760533366279331*sum + 0.008227721210866941*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.002759360748093358*n + 0.01065419844402713*sum + 0.005672019315525237*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:4348-]|-->> [33m(1 + 0.005122948761570064*n - 0.0003760533366279331*sum + 0.008227721210866941*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.002759360748093358*n + 0.01065419844402713*sum + 0.005672019315525237*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [557+:4904-]|-->> [33m(1 + 0.005122948761570064*n - 0.0003760533366279331*sum + 0.008227721210866941*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.002759360748093358*n + 0.01065419844402713*sum + 0.005672019315525237*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(65 + 2*i >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (2459 + 35*n + 25*sum + 34*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(65 + 2*i >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (2459 + 35*n + 25*sum + 34*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (1,-77,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-79,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-80,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-81,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-82,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-78,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-83,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-84,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:6123-]|-->> [33m(1 + 0.005122948761570064*n - 0.0003760533366279331*sum + 0.008227721210866941*i >= 0)  &&  (1 + 9.021847235582533e-06*n + 0.02596570712787368*sum + 2.19708835613116e-06*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:6971-]|-->> [33m(1 + 0.005122948761570064*n - 0.0003760533366279331*sum + 0.008227721210866941*i >= 0)  &&  (1 + 9.021847235582533e-06*n + 0.02596570712787368*sum + 2.19708835613116e-06*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(65 + 2*i >= 0)  &&  (77 + 2*sum >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (2459 + 35*n + 25*sum + 34*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(65 + 2*i >= 0)  &&  (77 + 2*sum >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (2459 + 35*n + 25*sum + 34*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-38,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-37,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-38,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-38,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-38,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-38,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-38,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-38,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:8153-]|-->> [33m(1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1 + 0.05259515570934256*sum + 0.001384083044982699*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:8974-]|-->> [33m(1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1 + 0.05259515570934256*sum + 0.001384083044982699*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(500 + 15*n + 22*i >= 0)  &&  (19 + sum >= 0)  &&  (855 + 11*sum - 9*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(500 + 15*n + 22*i >= 0)  &&  (19 + sum >= 0)  &&  (855 + 11*sum - 9*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-19,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-18,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-19,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-19,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-19,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-17,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-19,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-19,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:10397-]|-->> [33m(1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1 + 0.05259515570934256*sum + 0.001384083044982699*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:11086-]|-->> [33m(1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1 + 0.05259515570934256*sum + 0.001384083044982699*i >= 0)  &&  (1 + 0.01413339945450037*n + 0.01016612943218448*sum + 0.01388544507810563*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(82 + 9*sum + i >= 0)  &&  (500 + 15*n + 22*i >= 0)  &&  (855 + 11*sum - 9*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(82 + 9*sum + i >= 0)  &&  (500 + 15*n + 22*i >= 0)  &&  (855 + 11*sum - 9*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-8,-8,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,-7,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-9,-8,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,-8,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-8,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-10,-7,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-9,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-9,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:12557-]|-->> [33m(1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:14398-]|-->> [33m(1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [557+:15313-]|-->> [33m(1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [557+:16286-]|-->> [33m(1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(41 + 9*sum + i >= 0)  &&  (115 + 9*n + 7*sum + 10*i >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (500 + 15*n + 22*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(41 + 9*sum + i >= 0)  &&  (115 + 9*n + 7*sum + 10*i >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (500 + 15*n + 22*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (-4,0,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-1,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,5,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-3,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,4,-11) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:17393-]|-->> [33m(1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:18411-]|-->> [33m(1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(41 + 8*n + 10*i >= 0)  &&  (41 + 9*sum + i >= 0)  &&  (115 + 9*n + 7*sum + 10*i >= 0)  &&  (855 + 11*sum - 9*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(41 + 8*n + 10*i >= 0)  &&  (41 + 9*sum + i >= 0)  &&  (115 + 9*n + 7*sum + 10*i >= 0)  &&  (855 + 11*sum - 9*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,-4,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-4,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-4,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-3,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-3,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:19474-]|-->> [33m(1 + 2.744386749103933e-19*n + 0.4705882352941176*sum + 0.1176470588235294*i >= 0)  &&  (1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:20404-]|-->> [33m(1 + 2.744386749103933e-19*n + 0.4705882352941176*sum + 0.1176470588235294*i >= 0)  &&  (1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.0782608695652174*n + 0.06086956521739131*sum + 0.08695652173913043*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 - 5.063815098765856e-07*n - 0.0008655849858412584*sum + 0.0307418624904374*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 0.0060790273556231*n + 0.1094224924012158*sum + 0.0121580547112462*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(17 + 8*sum + 2*i >= 0)  &&  (41 + 8*n + 10*i >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (115 + 9*n + 7*sum + 10*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(17 + 8*sum + 2*i >= 0)  &&  (41 + 8*n + 10*i >= 0)  &&  (855 + 11*sum - 9*i >= 0)  &&  (115 + 9*n + 7*sum + 10*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 9 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (0,1,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (5,0,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (15,2,-16) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (20,3,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (25,4,-24) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (10,1,-12) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:21771-]|-->> [33m(1 + 0.01611278952668681*n + 0.007049345417925478*sum - 0.04128902316213495*i >= 0)  &&  (1 + 0.3331922442539029*n + 0.3331922442539029*sum + 0.6663844885078058*i >= 0)  &&  (1 + 0.003077986721258941*n - 0.01407071289674493*sum + 0.4964349527270083*i >= 0)  &&  (1 + 2.744386749103933e-19*n + 0.4705882352941176*sum + 0.1176470588235294*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:22746-]|-->> [33m(1 + 0.01611278952668681*n + 0.007049345417925478*sum - 0.04128902316213495*i >= 0)  &&  (1 + 0.3331922442539029*n + 0.3331922442539029*sum + 0.6663844885078058*i >= 0)  &&  (1 + 0.003077986721258941*n - 0.01407071289674493*sum + 0.4964349527270083*i >= 0)  &&  (1 + 2.744386749103933e-19*n + 0.4705882352941176*sum + 0.1176470588235294*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(434 + 7*n - 18*i >= 0)  &&  (3 + n + sum + 2*i >= 0)  &&  (41 + 8*n + 10*i >= 0)  &&  (17 + 8*sum + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(434 + 7*n - 18*i >= 0)  &&  (3 + n + sum + 2*i >= 0)  &&  (41 + 8*n + 10*i >= 0)  &&  (17 + 8*sum + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 10 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (56,0,45) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (40,-11,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (45,-12,41) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (52,-13,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (42,-12,40) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (46,-1,42) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (66,-14,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (58,-2,46) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [557+:23782-]|-->> [33m(1 + 0.01611278952668681*n + 0.007049345417925478*sum - 0.04128902316213495*i >= 0)  &&  (1 + 0.3331922442539029*n + 0.3331922442539029*sum + 0.6663844885078058*i >= 0)  &&  (1 + 0.003077986721258941*n - 0.01407071289674493*sum + 0.4964349527270083*i >= 0)  &&  (1 + 2.744386749103933e-19*n + 0.4705882352941176*sum + 0.1176470588235294*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [557+:25145-]|-->> [33m(1 + 0.01611278952668681*n + 0.007049345417925478*sum - 0.04128902316213495*i >= 0)  &&  (1 + 0.3331922442539029*n + 0.3331922442539029*sum + 0.6663844885078058*i >= 0)  &&  (1 + 0.003077986721258941*n - 0.01407071289674493*sum + 0.4964349527270083*i >= 0)  &&  (1 + 2.744386749103933e-19*n + 0.4705882352941176*sum + 0.1176470588235294*i >= 0)  &&  (1.285031446184529 - 0.003958770085896242*n - 0.0002875432695765997*sum + 0.01020816281202713*i >= 0)  &&  (1 + 0.1951014099986651*n + 0.2438767624983314*i >= 0)  &&  (1 + 0.0001619682073880041*n + 0.01292516161039961*sum - 0.01052793348022018*i >= 0)  &&  (1 + 1.496399438688111e-06*n + 0.2195003699166309*sum + 0.02438892999073676*i >= 0)  &&  (1 + 0.03002053402182231*n - 0.002096587223860302*sum + 0.04442141797325255*i >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(434 + 7*n - 18*i >= 0)  &&  (3 + n + sum + 2*i >= 0)  &&  (41 + 8*n + 10*i >= 0)  &&  (17 + 8*sum + 2*i >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/23.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/23.inv >>> [0m(434 + 7*n - 18*i >= 0)  &&  (3 + n + sum + 2*i >= 0)  &&  (41 + 8*n + 10*i >= 0)  &&  (17 + 8*sum + 2*i >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 11 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt[0m
[34m[1mTest Counter Example: (56,0,45) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (40,-11,39) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (45,-12,41) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (52,-13,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (42,-12,40) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (46,-1,42) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (66,-14,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
[0m[34m[1mTest Counter Example: (58,-2,46) @/home/lijiaying/Research/GitHub/ZILU/tmp/23.cnt --> [0m?
