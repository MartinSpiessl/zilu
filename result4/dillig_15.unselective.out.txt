[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_15
[  8%] Building CXX object CMakeFiles/dillig_15.dir/test/dillig_15.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_15.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_15.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_15.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_15.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_15.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_15.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_15.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_15.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_15.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_15.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_15.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_15
[100%] Built target dillig_15
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 1	0	1	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1630-]|-->> [33m(0.9941724587974626 + 0.01013749355024737*k + 0.003824323914165175*j + 0.002003217288372234*n >= 0)  &&  (1.010281539168289 - 0.004768884124866012*k + 0.005862664887449959*j - 0.005512655043423097*n >= 0)  &&  (0.9942577267353487 - 0.002533355852052019*k + 0.01621347745313292*j + 0.00827562911670326*n >= 0)  &&  (1.009238721976793 + 0.005535900867046726*k - 0.004619360988396605*j - 0.004619360988396605*n >= 0)  &&  (1.032356799300393 - 0.003060778312199388*k + 0.002623524267599476*j - 0.02929602098819415*n >= 0)  &&  (1.003553008595989 + 0.006303724928366762*k - 0.01134670487106017*j + 0.007793696275071633*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:3604-]|-->> [33m(1.065573770491803 + 0.04918032786885246*k + 0.1311475409836066*j - 0.1147540983606557*n >= 0)  &&  (1.010281539168289 - 0.004768884124866012*k + 0.005862664887449959*j - 0.005512655043423097*n >= 0)  &&  (0.9598393574297189 + 0.1124497991967871*k + 0.05622489959839357*j - 0.01606425702811245*n >= 0)  &&  (0.9940652818991098 + 0.01780415430267062*k + 0.1068249258160237*j - 0.01186943620178042*n >= 0)  &&  (1.032356799300393 - 0.003060778312199388*k + 0.002623524267599476*j - 0.02929602098819415*n >= 0)  &&  (1.003553008595989 + 0.006303724928366762*k - 0.01134670487106017*j + 0.007793696275071633*n >= 0)  &&  (0.9942577267353487 - 0.002533355852052019*k + 0.01621347745313292*j + 0.00827562911670326*n >= 0)  &&  (1.01670696856452 - 0.01582765442954496*k + 0.02506045284677951*j - 0.0008793141349747195*n >= 0)  &&  (1.022628372497824 - 0.01914708442123586*k + 0.0557006092254134*j - 0.003481288076588338*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:5086-]|-->> [33m(0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.065573770491803 + 0.04918032786885246*k + 0.1311475409836066*j - 0.1147540983606557*n >= 0)  &&  (0.9598393574297189 + 0.1124497991967871*k + 0.05622489959839357*j - 0.01606425702811245*n >= 0)  &&  (0.9940652818991098 + 0.01780415430267062*k + 0.1068249258160237*j - 0.01186943620178042*n >= 0)  &&  (1.032356799300393 - 0.003060778312199388*k + 0.002623524267599476*j - 0.02929602098819415*n >= 0)  &&  (1.003553008595989 + 0.006303724928366762*k - 0.01134670487106017*j + 0.007793696275071633*n >= 0)  &&  (1.022628372497824 - 0.01914708442123586*k + 0.0557006092254134*j - 0.003481288076588338*n >= 0)  &&  (1.01670696856452 - 0.01582765442954496*k + 0.02506045284677951*j - 0.0008793141349747195*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:7030-]|-->> [33m(0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.065573770491803 + 0.04918032786885246*k + 0.1311475409836066*j - 0.1147540983606557*n >= 0)  &&  (0.9598393574297189 + 0.1124497991967871*k + 0.05622489959839357*j - 0.01606425702811245*n >= 0)  &&  (0.9940652818991098 + 0.01780415430267062*k + 0.1068249258160237*j - 0.01186943620178042*n >= 0)  &&  (1.032356799300393 - 0.003060778312199388*k + 0.002623524267599476*j - 0.02929602098819415*n >= 0)  &&  (1.003553008595989 + 0.006303724928366762*k - 0.01134670487106017*j + 0.007793696275071633*n >= 0)  &&  (1.022628372497824 - 0.01914708442123586*k + 0.0557006092254134*j - 0.003481288076588338*n >= 0)  &&  (1.01670696856452 - 0.01582765442954496*k + 0.02506045284677951*j - 0.0008793141349747195*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(450 - 7*j + 11*n >= 0)  &&  (65 + 3*k + 8*j - 7*n >= 0)  &&  (120 + 14*k + 7*j - 2*n >= 0)  &&  (35 - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(450 - 7*j + 11*n >= 0)  &&  (65 + 3*k + 8*j - 7*n >= 0)  &&  (120 + 14*k + 7*j - 2*n >= 0)  &&  (35 - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (17,0,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (20,0,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (18,0,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (21,0,21) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (19,0,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (20,0,20) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (19,0,19) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (20,0,19) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [160+:9180-]|-->> [33m(0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.220677390671732 - 0.004796163069544365*k + 0.007221189340662302*j - 0.00571228410530003*n >= 0)  &&  (1.000028515128133 + 0.111029066687799*k + 0.1112419323082465*j - 0.1110575818159323*n >= 0)  &&  (1.278718931618647 + 0.008243683277688471*k - 0.00453402580272866*j - 0.008738304274349781*n >= 0)  &&  (1.708487084870849 - 0.008961518186610434*k + 0.01897733263046916*j - 0.02477596204533474*n >= 0)  &&  (1.658985809561934 + 0.007957001432256791*k + 0.007945302471641078*j - 0.03933727807806316*n >= 0)  &&  (1.000025495802588 + 0.006480937259689052*k - 0.009851989013731214*j + 0.009826493211142817*n >= 0)  &&  (0.9870550161812298 + 0.1100323624595469*k + 0.02588996763754045*j - 0.01294498381877023*n >= 0)  &&  (1.03720435822482 - 0.009035344140313579*k + 0.03029497741163965*j + 0.007972362476747276*n >= 0)  &&  (0.9991779590583335 - 0.006987348004164787*k + 0.06274289763098061*j + 0.007809388945831237*n >= 0)  &&  (0.9789473684210526 + 0.03508771929824561*k + 0.112280701754386*j - 0.01403508771929824*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [160+:12075-]|-->> [33m(0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.220677390671732 - 0.004796163069544365*k + 0.007221189340662302*j - 0.00571228410530003*n >= 0)  &&  (1.000028515128133 + 0.111029066687799*k + 0.1112419323082465*j - 0.1110575818159323*n >= 0)  &&  (1.278718931618647 + 0.008243683277688471*k - 0.00453402580272866*j - 0.008738304274349781*n >= 0)  &&  (1.708487084870849 - 0.008961518186610434*k + 0.01897733263046916*j - 0.02477596204533474*n >= 0)  &&  (1.658985809561934 + 0.007957001432256791*k + 0.007945302471641078*j - 0.03933727807806316*n >= 0)  &&  (1.000025495802588 + 0.006480937259689052*k - 0.009851989013731214*j + 0.009826493211142817*n >= 0)  &&  (0.9870550161812298 + 0.1100323624595469*k + 0.02588996763754045*j - 0.01294498381877023*n >= 0)  &&  (1.03720435822482 - 0.009035344140313579*k + 0.03029497741163965*j + 0.007972362476747276*n >= 0)  &&  (0.9991779590583335 - 0.006987348004164787*k + 0.06274289763098061*j + 0.007809388945831237*n >= 0)  &&  (0.9789473684210526 + 0.03508771929824561*k + 0.112280701754386*j - 0.01403508771929824*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [160+:13202-]|-->> [33m(0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.220677390671732 - 0.004796163069544365*k + 0.007221189340662302*j - 0.00571228410530003*n >= 0)  &&  (1.000028515128133 + 0.111029066687799*k + 0.1112419323082465*j - 0.1110575818159323*n >= 0)  &&  (1.278718931618647 + 0.008243683277688471*k - 0.00453402580272866*j - 0.008738304274349781*n >= 0)  &&  (1.708487084870849 - 0.008961518186610434*k + 0.01897733263046916*j - 0.02477596204533474*n >= 0)  &&  (1.658985809561934 + 0.007957001432256791*k + 0.007945302471641078*j - 0.03933727807806316*n >= 0)  &&  (1.000025495802588 + 0.006480937259689052*k - 0.009851989013731214*j + 0.009826493211142817*n >= 0)  &&  (0.9870550161812298 + 0.1100323624595469*k + 0.02588996763754045*j - 0.01294498381877023*n >= 0)  &&  (1.03720435822482 - 0.009035344140313579*k + 0.03029497741163965*j + 0.007972362476747276*n >= 0)  &&  (0.9991779590583335 - 0.006987348004164787*k + 0.06274289763098061*j + 0.007809388945831237*n >= 0)  &&  (0.9789473684210526 + 0.03508771929824561*k + 0.112280701754386*j - 0.01403508771929824*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(450 - 7*j + 11*n >= 0)  &&  (34 + j >= 0)  &&  (9 + k + j - n >= 0)  &&  (152 + 17*k + 4*j - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(450 - 7*j + 11*n >= 0)  &&  (34 + j >= 0)  &&  (9 + k + j - n >= 0)  &&  (152 + 17*k + 4*j - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty III (invariant && ~loopcondition ==> postcondition) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-8,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-18,-17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-19,-18) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-19,-16) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-20,-19) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-21,-20) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-18,-15) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-20,-17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [160+:15421-]|-->> [33m(0.9130434782608695 + 0.2318840579710145*k + 0.05797101449275362*j + 0.02898550724637681*n >= 0)  &&  (1.220677390671732 - 0.004796163069544365*k + 0.007221189340662302*j - 0.00571228410530003*n >= 0)  &&  (0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.278718931618647 + 0.008243683277688471*k - 0.00453402580272866*j - 0.008738304274349781*n >= 0)  &&  (1.708487084870849 - 0.008961518186610434*k + 0.01897733263046916*j - 0.02477596204533474*n >= 0)  &&  (1.658985809561934 + 0.007957001432256791*k + 0.007945302471641078*j - 0.03933727807806316*n >= 0)  &&  (1.000025495802588 + 0.006480937259689052*k - 0.009851989013731214*j + 0.009826493211142817*n >= 0)  &&  (1.000028515128133 + 0.111029066687799*k + 0.1112419323082465*j - 0.1110575818159323*n >= 0)  &&  (1.03720435822482 - 0.009035344140313579*k + 0.03029497741163965*j + 0.007972362476747276*n >= 0)  &&  (0.9991779590583335 - 0.006987348004164787*k + 0.06274289763098061*j + 0.007809388945831237*n >= 0)  &&  (0.9789473684210526 + 0.03508771929824561*k + 0.112280701754386*j - 0.01403508771929824*n >= 0)  &&  (0.9870550161812298 + 0.1100323624595469*k + 0.02588996763754045*j - 0.01294498381877023*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [160+:17089-]|-->> [33m(0.9130434782608695 + 0.2318840579710145*k + 0.05797101449275362*j + 0.02898550724637681*n >= 0)  &&  (1.220677390671732 - 0.004796163069544365*k + 0.007221189340662302*j - 0.00571228410530003*n >= 0)  &&  (0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.278718931618647 + 0.008243683277688471*k - 0.00453402580272866*j - 0.008738304274349781*n >= 0)  &&  (1.708487084870849 - 0.008961518186610434*k + 0.01897733263046916*j - 0.02477596204533474*n >= 0)  &&  (1.658985809561934 + 0.007957001432256791*k + 0.007945302471641078*j - 0.03933727807806316*n >= 0)  &&  (1.000025495802588 + 0.006480937259689052*k - 0.009851989013731214*j + 0.009826493211142817*n >= 0)  &&  (1.000028515128133 + 0.111029066687799*k + 0.1112419323082465*j - 0.1110575818159323*n >= 0)  &&  (1.03720435822482 - 0.009035344140313579*k + 0.03029497741163965*j + 0.007972362476747276*n >= 0)  &&  (0.9991779590583335 - 0.006987348004164787*k + 0.06274289763098061*j + 0.007809388945831237*n >= 0)  &&  (0.9789473684210526 + 0.03508771929824561*k + 0.112280701754386*j - 0.01403508771929824*n >= 0)  &&  (0.9870550161812298 + 0.1100323624595469*k + 0.02588996763754045*j - 0.01294498381877023*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(63 + 16*k + 4*j + 2*n >= 0)  &&  (34 + j >= 0)  &&  (450 - 7*j + 11*n >= 0)  &&  (9 + k + j - n >= 0)  &&  (42 - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(63 + 16*k + 4*j + 2*n >= 0)  &&  (34 + j >= 0)  &&  (450 - 7*j + 11*n >= 0)  &&  (9 + k + j - n >= 0)  &&  (42 - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (43,0,43) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (44,0,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (45,0,45) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (44,0,43) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (45,0,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (46,0,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (47,0,44) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (45,0,43) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [518+:18927-]|-->> [33m(0.9130434782608695 + 0.2318840579710145*k + 0.05797101449275362*j + 0.02898550724637681*n >= 0)  &&  (1.459012979801485 - 0.00437287429721663*k + 0.009301034219476643*j - 0.005761088359825086*n >= 0)  &&  (0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (1.000010265888611 + 0.111103903971749*k + 0.1111140952994915*j - 0.1111141698603599*n >= 0)  &&  (2.215797767946025 + 8.60143666506219e-06*k - 8.60143666506219e-06*j - 0.02702632961324339*n >= 0)  &&  (1.107245978275815 + 0.01035794491039919*k - 0.007241395114349879*j + 0.004858151152665109*n >= 0)  &&  (1.816326530612248 - 0.006046863189720468*k + 0.02872260015117159*j - 0.0120937263794406*n >= 0)  &&  (0.9999837343640862 + 0.09885253126515454*k + 0.00742207266284348*j - 0.007405807026929702*n >= 0)  &&  (0.969811320754717 + 0.04528301886792453*k + 0.1132075471698113*j - 0.01509433962264151*n >= 0)  &&  (0.9992953969843703 - 0.005989125632852553*k + 0.06776411655418346*j + 0.006693728648482158*n >= 0)  &&  (1.005993407252023 - 0.008390770152831883*k + 0.03236439916092298*j + 0.00899011087803416*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [518+:21009-]|-->> [33m(8.92951541850222 + 0.02643171806167406*k - 0.06167400881057278*j - 0.1145374449339209*n >= 0)  &&  (1.459012979801485 - 0.00437287429721663*k + 0.009301034219476643*j - 0.005761088359825086*n >= 0)  &&  (0.9130434782608695 + 0.2318840579710145*k + 0.05797101449275362*j + 0.02898550724637681*n >= 0)  &&  (0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (2.215797767946025 + 8.60143666506219e-06*k - 8.60143666506219e-06*j - 0.02702632961324339*n >= 0)  &&  (1.000010265888611 + 0.111103903971749*k + 0.1111140952994915*j - 0.1111141698603599*n >= 0)  &&  (1.816326530612248 - 0.006046863189720468*k + 0.02872260015117159*j - 0.0120937263794406*n >= 0)  &&  (0.9999837343640862 + 0.09885253126515454*k + 0.00742207266284348*j - 0.007405807026929702*n >= 0)  &&  (0.969811320754717 + 0.04528301886792453*k + 0.1132075471698113*j - 0.01509433962264151*n >= 0)  &&  (0.9992953969843703 - 0.005989125632852553*k + 0.06776411655418346*j + 0.006693728648482158*n >= 0)  &&  (1.005993407252023 - 0.008390770152831883*k + 0.03236439916092298*j + 0.00899011087803416*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [518+:22556-]|-->> [33m(8.92951541850222 + 0.02643171806167406*k - 0.06167400881057278*j - 0.1145374449339209*n >= 0)  &&  (1.459012979801485 - 0.00437287429721663*k + 0.009301034219476643*j - 0.005761088359825086*n >= 0)  &&  (0.9130434782608695 + 0.2318840579710145*k + 0.05797101449275362*j + 0.02898550724637681*n >= 0)  &&  (0.9912445278298937 + 0.003335417969564311*k - 0.01542630810923494*j + 0.02418178027934126*n >= 0)  &&  (2.215797767946025 + 8.60143666506219e-06*k - 8.60143666506219e-06*j - 0.02702632961324339*n >= 0)  &&  (1.000010265888611 + 0.111103903971749*k + 0.1111140952994915*j - 0.1111141698603599*n >= 0)  &&  (1.816326530612248 - 0.006046863189720468*k + 0.02872260015117159*j - 0.0120937263794406*n >= 0)  &&  (0.9999837343640862 + 0.09885253126515454*k + 0.00742207266284348*j - 0.007405807026929702*n >= 0)  &&  (0.969811320754717 + 0.04528301886792453*k + 0.1132075471698113*j - 0.01509433962264151*n >= 0)  &&  (0.9992953969843703 - 0.005989125632852553*k + 0.06776411655418346*j + 0.006693728648482158*n >= 0)  &&  (1.005993407252023 - 0.008390770152831883*k + 0.03236439916092298*j + 0.00899011087803416*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(78 - n >= 0)  &&  (63 + j >= 0)  &&  (63 + 16*k + 4*j + 2*n >= 0)  &&  (450 - 7*j + 11*n >= 0)  &&  (9 + k + j - n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(78 - n >= 0)  &&  (63 + j >= 0)  &&  (63 + 16*k + 4*j + 2*n >= 0)  &&  (450 - 7*j + 11*n >= 0)  &&  (9 + k + j - n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (79,0,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (80,0,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (81,0,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (80,0,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (82,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (81,0,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (81,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[34m[1mTest Counter Example: (83,0,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1167+:24752-]|-->> [33m(1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1 + 0.01051931830164056*k - 0.006144026618657316*j + 0.006144026618657318*n >= 0)  &&  (1.000001573309426 + 0.1278617765619155*k + 0.1004620377867919*j - 0.1004636110962182*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0)  &&  (0.9493670886075949 + 0.06751054852320675*k + 0.109704641350211*j - 0.01687763713080168*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1167+:26563-]|-->> [33m(1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1 + 0.01051931830164056*k - 0.006144026618657316*j + 0.006144026618657318*n >= 0)  &&  (1.000001573309426 + 0.1278617765619155*k + 0.1004620377867919*j - 0.1004636110962182*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0)  &&  (0.9493670886075949 + 0.06751054852320675*k + 0.109704641350211*j - 0.01687763713080168*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(9 + 2*k + 2*j - 2*n >= 0)  &&  (734 + 14*k - 11*j + 15*n >= 0)  &&  (27 + 4*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(9 + 2*k + 2*j - 2*n >= 0)  &&  (734 + 14*k - 11*j + 15*n >= 0)  &&  (27 + 4*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-1,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,-2,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,-3,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,-5,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-7,-6,-9) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-8,1,-10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1167+:29145-]|-->> [33m( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666666*j + 0.6666666666666666*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  (1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1 + 0.01051931830164056*k - 0.006144026618657316*j + 0.006144026618657318*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (1.000001573309426 + 0.1278617765619155*k + 0.1004620377867919*j - 0.1004636110962182*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1167+:32104-]|-->> [33m( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666666*j + 0.6666666666666666*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  (1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1 + 0.01051931830164056*k - 0.006144026618657316*j + 0.006144026618657318*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (1.000001573309426 + 0.1278617765619155*k + 0.1004620377867919*j - 0.1004636110962182*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m( -1 + 2*k + 2*j + 2*n >= 0)  &&  (734 + 14*k - 11*j + 15*n >= 0)  &&  (9 + 2*k + 2*j - 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m( -1 + 2*k + 2*j + 2*n >= 0)  &&  (734 + 14*k - 11*j + 15*n >= 0)  &&  (9 + 2*k + 2*j - 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 7 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,2,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,4,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-3,2,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-4,7,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-5,9,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,6,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,8,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-6,13,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1167+:34458-]|-->> [33m(1 + 0.6664635384927889*k - 0.6664635384927889*j + 0.6664635384927889*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666666*j + 0.6666666666666666*n >= 0)  &&  (1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1167+:37230-]|-->> [33m(1 + 0.6664635384927889*k - 0.6664635384927889*j + 0.6664635384927889*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666666*j + 0.6666666666666666*n >= 0)  &&  (1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 2*k - 2*j + 2*n >= 0)  &&  (9 + 2*k + 2*j - 2*n >= 0)  &&  ( -1 + 2*k + 2*j + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(3 + 2*k - 2*j + 2*n >= 0)  &&  (9 + 2*k + 2*j - 2*n >= 0)  &&  ( -1 + 2*k + 2*j + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00004.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 8 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt[0m
[34m[1mTest Counter Example: (-1,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,1,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,2,3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,3,4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,4,5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,5,6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1167+:38518-]|-->> [33m(1.000004892530762 + 1.33359263746374*k + 0.6667938724664888*j - 0.6667987649972509*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  (1 + 0.6664635384927889*k - 0.6664635384927889*j + 0.6664635384927889*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666666*j + 0.6666666666666666*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1167+:40394-]|-->> [33m(1.000004892530762 + 1.33359263746374*k + 0.6667938724664888*j - 0.6667987649972509*n >= 0)  &&  (1.572766779333655 - 0.002607436021245775*k + 0.01294060840173829*j - 0.004345726702076292*n >= 0)  &&  (1 + 0.6664635384927889*k - 0.6664635384927889*j + 0.6664635384927889*n >= 0)  &&  ( -0.3333333333333333 + 0.6666666666666667*k + 0.6666666666666666*j + 0.6666666666666666*n >= 0)  &&  (3.062211013030684 + 0.005884825556956699*k + 0.02606137032366539*j - 0.03110550651534257*n >= 0)  &&  (2.446392656249561 + 0.01785508356303801*k + 0.01785781318981356*j - 0.03571178302290914*n >= 0)  &&  (1.000002855779972 + 0.2221451941167167*k + 0.2221541851928381*j - 0.2221570409728102*n >= 0)  &&  (1.00001232533328 + 0.07404257600013642*k + 0.2961949546671057*j - 0.07405490133341663*n >= 0)  &&  (1.036070743995509 - 0.008472993555994068*k + 0.1529239472528796*j + 0.008230908025823047*n >= 0)  &&  (0.9945341614906832 + 0.01888198757763975*k - 0.01490683229813665*j + 0.02037267080745342*n >= 0)  &&  (5.945447497670926 + 0.07630671032260883*k + 0.07631730934546116*j - 0.1373616177012624*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(3 + 4*k + 2*j - 2*n >= 0)  &&  (9 + 2*k + 2*j - 2*n >= 0)  &&  (3 + 2*k - 2*j + 2*n >= 0)  &&  ( -1 + 2*k + 2*j + 2*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_15.inv >>> [0m(3 + 4*k + 2*j - 2*n >= 0)  &&  (9 + 2*k + 2*j - 2*n >= 0)  &&  (3 + 2*k - 2*j + 2*n >= 0)  &&  ( -1 + 2*k + 2*j + 2*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
