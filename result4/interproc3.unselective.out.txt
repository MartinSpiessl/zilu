[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target interproc3
[  8%] Building CXX object CMakeFiles/interproc3.dir/test/interproc3.cpp.o
[ 16%] Building CXX object CMakeFiles/interproc3.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/interproc3.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/interproc3.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/interproc3.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/interproc3.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/interproc3.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/interproc3.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/interproc3.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/interproc3.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/interproc3.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/interproc3.dir/src/instrumentation.cpp.o
Linking CXX executable interproc3
[100%] Built target interproc3
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt[0m
[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [1873+:445-]|-->> [33m(0.9991210315409644 - 0.02079074915718972*i + 0.0008789684590354632*j + 0.03494276589771037*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [3973+:676-]|-->> [33m(0.8011175451000379 - 0.3625333174826212*i + 0.198882454899962*j + 0.3625457298676646*k >= 0) [0m
[31m[3Pure Random][0m[#r90,#s0] -->  [5502+:849-]|-->> [33m( -0.3144518218414909 - 1.37671016493145*i + 1.314451821841491*j + 1.37671176263675*k >= 0) [0m
[31m[4Pure Random][0m[#r120,#s0] -->  [6963+:1164-]|-->> [33m( -0.5635866885145262 - 1.603169922529197*i + 1.563586688514526*j + 1.60321886746416*k >= 0) [0m
[31m[5Pure Random][0m[#r150,#s0] -->  [8980+:1334-]|-->> [33m( -0.5635698235077271 - 1.603154501533773*i + 1.563569823507727*j + 1.603204418575511*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -12 - 34*i + 33*j + 34*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.inv >>> [0m( -12 - 34*i + 33*j + 34*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt[0m
[34m[1mTest Counter Example: (22,23,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[34m[1mTest Counter Example: (21,24,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[34m[1mTest Counter Example: (19,23,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[34m[1mTest Counter Example: (18,23,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[34m[1mTest Counter Example: (17,23,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[34m[1mTest Counter Example: (16,23,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[34m[1mTest Counter Example: (15,23,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[34m[1mTest Counter Example: (14,23,-8) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->  [10661+:1352-]|-->> [33m( -0.9994597407079837 - 1.999418882394306*i + 1.999459740707984*j + 1.999468841921901*k >= 0) [0m
[31m[2Pure Random][0m[#r60,#s0] -->  [12157+:1428-]|-->> [33m( -0.999456487497504 - 1.999415333098952*i + 1.999456487497504*j + 1.9994649928191*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -1 - 2*i + 2*j + 2*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.inv >>> [0m( -1 - 2*i + 2*j + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -1 - 2*i + 2*j + 2*k >= 0) [0m

=====================time=========================
