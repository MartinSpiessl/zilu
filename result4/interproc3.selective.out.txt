[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> linear]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target interproc3
[  8%] Building CXX object CMakeFiles/interproc3.dir/test/interproc3.cpp.o
[ 16%] Building CXX object CMakeFiles/interproc3.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/interproc3.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/interproc3.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/interproc3.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/interproc3.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/interproc3.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/interproc3.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/interproc3.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/interproc3.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/interproc3.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/interproc3.dir/src/instrumentation.cpp.o
Linking CXX executable interproc3
[100%] Built target interproc3
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt[0m
[34m[1mTest Counter Example: (0,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.cnt --> [0m+
[0m[33m>>>> Linear Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->  [1807+:75-]|-->> [33m(2.010949843589189 - 0.02889620580033932*i + 0.02205933673175422*j + 0.02889620580033934*k >= 0) [0m
[31m[2][0m[#r12,#s48] -->  [1927+:1141-]|-->> [33m(3.101477101905942 - 0.05938521809959374*i + 0.04519599233410188*j + 0.05938884235631002*k >= 0) [0m
[31m[3][0m[#r18,#s72] -->  [2355+:2112-]|-->> [33m(4.268657329567539 - 0.1411207024631708*i + 0.1176043647166689*j + 0.1411207004351775*k >= 0) [0m
[31m[4][0m[#r24,#s96] -->  [3152+:2522-]|-->> [33m(6.458684550298699 - 0.296579408693961*i + 0.2652246189274663*j + 0.2967023896114815*k >= 0) [0m
[31m[5][0m[#r30,#s120] -->  [3775+:3391-]|-->> [33m(2.733987813009094 - 0.3191427390754349*i + 0.3068510769326771*j + 0.3191369049477985*k >= 0) [0m
[31m[6][0m[#r36,#s144] -->  [4458+:4986-]|-->> [33m(1.706602042220766 - 0.9593040086229898*i + 0.9457018839626237*j + 0.9593040086231441*k >= 0) [0m
[31m[7][0m[#r42,#s168] -->  [5210+:5849-]|-->> [33m( -1.000313540599969 - 2.000310591817417*i + 2.000313540599969*j + 2.000315164877227*k >= 0) [0m
[31m[8][0m[#r48,#s192] -->  [6328+:6786-]|-->> [33m( -0.9990085845631371 - 1.999008446075736*i + 1.999008445712544*j + 1.999008443750338*k >= 0) [0m
--------------------------------------------------
[33m  Invariant Candidate(Linear): {  [32m( -1 - 2*i + 2*j + 2*k >= 0) [33m  }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/interproc3.inv >>> [0m( -1 - 2*i + 2*j + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m( -1 - 2*i + 2*j + 2*k >= 0) [0m

=====================time=========================
