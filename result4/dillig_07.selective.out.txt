[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target dillig_07
[  8%] Building CXX object CMakeFiles/dillig_07.dir/test/dillig_07.cpp.o
[ 16%] Building CXX object CMakeFiles/dillig_07.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/dillig_07.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/dillig_07.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/dillig_07.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/dillig_07.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/dillig_07.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/dillig_07.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/dillig_07.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/dillig_07.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/dillig_07.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/dillig_07.dir/src/instrumentation.cpp.o
Linking CXX executable dillig_07
[100%] Built target dillig_07
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [1+:1298-]|-->> [33m(1 - 0.003396235440434335*i - 0.004831264499772787*j - 0.007796991222405588*n >= 0)  &&  (1 - 0.005180548274692404*i - 0.007277436862067901*j + 0.006599031730858182*n >= 0)  &&  (1 + 0.01210987496307965*i - 0.007088707295461258*j + 9.845426799251748e-05*n >= 0)  &&  (1 + 0.006365457378143779*i + 0.004673937235699978*j + 0.005163587803249499*n >= 0)  &&  (1 - 0.003397989522865638*i + 0.00481381849072632*j + 0.006795979045731275*n >= 0)  &&  (1 - 0.002120291186656301*i - 0.01667962400169623*j >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [1+:1872-]|-->> [33m(1 - 0.003396235440434335*i - 0.004831264499772787*j - 0.007796991222405588*n >= 0)  &&  (1 + 0.3157894736842105*i - 0.3157894736842105*j - 0.1052631578947368*n >= 0)  &&  (1 + 0.2745098039215687*i + 0.0392156862745098*j - 0.0392156862745098*n >= 0)  &&  (1 + 0.1187214611872146*i + 0.0639269406392694*j - 0.0091324200913242*n >= 0)  &&  (1 - 0.003397989522865638*i + 0.00481381849072632*j + 0.006795979045731275*n >= 0)  &&  (1 - 0.002120291186656301*i - 0.01667962400169623*j >= 0)  &&  (1 - 0.01316734498443859*i - 0.01149150107732822*j + 0.01316734498443859*n >= 0)  &&  (1 + 0.05065856129685917*i + 0.03850050658561297*j - 0.002026342451874367*n >= 0)  &&  (1 + 0.03993855606758832*i - 0.03840245775729647*j - 0.001536098310291859*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [1+:4137-]|-->> [33m(1 - 0.003396235440434335*i - 0.004831264499772787*j - 0.007796991222405588*n >= 0)  &&  (1 + 0.3157894736842105*i - 0.3157894736842105*j - 0.1052631578947368*n >= 0)  &&  (1 + 0.2745098039215687*i + 0.0392156862745098*j - 0.0392156862745098*n >= 0)  &&  (1 + 0.1187214611872146*i + 0.0639269406392694*j - 0.0091324200913242*n >= 0)  &&  (1 - 0.003397989522865638*i + 0.00481381849072632*j + 0.006795979045731275*n >= 0)  &&  (1 - 0.002120291186656301*i - 0.01667962400169623*j >= 0)  &&  (1 - 0.01316734498443859*i - 0.01149150107732822*j + 0.01316734498443859*n >= 0)  &&  (1 + 0.05065856129685917*i + 0.03850050658561297*j - 0.002026342451874367*n >= 0)  &&  (1 + 0.03993855606758832*i - 0.03840245775729647*j - 0.001536098310291859*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(609 - 8*i - 7*j + 8*n >= 0)  &&  (19 + 6*i - 6*j - 2*n >= 0)  &&  (110 + 13*i + 7*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(609 - 8*i - 7*j + 8*n >= 0)  &&  (19 + 6*i - 6*j - 2*n >= 0)  &&  (110 + 13*i + 7*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,10) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,11) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,12) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,13) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,14) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,15) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,17) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [117+:5433-]|-->> [33m(1.308616722065968 - 0.003451802608028637*i - 0.005369470723600102*j - 0.009332651495781132*n >= 0)  &&  (1 + 0.3333512285218612*i - 0.3333017823338674*j - 4.997611019257053e-05*n >= 0)  &&  (1 + 0.2800059724019012*i + 0.04000085320027159*j + 4.266001357971366e-05*n >= 0)  &&  (1 + 0.1192706895207767*i + 0.06422267897272589*j + 5.204170427930421e-18*n >= 0)  &&  (1.228297362110312 + 0.002973621103117506*i + 0.001630695443645084*j - 0.01342925659472422*n >= 0)  &&  (1 - 0.003397989522865638*i + 0.00481381849072632*j + 0.006795979045731275*n >= 0)  &&  (1.26567562416619 + 0.0003811701924909469*i - 0.01924909472079283*j + 0.003239946636173051*n >= 0)  &&  (1 - 0.01027803399657399*i - 0.008433258663855581*j + 0.01871129266042957*n >= 0)  &&  (1 + 0.05069703333807316*i + 0.0385297453369356*j + 3.181282164968664e-05*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [117+:7108-]|-->> [33m(1.308616722065968 - 0.003451802608028637*i - 0.005369470723600102*j - 0.009332651495781132*n >= 0)  &&  (1 - 0.006132282084975908*i - 0.004380201489268506*j + 0.04117389399912396*n >= 0)  &&  (1.062477030503491 - 0.03234105108416024*i + 0.0117603822124219*j + 0.01690554943035649*n >= 0)  &&  (1 + 0.3333512285218612*i - 0.3333017823338674*j - 4.997611019257053e-05*n >= 0)  &&  (1.228297362110312 + 0.002973621103117506*i + 0.001630695443645084*j - 0.01342925659472422*n >= 0)  &&  (1 + 0.2800059724019012*i + 0.04000085320027159*j + 4.266001357971366e-05*n >= 0)  &&  (1.26567562416619 + 0.0003811701924909469*i - 0.01924909472079283*j + 0.003239946636173051*n >= 0)  &&  (1 - 0.01027803399657399*i - 0.008433258663855581*j + 0.01871129266042957*n >= 0)  &&  (1 + 0.1192706895207767*i + 0.06422267897272589*j + 5.204170427930421e-18*n >= 0)  &&  (1 + 0.05069703333807316*i + 0.0385297453369356*j + 3.181282164968664e-05*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [117+:8725-]|-->> [33m(3.682302771855011 - 0.04264392324093817*i - 0.0511727078891258*j - 0.06396588486140725*n >= 0)  &&  (1 - 0.006132282084975908*i - 0.004380201489268506*j + 0.04117389399912396*n >= 0)  &&  (1.062477030503491 - 0.03234105108416024*i + 0.0117603822124219*j + 0.01690554943035649*n >= 0)  &&  (1 + 0.3333512285218612*i - 0.3333017823338674*j - 4.997611019257053e-05*n >= 0)  &&  (1.228297362110312 + 0.002973621103117506*i + 0.001630695443645084*j - 0.01342925659472422*n >= 0)  &&  (1 + 0.2800059724019012*i + 0.04000085320027159*j + 4.266001357971366e-05*n >= 0)  &&  (1 + 0.1192706895207767*i + 0.06422267897272589*j + 5.204170427930421e-18*n >= 0)  &&  (1 - 0.01027803399657399*i - 0.008433258663855581*j + 0.01871129266042957*n >= 0)  &&  (1 + 0.05069703333807316*i + 0.0385297453369356*j + 3.181282164968664e-05*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [117+:11200-]|-->> [33m(3.682302771855011 - 0.04264392324093817*i - 0.0511727078891258*j - 0.06396588486140725*n >= 0)  &&  (1 - 0.006132282084975908*i - 0.004380201489268506*j + 0.04117389399912396*n >= 0)  &&  (1.062477030503491 - 0.03234105108416024*i + 0.0117603822124219*j + 0.01690554943035649*n >= 0)  &&  (1 + 0.3333512285218612*i - 0.3333017823338674*j - 4.997611019257053e-05*n >= 0)  &&  (1.228297362110312 + 0.002973621103117506*i + 0.001630695443645084*j - 0.01342925659472422*n >= 0)  &&  (1 + 0.2800059724019012*i + 0.04000085320027159*j + 4.266001357971366e-05*n >= 0)  &&  (1 + 0.1192706895207767*i + 0.06422267897272589*j + 5.204170427930421e-18*n >= 0)  &&  (1 - 0.01027803399657399*i - 0.008433258663855581*j + 0.01871129266042957*n >= 0)  &&  (1 + 0.05069703333807316*i + 0.0385297453369356*j + 3.181282164968664e-05*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(864 - 10*i - 12*j - 15*n >= 0)  &&  (49 + 2*n >= 0)  &&  (1445 - 44*i + 16*j + 23*n >= 0)  &&  (3 + i - j >= 0)  &&  (25 + 7*i + j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(864 - 10*i - 12*j - 15*n >= 0)  &&  (49 + 2*n >= 0)  &&  (1445 - 44*i + 16*j + 23*n >= 0)  &&  (3 + i - j >= 0)  &&  (25 + 7*i + j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,0,58) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,59) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,60) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,61) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,62) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,63) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,64) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,65) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [617+:12477-]|-->> [33m(8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (1 + 0.9996492896246245*i - 0.9996563200380137*j + 1.507693219693351e-05*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0)  &&  (1 + 0.2799894259877241*i + 0.03999848942681773*j + 1.180135298650686e-06*n >= 0)  &&  (1 + 0.1192682500370547*i + 0.06422136540456792*j - 3.469446951953614e-18*n >= 0)  &&  (1 + 0.05071005079462938*i + 0.03853963860391833*j + 4.403340182713208e-06*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [617+:13199-]|-->> [33m(1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [617+:14152-]|-->> [33m(1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*j >= 0)  &&  (384 - 12*i + 5*j + 7*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(1 + 2*i - 2*j >= 0)  &&  (384 - 12*i + 5*j + 7*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,-77,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,-78,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,-79,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,-80,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (7,-84,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,-76,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,-78,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,-98,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [617+:15515-]|-->> [33m(1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [617+:16560-]|-->> [33m(1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 + 2*i - 2*j >= 0)  &&  (384 - 12*i + 5*j + 7*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(1 + 2*i - 2*j >= 0)  &&  (384 - 12*i + 5*j + 7*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 5 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (0,-77,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-1,-78,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-2,-79,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (-3,-80,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (7,-84,18) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (1,-76,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,-78,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[34m[1mTest Counter Example: (0,-98,16) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m?
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [617+:18531-]|-->> [33m(1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [617+:18823-]|-->> [33m(1 - 0.04162388487400234*i - 0.007757310928412461*j + 0.04939253260477045*n >= 0)  &&  (1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m[31m[3][0m[#r18,#s72] -->   [617+:22288-]|-->> [33m(1 - 0.04162388487400234*i - 0.007757310928412461*j + 0.04939253260477045*n >= 0)  &&  (1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m[31m[4][0m[#r24,#s96] -->   [617+:22900-]|-->> [33m(1 - 0.04162388487400234*i - 0.007757310928412461*j + 0.04939253260477045*n >= 0)  &&  (1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(264 - 11*i + 13*n >= 0)  &&  (1 + 2*i - 2*j >= 0)  &&  (13 + 6*i + 4*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(264 - 11*i + 13*n >= 0)  &&  (1 + 2*i - 2*j >= 0)  &&  (13 + 6*i + 4*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 6 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt[0m
[34m[1mTest Counter Example: (1,1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,0,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-1,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-2,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-3,-4) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-4,-5) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-5,-6) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[34m[1mTest Counter Example: (3,-6,-7) @/home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1][0m[#r6,#s24] -->   [617+:24425-]|-->> [33m(1 - 0.9996262803166118*i - 0.9996262803166118*j + 1.999264059700404*n >= 0)  &&  (1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m[31m[2][0m[#r12,#s48] -->   [617+:25696-]|-->> [33m(1 - 0.9996262803166118*i - 0.9996262803166118*j + 1.999264059700404*n >= 0)  &&  (1 + 1.999137862806516*i - 1.999122504203242*j - 1.342371291457312e-05*n >= 0)  &&  (1 + 1.999138620986072*i - 1.538176810811365e-05*n >= 0)  &&  (1 + 0.46134647827043*i + 0.3075643188469533*j - 1.485584812144225e-05*n >= 0)  &&  (8.688172043010752 - 0.05913978494623656*i - 0.03763440860215053*j - 0.02150537634408603*n >= 0)  &&  (3.058306107062075 + 0.001507916561950238*i + 0.0005026388539834125*j - 0.031666247800955*n >= 0)  &&  (1 - 0.03119861154068648*i + 0.01302570162080302*j + 0.0181852048229768*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/dillig_07.inv >>> [0m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - i - j + 2*n >= 0)  &&  (1 + 2*i - 2*j >= 0) [0m

=====================time=========================
