[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target cggmp2005_variant_true
[  8%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/test/cggmp2005_variant_true.cpp.o
[ 16%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/cggmp2005_variant_true.dir/src/instrumentation.cpp.o
Linking CXX executable cggmp2005_variant_true
[100%] Built target cggmp2005_variant_true
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	1	2	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,1,2) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [2+:1162-]|-->> [33m(0.974795211090107 - 0.008191556395715185*low - 0.008821676118462508*mid + 0.03339634530560806*high >= 0)  &&  (1.058823529411765 - 0.03818369453044376*low + 0.01341589267285862*mid - 0.02063983488132095*high >= 0)  &&  (0.9927761350451023 + 0.006437848560841412*low + 0.005726690870981024*mid + 0.0007860163940562189*high >= 0)  &&  (0.9937348297823786 + 0.002116050868203224*low - 0.00626517021762131*mid + 0.00626517021762131*high >= 0)  &&  (1.000070849126784 - 0.006943214424882214*low - 0.006801516171313189*mid + 0.006872365298097701*high >= 0)  &&  (1.0359918200409 + 0.003680981595092024*low - 0.007361963190184048*mid - 0.01431492842535787*high >= 0)  &&  (0.9804707575290369 + 0.007297769554938843*low - 0.001644567787028472*mid + 0.01223147291602426*high >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [2+:3376-]|-->> [33m(1.022926500337154 - 0.005544317074998127*low - 0.01603356559526485*mid - 0.003446467370944781*high >= 0)  &&  (1.058823529411765 - 0.03818369453044376*low + 0.01341589267285862*mid - 0.02063983488132095*high >= 0)  &&  (0.9927761350451023 + 0.006437848560841412*low + 0.005726690870981024*mid + 0.0007860163940562189*high >= 0)  &&  (0.974795211090107 - 0.008191556395715185*low - 0.008821676118462508*mid + 0.03339634530560806*high >= 0)  &&  (0.9804707575290369 + 0.007297769554938843*low - 0.001644567787028472*mid + 0.01223147291602426*high >= 0)  &&  (1.0359918200409 + 0.003680981595092024*low - 0.007361963190184048*mid - 0.01431492842535787*high >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [2+:5292-]|-->> [33m(1.012618296529968 + 0.02628811777076761*low - 0.03575184016824395*mid + 0.01156677181913775*high >= 0)  &&  (1.058823529411765 - 0.03818369453044376*low + 0.01341589267285862*mid - 0.02063983488132095*high >= 0)  &&  (0.9927761350451023 + 0.006437848560841412*low + 0.005726690870981024*mid + 0.0007860163940562189*high >= 0)  &&  (1.06891531181752 - 0.003397233681145353*low - 0.01650084930842028*mid - 0.02620723125454987*high >= 0)  &&  (1.022926500337154 - 0.005544317074998127*low - 0.01603356559526485*mid - 0.003446467370944781*high >= 0)  &&  (1.0359918200409 + 0.003680981595092024*low - 0.007361963190184048*mid - 0.01431492842535787*high >= 0)  &&  (0.9804707575290369 + 0.007297769554938843*low - 0.001644567787028472*mid + 0.01223147291602426*high >= 0)  &&  (0.974795211090107 - 0.008191556395715185*low - 0.008821676118462508*mid + 0.03339634530560806*high >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [2+:7261-]|-->> [33m(0.8726114649681529 + 0.01910828025477707*low - 0.02547770700636943*mid + 0.1082802547770701*high >= 0)  &&  (1.058823529411765 - 0.03818369453044376*low + 0.01341589267285862*mid - 0.02063983488132095*high >= 0)  &&  (0.9927761350451023 + 0.006437848560841412*low + 0.005726690870981024*mid + 0.0007860163940562189*high >= 0)  &&  (1 + 0.06280193236714976*low - 0.06763285024154592*mid + 0.03381642512077295*high >= 0)  &&  (1.01511879049676 + 0.06479481641468683*low - 0.01079913606911447*mid - 0.002159827213822894*high >= 0)  &&  (1.06891531181752 - 0.003397233681145353*low - 0.01650084930842028*mid - 0.02620723125454987*high >= 0)  &&  (1.022926500337154 - 0.005544317074998127*low - 0.01603356559526485*mid - 0.003446467370944781*high >= 0)  &&  (0.974795211090107 - 0.008191556395715185*low - 0.008821676118462508*mid + 0.03339634530560806*high >= 0) 
[0m[31m[5Pure Random][0m[#r150,#s0] -->   [2+:8694-]|-->> [33m(0.9902788436940394 + 0.0117677155282681*low + 0.02967510872345869*mid - 0.002046559222307496*high >= 0)  &&  (1.058823529411765 - 0.03818369453044376*low + 0.01341589267285862*mid - 0.02063983488132095*high >= 0)  &&  (0.6428571428571429 + 0.1428571428571428*low - 0.07142857142857142*mid + 0.2142857142857142*high >= 0)  &&  (1.038461538461539 + 0.1538461538461538*low - 0.1153846153846154*mid + 0.03846153846153846*high >= 0)  &&  (1.112697220135237 + 0.0135236664162284*low - 0.007513148009015778*mid - 0.05259203606311044*high >= 0)  &&  (0.8726114649681529 + 0.01910828025477707*low - 0.02547770700636943*mid + 0.1082802547770701*high >= 0)  &&  (1 + 0.06280193236714976*low - 0.06763285024154592*mid + 0.03381642512077295*high >= 0)  &&  (0.974795211090107 - 0.008191556395715185*low - 0.008821676118462508*mid + 0.03339634530560806*high >= 0)  &&  (1.022926500337154 - 0.005544317074998127*low - 0.01603356559526485*mid - 0.003446467370944781*high >= 0)  &&  (1.01511879049676 + 0.06479481641468683*low - 0.01079913606911447*mid - 0.002159827213822894*high >= 0)  &&  (1.06891531181752 - 0.003397233681145353*low - 0.01650084930842028*mid - 0.02620723125454987*high >= 0) 
[0m[31m[6Pure Random][0m[#r180,#s0] -->   [2+:10089-]|-->> [33m(0.9902788436940394 + 0.0117677155282681*low + 0.02967510872345869*mid - 0.002046559222307496*high >= 0)  &&  (1.058823529411765 - 0.03818369453044376*low + 0.01341589267285862*mid - 0.02063983488132095*high >= 0)  &&  (0.6428571428571429 + 0.1428571428571428*low - 0.07142857142857142*mid + 0.2142857142857142*high >= 0)  &&  (1.038461538461539 + 0.1538461538461538*low - 0.1153846153846154*mid + 0.03846153846153846*high >= 0)  &&  (1.112697220135237 + 0.0135236664162284*low - 0.007513148009015778*mid - 0.05259203606311044*high >= 0)  &&  (0.8726114649681529 + 0.01910828025477707*low - 0.02547770700636943*mid + 0.1082802547770701*high >= 0)  &&  (1 + 0.06280193236714976*low - 0.06763285024154592*mid + 0.03381642512077295*high >= 0)  &&  (0.974795211090107 - 0.008191556395715185*low - 0.008821676118462508*mid + 0.03339634530560806*high >= 0)  &&  (1.022926500337154 - 0.005544317074998127*low - 0.01603356559526485*mid - 0.003446467370944781*high >= 0)  &&  (1.01511879049676 + 0.06479481641468683*low - 0.01079913606911447*mid - 0.002159827213822894*high >= 0)  &&  (1.06891531181752 - 0.003397233681145353*low - 0.01650084930842028*mid - 0.02620723125454987*high >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 6 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(168 + 2*low + 5*mid >= 0)  &&  (868 - 31*low + 11*mid - 17*high >= 0)  &&  (9 + 2*low - mid + 3*high >= 0)  &&  (207 + 13*low - 14*mid + 7*high >= 0)  &&  (576 + 7*low - 27*high >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(168 + 2*low + 5*mid >= 0)  &&  (868 - 31*low + 11*mid - 17*high >= 0)  &&  (9 + 2*low - mid + 3*high >= 0)  &&  (207 + 13*low - 14*mid + 7*high >= 0)  &&  (576 + 7*low - 27*high >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt[0m
[34m[1mTest Counter Example: (0,38,76) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,39,78) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,40,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,41,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,42,84) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,43,86) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,44,88) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,45,90) @/home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [342+:11097-]|-->> [33m(0.6434145104449995 + 0.142981002321111*low - 0.07156932081944432*mid + 0.2140774051872224*high >= 0)  &&  (1.000009637612288 - 0.05422384683939208*low + 0.08292321934496792*mid + 0.05421420922710446*high >= 0)  &&  (1.000007537207816 - 0.09520764391108004*low - 0.1904209596335603*mid + 0.09520010670326395*high >= 0)  &&  (1.000015414651673 + 0.04829637043435837*low - 0.1545514683202814*mid + 0.07726802683430423*high >= 0)  &&  (4.542039355992838 + 0.04830053667262964*low - 0.0178890876565295*mid - 0.03041144901610013*high >= 0)  &&  (4.37883959044369 + 0.1092150170648462*low + 0.006825938566552892*mid - 0.04095563139931735*high >= 0)  &&  (1.000001593488378 + 0.142852362392008*low + 0.09523458956366304*mid - 0.0476180915260207*high >= 0)  &&  (1.000017119236366 + 0.08330231365999137*low + 0.1666266930522897*mid - 0.08331943289635735*high >= 0)  &&  (2.657563658868567 - 0.01921002927246026*low - 0.001592696299115584*mid - 0.01762102583787074*high >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [342+:12942-]|-->> [33m(0.6434145104449995 + 0.142981002321111*low - 0.07156932081944432*mid + 0.2140774051872224*high >= 0)  &&  (1.000009637612288 - 0.05422384683939208*low + 0.08292321934496792*mid + 0.05421420922710446*high >= 0)  &&  (1.000007537207816 - 0.09520764391108004*low - 0.1904209596335603*mid + 0.09520010670326395*high >= 0)  &&  (1.000015414651673 + 0.04829637043435837*low - 0.1545514683202814*mid + 0.07726802683430423*high >= 0)  &&  (4.542039355992838 + 0.04830053667262964*low - 0.0178890876565295*mid - 0.03041144901610013*high >= 0)  &&  (4.37883959044369 + 0.1092150170648462*low + 0.006825938566552892*mid - 0.04095563139931735*high >= 0)  &&  (1.000001593488378 + 0.142852362392008*low + 0.09523458956366304*mid - 0.0476180915260207*high >= 0)  &&  (1.000017119236366 + 0.08330231365999137*low + 0.1666266930522897*mid - 0.08331943289635735*high >= 0)  &&  (2.657563658868567 - 0.01921002927246026*low - 0.001592696299115584*mid - 0.01762102583787074*high >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(9 + 2*low - mid + 3*high >= 0)  &&  (240 - 13*low + 20*mid + 13*high >= 0)  &&  (21 - 2*low - 4*mid + 2*high >= 0)  &&  (12 + low + 2*mid - high >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/cggmp2005_variant_true.inv >>> [0m(9 + 2*low - mid + 3*high >= 0)  &&  (240 - 13*low + 20*mid + 13*high >= 0)  &&  (21 - 2*low - 4*mid + 2*high >= 0)  &&  (12 + low + 2*mid - high >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00003.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
