[ 20%] [34mCompiling cfg2init...[0m[32m[DONE][0m
[ 40%] [34mCompiling cfg2test...[0m[32m[DONE][0m
[ 60%] [34mCompiling cfg2verif...[0m[32m[DONE][0m
[ 80%] [34mCompiling smt2solver...[0m[32m[DONE][0m
[100%] [34mCompiling model_parse...[0m[32m[DONE][0m
[34mConverting the given config file to a valid cplusplus file...[0mLearners [[--> conjunctive]][32m[1m[DONE][0m
[34mGenerating CMakeLists file for further construction...[0m[32m[1m[DONE][0m
[34mBuild the project...[0m
Scanning dependencies of target down
[  8%] Building CXX object CMakeFiles/down.dir/test/down.cpp.o
[ 16%] Building CXX object CMakeFiles/down.dir/src/linear_learner.cpp.o
[ 25%] Building CXX object CMakeFiles/down.dir/src/svm_core.cpp.o
[ 33%] Building CXX object CMakeFiles/down.dir/src/color.cpp.o
[ 41%] Building CXX object CMakeFiles/down.dir/src/state.cpp.o
[ 50%] Building CXX object CMakeFiles/down.dir/src/polynomial.cpp.o
[ 58%] Building CXX object CMakeFiles/down.dir/src/iif.cpp.o
[ 66%] Building CXX object CMakeFiles/down.dir/src/config.cpp.o
[ 75%] Building CXX object CMakeFiles/down.dir/src/classifier.cpp.o
[ 83%] Building CXX object CMakeFiles/down.dir/src/poly_learner.cpp.o
[ 91%] Building CXX object CMakeFiles/down.dir/src/conjunctive_learner.cpp.o
[100%] Building CXX object CMakeFiles/down.dir/src/instrumentation.cpp.o
Linking CXX executable down
[100%] Built target down
[32mGEN INIT[0m
[34mGenerating a C file to get initial positive value by KLEE...[0m[32m[1m[Done][0m
[33mLOOKING FOR SMT for Z3
[33m  1)---->[0][0m
[33m  2)---->[1] :::::: 0	0	0	
[0m[34mRunning the project to generate invariant candidiate...[0m
[32m[1m--------------------------------------------- Iteration 1 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[34m[1mTest Counter Example: (0,0,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1+:436-]|-->> [33m(1 - 0.01601354992686119*i - 0.002771575948879822*k - 0.006620986988990685*n >= 0)  &&  (1 + 0.002110716684255973*i + 0.01237647510313729*k - 0.005852441715437014*n >= 0)  &&  (1 - 0.01079444481010992*i + 0.01145264266438491*k + 0.00394918712564997*n >= 0)  &&  (1 + 0.00805669526296158*i + 0.01372622155911973*k + 0.006713912719134651*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1+:713-]|-->> [33m(1 - 0.01601354992686119*i - 0.002771575948879822*k - 0.006620986988990685*n >= 0)  &&  (1 + 0.002110716684255973*i + 0.01237647510313729*k - 0.005852441715437014*n >= 0)  &&  (1 - 0.01079444481010992*i + 0.01145264266438491*k + 0.00394918712564997*n >= 0)  &&  (1 + 0.00805669526296158*i + 0.01372622155911973*k + 0.006713912719134651*n >= 0)  &&  (1 + 0.001384767556874382*i + 0.006923837784371909*k - 0.01859545004945598*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1+:1052-]|-->> [33m(1 - 0.01601354992686119*i - 0.002771575948879822*k - 0.006620986988990685*n >= 0)  &&  (1 + 0.002824858757062147*i + 0.0480225988700565*k - 0.02259887005649718*n >= 0)  &&  (1 - 0.01079444481010992*i + 0.01145264266438491*k + 0.00394918712564997*n >= 0)  &&  (1 + 0.00805669526296158*i + 0.01372622155911973*k + 0.006713912719134651*n >= 0)  &&  (1 + 0.001384767556874382*i + 0.006923837784371909*k - 0.01859545004945598*n >= 0)  &&  (1 + 0.012*i + 0.0248*k - 0.0064*n >= 0) 
[0m[31m[4Pure Random][0m[#r120,#s0] -->   [1+:1191-]|-->> [33m(1 - 0.01601354992686119*i - 0.002771575948879822*k - 0.006620986988990685*n >= 0)  &&  (1 + 0.002824858757062147*i + 0.0480225988700565*k - 0.02259887005649718*n >= 0)  &&  (1 - 0.01079444481010992*i + 0.01145264266438491*k + 0.00394918712564997*n >= 0)  &&  (1 + 0.00805669526296158*i + 0.01372622155911973*k + 0.006713912719134651*n >= 0)  &&  (1 + 0.001384767556874382*i + 0.006923837784371909*k - 0.01859545004945598*n >= 0)  &&  (1 + 0.012*i + 0.0248*k - 0.0064*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 4 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(62 - i >= 0)  &&  (310 + 15*k - 7*n >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down.inv >>> [0m(62 - i >= 0)  &&  (310 + 15*k - 7*n >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty II (invariant && loopcondition =S=> invariant) FAILS.
[0m
[32m[1m--------------------------------------------- Iteration 2 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[34m[1mTest Counter Example: (0,0,45) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,46) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,47) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,48) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,49) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,50) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,51) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,52) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [397+:1652-]|-->> [33m(1.237503171783811 - 0.02638924130931236*i + 0.01725450393301193*k + 0.004567368688150216*n >= 0)  &&  (1 - 0.04905922501095424*i + 0.07170194424677928*k - 2.968495311436725e-06*n >= 0)  &&  (1 + 0.006203078350097105*i + 0.008406040754804488*k + 0.002608771268732427*n >= 0)  &&  (1.664435655613021 + 0.01003954974140554*i + 0.01855795558259811*k - 0.01277760876178886*n >= 0)  &&  (2.787234042553192 - 0.001636661211129297*i + 0.02127659574468085*k - 0.03436988543371523*n >= 0)  &&  (3.026222238918178 - 0.01299802835435698*i + 0.01297917983690172*k - 0.03896581228688803*n >= 0)  &&  (1 + 0.01264322590971343*i + 0.02612933354674109*k - 8.673617379884035e-19*n >= 0)  &&  (1 + 0.006096945469803758*i + 0.05487250922823382*k + 5.607941787985626e-06*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [397+:2256-]|-->> [33m(1.237503171783811 - 0.02638924130931236*i + 0.01725450393301193*k + 0.004567368688150216*n >= 0)  &&  (1 - 0.04905922501095424*i + 0.07170194424677928*k - 2.968495311436725e-06*n >= 0)  &&  (1 + 0.006203078350097105*i + 0.008406040754804488*k + 0.002608771268732427*n >= 0)  &&  (1.664435655613021 + 0.01003954974140554*i + 0.01855795558259811*k - 0.01277760876178886*n >= 0)  &&  (2.787234042553192 - 0.001636661211129297*i + 0.02127659574468085*k - 0.03436988543371523*n >= 0)  &&  (3.026222238918178 - 0.01299802835435698*i + 0.01297917983690172*k - 0.03896581228688803*n >= 0)  &&  (1 + 0.01264322590971343*i + 0.02612933354674109*k - 8.673617379884035e-19*n >= 0)  &&  (1 + 0.006096945469803758*i + 0.05487250922823382*k + 5.607941787985626e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(78 - n >= 0)  &&  (224 - 11*i + 16*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down.inv >>> [0m(78 - n >= 0)  &&  (224 - 11*i + 16*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 3 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[34m[1mTest Counter Example: (0,0,79) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,80) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,81) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,82) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,83) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,84) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,85) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[34m[1mTest Counter Example: (0,0,86) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m+
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1065+:2633-]|-->> [33m(1 - 0.02503305440546717*i + 0.01890678376416173*k + 0.006133574993920768*n >= 0)  &&  (1.50250061896509 + 0.003268135677147809*i + 0.01237930180737806*k - 0.005843030453082446*n >= 0)  &&  (1 + 0.007084539288954166*i + 0.01036761847164024*k + 0.003887856926865091*n >= 0)  &&  (1.234652114597544 + 0.01296043656207367*i + 0.02251023192360164*k - 0.002728512960436563*n >= 0)  &&  (1.908850726552179 + 0.011889035667107*i + 0.04887714663143987*k - 0.01056803170409511*n >= 0)  &&  (3.606060606060606 - 0.03030303030303031*i + 0.07575757575757577*k - 0.03030303030303028*n >= 0)  &&  (4.016540501530883 - 0.06137834148358177*i + 0.06138784171825622*k - 0.03507605234338235*n >= 0)  &&  (1 + 0.003448265499459105*i + 0.05862051349080478*k + 8.586162456719615e-08*n >= 0)  &&  (1 - 0.05836099784680584*i + 0.06614246422637995*k + 2.330577849325721e-06*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1065+:2879-]|-->> [33m(1 - 0.02503305440546717*i + 0.01890678376416173*k + 0.006133574993920768*n >= 0)  &&  (1.50250061896509 + 0.003268135677147809*i + 0.01237930180737806*k - 0.005843030453082446*n >= 0)  &&  (1 + 0.007084539288954166*i + 0.01036761847164024*k + 0.003887856926865091*n >= 0)  &&  (1.234652114597544 + 0.01296043656207367*i + 0.02251023192360164*k - 0.002728512960436563*n >= 0)  &&  (1.908850726552179 + 0.011889035667107*i + 0.04887714663143987*k - 0.01056803170409511*n >= 0)  &&  (3.606060606060606 - 0.03030303030303031*i + 0.07575757575757577*k - 0.03030303030303028*n >= 0)  &&  (4.016540501530883 - 0.06137834148358177*i + 0.06138784171825622*k - 0.03507605234338235*n >= 0)  &&  (1 + 0.003448265499459105*i + 0.05862051349080478*k + 8.586162456719615e-08*n >= 0)  &&  (1 - 0.05836099784680584*i + 0.06614246422637995*k + 2.330577849325721e-06*n >= 0) 
[0m[31m[3Pure Random][0m[#r90,#s0] -->   [1065+:3549-]|-->> [33m(1 - 0.02503305440546717*i + 0.01890678376416173*k + 0.006133574993920768*n >= 0)  &&  (1.50250061896509 + 0.003268135677147809*i + 0.01237930180737806*k - 0.005843030453082446*n >= 0)  &&  (1 + 0.007084539288954166*i + 0.01036761847164024*k + 0.003887856926865091*n >= 0)  &&  (1.234652114597544 + 0.01296043656207367*i + 0.02251023192360164*k - 0.002728512960436563*n >= 0)  &&  (1.908850726552179 + 0.011889035667107*i + 0.04887714663143987*k - 0.01056803170409511*n >= 0)  &&  (3.606060606060606 - 0.03030303030303031*i + 0.07575757575757577*k - 0.03030303030303028*n >= 0)  &&  (4.016540501530883 - 0.06137834148358177*i + 0.06138784171825622*k - 0.03507605234338235*n >= 0)  &&  (1 + 0.003448265499459105*i + 0.05862051349080478*k + 8.586162456719615e-08*n >= 0)  &&  (1 - 0.05836099784680584*i + 0.06614246422637995*k + 2.330577849325721e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 3 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(120 - 7*i + 8*k >= 0)  &&  (65 - i + k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down.inv >>> [0m(120 - 7*i + 8*k >= 0)  &&  (65 - i + k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
  |-- processing kleeAssert00002.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [31m[1m [sat] [FAIL][0m >>> counter example(s) are  stored at [33m/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[31m>>>NOT A VALID INVARIVANT...Reason: [1mProperty I (precondition ==> invariant) FAILS. 
[0m
[32m[1m--------------------------------------------- Iteration 4 --------------------------------------------------------[0m[0m
[31m>>>> run counter example from file %%/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt[0m
[34m[1mTest Counter Example: (1,0,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[34m[1mTest Counter Example: (0,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-1,-2,-1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[34m[1mTest Counter Example: (-2,-3,-2) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-4,-3) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-1,1) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[34m[1mTest Counter Example: (1,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[34m[1mTest Counter Example: (2,-1,0) @/home/lijiaying/Research/GitHub/ZILU/tmp/down.cnt --> [0m-
[0m[33m>>>> Conjunctive Learner-----------------------
[0m[31m[1Pure Random][0m[#r30,#s0] -->   [1065+:3798-]|-->> [33m(1 - 0.02503305440546717*i + 0.01890678376416173*k + 0.006133574993920768*n >= 0)  &&  (1.50250061896509 + 0.003268135677147809*i + 0.01237930180737806*k - 0.005843030453082446*n >= 0)  &&  (1 + 0.007084539288954166*i + 0.01036761847164024*k + 0.003887856926865091*n >= 0)  &&  (1.234652114597544 + 0.01296043656207367*i + 0.02251023192360164*k - 0.002728512960436563*n >= 0)  &&  (1.908850726552179 + 0.011889035667107*i + 0.04887714663143987*k - 0.01056803170409511*n >= 0)  &&  (3.606060606060606 - 0.03030303030303031*i + 0.07575757575757577*k - 0.03030303030303028*n >= 0)  &&  (4.016540501530883 - 0.06137834148358177*i + 0.06138784171825622*k - 0.03507605234338235*n >= 0)  &&  (1 + 0.003448265499459105*i + 0.05862051349080478*k + 8.586162456719615e-08*n >= 0)  &&  (1 - 1.999983867320428*i + 1.999991792809944*k - 7.828934339038085e-06*n >= 0) 
[0m[31m[2Pure Random][0m[#r60,#s0] -->   [1065+:3937-]|-->> [33m(1 - 0.02503305440546717*i + 0.01890678376416173*k + 0.006133574993920768*n >= 0)  &&  (1.50250061896509 + 0.003268135677147809*i + 0.01237930180737806*k - 0.005843030453082446*n >= 0)  &&  (1 + 0.007084539288954166*i + 0.01036761847164024*k + 0.003887856926865091*n >= 0)  &&  (1.234652114597544 + 0.01296043656207367*i + 0.02251023192360164*k - 0.002728512960436563*n >= 0)  &&  (1.908850726552179 + 0.011889035667107*i + 0.04887714663143987*k - 0.01056803170409511*n >= 0)  &&  (3.606060606060606 - 0.03030303030303031*i + 0.07575757575757577*k - 0.03030303030303028*n >= 0)  &&  (4.016540501530883 - 0.06137834148358177*i + 0.06138784171825622*k - 0.03507605234338235*n >= 0)  &&  (1 + 0.003448265499459105*i + 0.05862051349080478*k + 8.586162456719615e-08*n >= 0)  &&  (1 - 1.999983867320428*i + 1.999991792809944*k - 7.828934339038085e-06*n >= 0) 
[0m---------------------------------------------------
Finish running svm_i for 2 times.
[33m  Hypothesis Invairant(Conjunctive): { [32m(1 - 2*i + 2*k >= 0) [33m }[0m
save the training dataset to file /home/lijiaying/Research/GitHub/ZILU/tmp/down.ds
[34mInvariant file is located at /home/lijiaying/Research/GitHub/ZILU/tmp/down.inv >>> [0m(1 - 2*i + 2*k >= 0) 
[34mGenerating a new config file contains the invariant candidate...[0m[32m[1m[Done][0m
[34mGenerating three C files to do the verification by KLEE...[0m[32m[1m[Done][0m
[32mCompiling the C files and Run KLEE...1[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...2[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[32mCompiling the C files and Run KLEE...3[0m
[34mRunning KLEE to generate path condition[0m
  |-- processing kleeAssert00001.smt2 ---> [32m[1m [unsat] [PASS][0m
[1m[32m-----------------------------------------------------------finish proving---------------------------------------------------------------[0m
[32mThe invariant can be [33m(1 - 2*i + 2*k >= 0) [0m

=====================time=========================
